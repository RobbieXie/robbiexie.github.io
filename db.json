{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1644243794696},{"_id":"themes/landscape/.npmignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1644243794693},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1644243794693},{"_id":"themes/landscape/_config.yml","hash":"79ac6b9ed6a4de5a21ea53fc3f5a3de92e2475ff","modified":1644243794693},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1644243794694},{"_id":"themes/landscape/README.md","hash":"37fae88639ef60d63bd0de22314d7cc4c5d94b07","modified":1644243794693},{"_id":"themes/landscape/package.json","hash":"544f21a0b2c7034998b36ae94dba6e3e0f39f228","modified":1644243794694},{"_id":"themes/landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1644243794694},{"_id":"themes/landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1644243794696},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1644243794696},{"_id":"themes/landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1644243794696},{"_id":"themes/landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1644243794696},{"_id":"themes/landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1644243794697},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1644243794696},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1644243794696},{"_id":"themes/landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1644243794696},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1644243794697},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1644243794697},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1644243794697},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1644243794694},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1644243794697},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1644243794697},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1644243794697},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1644243794697},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1644243794697},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1644243794698},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1644243794695},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"d0d753d39038284d52b10e5075979cc97db9cd20","modified":1644243794698},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1644243794698},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"950ddd91db8718153b329b96dc14439ab8463ba5","modified":1644243794698},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"c4c835615d96a950d51fa2c3b5d64d0596534fed","modified":1644243794698},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"93518893cf91287e797ebac543c560e2a63b8d0e","modified":1644243794698},{"_id":"themes/landscape/layout/_partial/gauges-analytics.ejs","hash":"aad6312ac197d6c5aaf2104ac863d7eba46b772a","modified":1644243794698},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1644243794699},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"7e749050be126eadbc42decfbea75124ae430413","modified":1644243794698},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1644243794699},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"5abf77aec957d9445fc71a8310252f0013c84578","modified":1644243794699},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1644243794699},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1644243794704},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1644243794699},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1644243794704},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1644243794698},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1644243794704},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1644243794705},{"_id":"themes/landscape/source/css/_variables.styl","hash":"628e307579ea46b5928424313993f17b8d729e92","modified":1644243794705},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1644243794705},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1644243794705},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1644243794711},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1644243794712},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1644243794712},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1644243794711},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1644243794711},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1644243794711},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1644243794712},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1644243794705},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1644243794705},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1644243794712},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1644243794707},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1644243794706},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1644243794707},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1644243794707},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1644243794707},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1644243794706},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1644243794706},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1644243794710},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1644243794709},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1644243794710},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1644243794710},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1644243794710},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1644243794711},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1644243794711},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1644243794710},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1644243794710},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1644243794711},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1644243794708},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1644243794706},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1644243794709},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1644243794713},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1644243794713},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1644243794713},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1644243794713},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1644243794713},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1644243794713},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1644243794709},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1644243794710},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1644243794708},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1553176816000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1553176816000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1553176816000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1553176816000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1553176816000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1553176816000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1553176816000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1553176816000},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1553176816000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1553176816000},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1553176816000},{"_id":"themes/next/.gitignore","hash":"0b5c2ffd41f66eb1849d6426ba8cf9649eeed329","modified":1553176816000},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1553176816000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1553176816000},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1553176816000},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1553176816000},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1553176816000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1553176816000},{"_id":"themes/next/README.cn.md","hash":"263b74f1ac7c0f6f9424b8cced4b0b320ae61efc","modified":1553176816000},{"_id":"themes/next/package.json","hash":"036d3a1346203d2f1a3958024df7f74e7ac07bfe","modified":1553176816000},{"_id":"themes/next/README.md","hash":"287c7e6b7a6ddf75d815dda0df8bd228e3f285c5","modified":1553176816000},{"_id":"themes/next/bower.json","hash":"0674f11d3d514e087a176da0e1d85c2286aa5fba","modified":1553176816000},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1553176816000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1553176816000},{"_id":"themes/next/_config.yml","hash":"0355889bf27c4d45f09fb7f801149d1ffba60324","modified":1685685855328},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"50d48c47162817a3810a9d9ad51104e83947419a","modified":1553176816000},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"902f627155a65099e0a37842ff396a58d0dc306f","modified":1553176816000},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1553176816000},{"_id":"themes/next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1553176816000},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1553176816000},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1553176816000},{"_id":"themes/next/layout/index.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1647595730704},{"_id":"themes/next/layout/_layout.swig","hash":"493f391c88ddf75c07a041910bc47d9d9c4f781a","modified":1685675806038},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1553176816000},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1553176816000},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1553176816000},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1553176816000},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1553176816000},{"_id":"themes/next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1553176816000},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1553176816000},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1553176816000},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1553176816000},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1553176816000},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1553176816000},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1553176816000},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1553176816000},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1553176816000},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1553176816000},{"_id":"themes/next/languages/vi.yml","hash":"fd08d3c8d2c62965a98ac420fdaf95e54c25d97c","modified":1553176816000},{"_id":"themes/next/scripts/merge-configs.js","hash":"81e86717ecfb775986b945d17f0a4ba27532ef07","modified":1553176816000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"16ef56d0dea94638de7d200984c90ae56f26b4fe","modified":1553176816000},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1553176816000},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1553176816000},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1553176816000},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1553176816000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1553176816000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1553176816000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1553176816000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1553176816000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4a6f5b1792b2e5262b7fdab9a716b3108e2f09c7","modified":1553176816000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"c4d6181f5d3db5365e622f78714af8cc58d7a45e","modified":1553176816000},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1553176816000},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b94fe8f3279daea5623c49ef4bb35917ba57510","modified":1553176816000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1553176816000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1553176816000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1553176816000},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1553176816000},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1553176816000},{"_id":"themes/next/layout/_macro/post.swig","hash":"446a35a2cd389f8cfc3aa38973a9b44ad0740134","modified":1553176816000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1553176816000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1553176816000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1553176816000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"6a54c3c85ff6b19d275827a327abbf4bd99b2ebf","modified":1553176816000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1553176816000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1553176816000},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1553176816000},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1553176816000},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1553176816000},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1553176816000},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1553176816000},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1553176816000},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1553176816000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1553176816000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1553176816000},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1553176816000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1553176816000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1553176816000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1553176816000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1553176816000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1553176816000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1553176816000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1553176816000},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1553176816000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1553176816000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1553176816000},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1553176816000},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1553176816000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1553176816000},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1553176816000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1553176816000},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1553176816000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1553176816000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1553176816000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1553176816000},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1553176816000},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1553176816000},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1553176816000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1553176816000},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1553176816000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1553176816000},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1553176816000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1553176816000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1553176816000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1553176816000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1553176816000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1553176816000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1553176816000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1553176816000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1553176816000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1553176816000},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1553176816000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1553176816000},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1553176816000},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1553176816000},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1553176816000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1553176816000},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1553176816000},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1553176816000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1553176816000},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1553176816000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1553176816000},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1553176816000},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1553176816000},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1553176816000},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1553176816000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1553176816000},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1553176816000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1553176816000},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1553176816000},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1553176816000},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1553176816000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1553176816000},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"fcabbb241f894c9a6309c44e126cf3e8fea81fd4","modified":1553176816000},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1553176816000},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1553176816000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1553176816000},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1553176816000},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1553176816000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1553176816000},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1553176816000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1553176816000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1553176816000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1553176816000},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1553176816000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1553176816000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1553176816000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1553176816000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1553176816000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1553176816000},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1553176816000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1553176816000},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1553176816000},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1553176816000},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1553176816000},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1553176816000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1553176816000},{"_id":"themes/next/source/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1553176816000},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1553176816000},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1553176816000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1553176816000},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1553176816000},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1553176816000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1553176816000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1553176816000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1553176816000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1553176816000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1553176816000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1553176816000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1553176816000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1553176816000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1553176816000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1553176816000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1553176816000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1553176816000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1553176816000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1553176816000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1553176816000},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1553176816000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1553176816000},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1553176816000},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1553176816000},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1553176816000},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1553176816000},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1553176816000},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1553176816000},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1553176816000},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1553176816000},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1553176816000},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1553176816000},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1553176816000},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1553176816000},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1553176816000},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1553176816000},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1553176816000},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1553176816000},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1553176816000},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1553176816000},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1553176816000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1553176816000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1553176816000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1553176816000},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1553176816000},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1553176816000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1553176816000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1553176816000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1553176816000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1553176816000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1553176816000},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1553176816000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1553176816000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1553176816000},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1553176816000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1553176816000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1553176816000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1553176816000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1553176816000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1553176816000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1553176816000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1553176816000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1553176816000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1553176816000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1553176816000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"4aac01962520d60b03b23022ab601ad4bd19c08c","modified":1553176816000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1553176816000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1553176816000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1553176816000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1553176816000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1553176816000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1553176816000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1553176816000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9d16fa3c14ed76b71229f022b63a02fd0f580958","modified":1553176816000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1553176816000},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1553176816000},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1553176816000},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1553176816000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1553176816000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1553176816000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1553176816000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1553176816000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1553176816000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1553176816000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1553176816000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1553176816000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1553176816000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1553176816000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1553176816000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1553176816000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1553176816000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1553176816000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1553176816000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"262debfd4442fa03d9919ceb88b948339df03fb0","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"12937cae17c96c74d5c58db6cb29de3b2dfa14a2","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"37e951e734a252fe8a81f452b963df2ba90bfe90","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1553176816000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1553176816000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1553176816000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1553176816000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1553176816000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1553176816000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1553176816000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1553176816000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1553176816000},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1553176816000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1553176816000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1553176816000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1553176816000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1553176816000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1553176816000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1553176816000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1553176816000},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1553176816000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1553176816000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1553176816000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1553176816000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1553176816000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1553176816000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1553176816000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1553176816000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1553176816000},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1553176816000},{"_id":"source/_posts/network-base.md","hash":"3595993d9df6341d7c0bd8e3ef1952dc78f3d5f3","modified":1647575356025},{"_id":"source/_posts/network-base/ble_osi.png","hash":"28f046e30c26733cb6e1c60be3211339c7960be7","modified":1644244906784},{"_id":"source/_posts/network-base/hub_pic.png","hash":"b622fe47441ae60544b5d734abad02e4c8c977e2","modified":1644244906792},{"_id":"source/_posts/network-base/mac_addr.png","hash":"f280a915e5ea7b26e5d0390652881e005e6184c7","modified":1644244906800},{"_id":"source/_posts/network-base/preamble.png","hash":"e8dba837eced21d8fe0979d2f305669149516c98","modified":1644244906807},{"_id":"source/_posts/network-base/rip.png","hash":"4aa7c1e25de1c7a73c4f7a779e751ba657952b48","modified":1644244906812},{"_id":"source/_posts/network-base/网络通信.drawio","hash":"e691dca079f9a57915facc260b58b7fb0be90d34","modified":1644244906837},{"_id":"source/_posts/network-base/网络通信知识.md","hash":"0602d0fd70ba2d723390553442c3f401d2063f37","modified":1644246191488},{"_id":"source/_posts/network-base/bridge_pic.png","hash":"333cdaeb447f098fa70caa35bccdaa99b2b3f518","modified":1644244906785},{"_id":"source/_posts/network-base/data_link_layer_frame.png","hash":"685fc65810d349e3ff14719afcd54577b1024a75","modified":1644244906786},{"_id":"source/_posts/network-base/datalinklayer_sublayers.png","hash":"fab13442dcfb78a0f6af787130bcd997cf42911d","modified":1644244906788},{"_id":"source/_posts/network-base/ip_group_question.png","hash":"13c8ca065688c6252b94926e15ead46f02bfeaf7","modified":1644244906794},{"_id":"source/_posts/network-base/icmp_kinds.png","hash":"82b5c920bf8c147a4fa20e9129cfb599186f6fa1","modified":1644244906793},{"_id":"source/_posts/network-base/net_sec_key.png","hash":"959a99fd3d000dc93b7fe5ee7dc16ba923b5e8e1","modified":1644244906803},{"_id":"source/_posts/network-base/osi_transfer_example.png","hash":"b2ad5138e315a3c55410c8d36da9bcc511e59127","modified":1644244906807},{"_id":"source/_posts/network-base/real_f5.png","hash":"8f8a4e71ea20fe9680223632c0e9a2c534d34651","modified":1644244906809},{"_id":"source/_posts/network-base/osi_pdu_pass.png","hash":"6f0ed990a8ca53f838ea69872929ac90d98eb7ac","modified":1644244906806},{"_id":"source/_posts/network-base/router_trans.png","hash":"3520b2e6cbc38cb53ffe0f23e9afbbd3feb906f3","modified":1644244906814},{"_id":"source/_posts/network-base/router_trans2.png","hash":"5dda52c8e5148ed2224451ec719876c460f3887d","modified":1644244906814},{"_id":"source/_posts/network-base/rtcp.png","hash":"37f707bcaf47495257ae127e55c0eb48d32e9ba6","modified":1644244906817},{"_id":"source/_posts/network-base/signature.png","hash":"52657bce57a29c3d9baa77d8de9764c5c1c2dca8","modified":1644244906819},{"_id":"source/_posts/network-base/ssl.png","hash":"4b0dbb19f1970a163d674c64f46a3d6cfda4da32","modified":1644244906821},{"_id":"source/_posts/network-base/socket2.png","hash":"22c429af443e5391c759431a63c2dea6e47aac73","modified":1644244906821},{"_id":"source/_posts/network-base/switch_net.png","hash":"833688339bbac22020f7c144caefee3201971271","modified":1644244906823},{"_id":"source/_posts/network-base/switch_pic.png","hash":"08d5cdc59a1dd86abda41607b9163e15ace3ccbd","modified":1644244906825},{"_id":"source/_posts/network-base/tcp_congest.png","hash":"d5fcb18b09538207b024b64298c006ccdcf2bfe2","modified":1644244906828},{"_id":"source/_posts/network-base/tcp_sack.png","hash":"d5b50cf059a89f1451ea013da2a7e3b4dd58522a","modified":1644244906832},{"_id":"source/_posts/network-base/av_protocols.png","hash":"6070df5e85e2bf1104bb56cfe5d5ab750ad32697","modified":1644244906783},{"_id":"source/_posts/network-base/http_protocol.png","hash":"956a72687000b546967573ae9d4cf8bf7e19ff1e","modified":1644244906791},{"_id":"source/_posts/network-base/ip_routing_protocol.png","hash":"ff73f9bb9a3dd0345158c77b37b1a69c42c238bb","modified":1644244906798},{"_id":"source/_posts/network-base/real_router.png","hash":"37d6a4c82ec62244741c3ae6eac5b114a5d00bde","modified":1644244906810},{"_id":"source/_posts/network-base/router_wan_lan.png","hash":"33972fafe76e6276a0125b4cf8dcac3cfb6fdd19","modified":1644244906815},{"_id":"source/_posts/network-base/sec_mac.png","hash":"6fffc178c079999f2492dfc5a4b6d1b70247ed42","modified":1644244906819},{"_id":"source/_posts/network-base/syscall.png","hash":"36e17f4f7372b145a1732d4a43f91c0d0b8c3f41","modified":1644244906825},{"_id":"source/_posts/network-base/tcp_buffer.png","hash":"3b7515de84ba81fd0bb117d0ed810d8bdec39c44","modified":1644244906826},{"_id":"source/_posts/network-base/tcp_bytes_stream.png","hash":"dbaef4e5c4d9c57e3babf67188715715e82038cc","modified":1644244906828},{"_id":"source/_posts/network-base/tcp_handshake.png","hash":"92416b995193aa6bcb55e12a953274890c555fc7","modified":1644244906829},{"_id":"source/_posts/network-base/tcp_slow_start.png","hash":"87aea97d9d882a0916aa99c971c9447e2c819023","modified":1644244906832},{"_id":"source/_posts/network-base/BGP_speaker.png","hash":"2f172d31d2888c50c3a527fce248e64fb386b601","modified":1644244906782},{"_id":"source/_posts/network-base/datalink_timewindow.png","hash":"c352ee002686e1f26b3250bfa8e401903a30aa9e","modified":1644244906787},{"_id":"source/_posts/network-base/manchester.png","hash":"11583a32aacce3406138606e937af1c911293bc7","modified":1644244906802},{"_id":"source/_posts/network-base/routing_table.png","hash":"70ce0bc1ae316ce399acbfa3e90257445c81e9f2","modified":1644244906816},{"_id":"source/_posts/network-base/rtp_protocol.png","hash":"affead0773274d04fb6163843bab50a5e4991dc3","modified":1644244906818},{"_id":"source/_posts/network-base/ssl_procedure.png","hash":"ff6285eeddef3199b28a7c51b09614095af793e3","modified":1644244906822},{"_id":"source/_posts/network-base/tcp_bye_handshake.png","hash":"61c2a43e0ce0c5eb1e794487a91a753c3ba0e965","modified":1644244906827},{"_id":"source/_posts/network-base/tcp_protocol.png","hash":"bb69543f95117629a63f251770c372173c0223e1","modified":1644244906830},{"_id":"source/_posts/network-base/tcp_rto.png","hash":"be246b6f79a32f27bcc6b2c5694fd252a96242f0","modified":1644244906831},{"_id":"source/_posts/network-base/tcp_window.png","hash":"ecf5757cb7494b534fd84ecd2847d219daa45998","modified":1644244906834},{"_id":"source/_posts/network-base/udp_protocol.png","hash":"c96ff0391c3641fde9d83a3bd0f3e7af19a4a5a5","modified":1644244906836},{"_id":"source/_posts/network-base/对称密钥分配.png","hash":"ae514bc20d3ed59e7baf5785b15743d7c549f701","modified":1644244906838},{"_id":"source/_posts/network-base/BGP_example.png","hash":"be2fd3b11330c884b8f1e14d4149c85bedcafcdf","modified":1644244906781},{"_id":"source/_posts/network-base/dhcp.png","hash":"97682e9b70cf12e04be8ea8affe702a5b18c0b81","modified":1644244906788},{"_id":"source/_posts/network-base/osi7.png","hash":"2925700a23fd734d060d98693ff210f4cf420f52","modified":1644244906804},{"_id":"source/_posts/network-base/ipsec.png","hash":"9a56b4cc9f4bc6965607f0cbb22fe4e917f4bed8","modified":1644244906799},{"_id":"source/_posts/network-base/smtp.png","hash":"0f9261fda58a905fcc45a9f2cfd08aa94b7bb7b3","modified":1644244906820},{"_id":"source/_posts/network-base/transport_process.png","hash":"8a0c8d4eb208ea2c5b3ad4111c9961e048ffff0a","modified":1644244906835},{"_id":"source/_posts/network-base/dns.png","hash":"be14f0794851f8bb348ca16b7b9219650e798bcf","modified":1644244906790},{"_id":"source/_posts/network-base/ip_offset.png","hash":"fc95e7d3312de3579aa4555f498dbcc65348b539","modified":1644244906796},{"_id":"source/_posts/network-base/ip_packet.png","hash":"8029dc9b7f484a4a84ee51cb810ed60639b78e8f","modified":1644244906797},{"_id":"source/_posts/network-base/ip_nets.png","hash":"8a2e82c204a57b6e661e364f2d8ef903b2f871d6","modified":1644244906794},{"_id":"source/_posts/network-base/tcp_state.png","hash":"f81ba52dfac75d4a266b9bffea3732eba945b13d","modified":1644244906833},{"_id":"source/_posts/network-base/real_switch.png","hash":"20c933bf507867fcdfc84a5a7e57d9e3bc10e518","modified":1644244906812},{"_id":"source/_posts/.hello-world.md.swp","hash":"3de4b155dd584e89b63c63806d3883dd1999a88b","modified":1644245212540},{"_id":"public/2022/02/07/hello-world/index.html","hash":"fa245b33af432902ad13e566bac2e400b095aef0","modified":1644248801010},{"_id":"public/archives/index.html","hash":"ba653532eecd42f84f3ce24d0967e605422069ba","modified":1743143648220},{"_id":"public/archives/2022/index.html","hash":"f02e202be8c8d3f0f639dd868e728a70cc8aa262","modified":1743143648220},{"_id":"public/archives/2022/02/index.html","hash":"f1c16d32e3d170adc4cdf6838eb1a430bb0f7bf5","modified":1743143648220},{"_id":"public/2022/02/07/network-base/index.html","hash":"e0cd2c606cfe90193c2b3770f910df244a724634","modified":1743143648220},{"_id":"public/index.html","hash":"2b3490b10a6b0c5961d6c1cd1085fb7e979daf5a","modified":1743143648220},{"_id":"source/_posts/编程规范文档/.DS_Store","hash":"abb5596f9c673388dcaf858e4c9059c1f279a35c","modified":1647575019149},{"_id":"source/_posts/编程规范文档/code_guideline.drawio","hash":"9af6f57a074e3aefc3690f7936f25429ec0aad1e","modified":1647484215160},{"_id":"source/_posts/编程规范文档/编程规范.md","hash":"ec7ec28d80595fcdff79b054407463276f342981","modified":1647575111310},{"_id":"source/_posts/编程规范文档/~$code_guideline.drawio.dtmp","hash":"efbe30e9578c31aab5d86747fbfbbae4688bfd46","modified":1647572066261},{"_id":"source/_posts/编程规范文档/git-1-1.png","hash":"c190d09d09fa379d9caf0bd9a4116f77853924ef","modified":1647572113744},{"_id":"source/_posts/编程规范文档/git-0.png","hash":"0ea3d642ba21a5b29112d7b65bd2b4b3eedca21d","modified":1647418794036},{"_id":"source/_posts/编程规范文档/git-2.png","hash":"75025ae0e58adfab8023f9bb1b61233bd957b965","modified":1647417970993},{"_id":"source/_posts/编程规范文档/git-1.png","hash":"da4a76a7baddb470ae660be92079d4ec4ec36730","modified":1647417752306},{"_id":"source/_posts/编程规范文档/design3.png","hash":"b0fa053a1528922f48e8fdf682abfdc3000180d5","modified":1647574745622},{"_id":"source/_posts/编程规范文档/git-4.png","hash":"9511885860c4ffef04b4647472cca6882b4b3093","modified":1647418350112},{"_id":"source/_posts/编程规范文档/git-3.png","hash":"e4b2b8f337dc39e486d1c59bead62400d4bc54a8","modified":1647418143903},{"_id":"source/_posts/编程规范文档/design1.png","hash":"ff92ebf24d2e8f67b8d24e5b7b4a11eb8e906a9e","modified":1647574035505},{"_id":"source/_posts/编程规范文档/design2.png","hash":"19c4c319e0630cf0eda942c63e7c721e920afe42","modified":1647574158397},{"_id":"source/_posts/编程规范文档/git-5.png","hash":"0a266abe72d3bc403340274346ecb370bf3c76f9","modified":1647418439903},{"_id":"source/_posts/编程规范文档/design-4.png","hash":"5fec7d0abfa764e659972bb7e3ef8da725cb7b5c","modified":1647574470161},{"_id":"source/_posts/编程规范文档/design4.png","hash":"7800655bd4d5394ff529d2dd43c36fd3ec84943d","modified":1647574593230},{"_id":"source/_posts/编程规范文档/design-1.png","hash":"4de1d7994313d515ce543248f8e330a1bfb711e9","modified":1647573274811},{"_id":"source/_posts/codingGuidelines/codingGuidelines.md","hash":"ec7ec28d80595fcdff79b054407463276f342981","modified":1647575111310},{"_id":"source/_posts/codingGuidelines/code_guideline.drawio","hash":"9af6f57a074e3aefc3690f7936f25429ec0aad1e","modified":1647484215160},{"_id":"source/_posts/codingGuidelines/.DS_Store","hash":"abb5596f9c673388dcaf858e4c9059c1f279a35c","modified":1647575019149},{"_id":"source/_posts/codingGuidelines/~$code_guideline.drawio.dtmp","hash":"efbe30e9578c31aab5d86747fbfbbae4688bfd46","modified":1647572066261},{"_id":"source/_posts/codingGuidelines/git-0.png","hash":"0ea3d642ba21a5b29112d7b65bd2b4b3eedca21d","modified":1647418794036},{"_id":"source/_posts/codingGuidelines/git-2.png","hash":"75025ae0e58adfab8023f9bb1b61233bd957b965","modified":1647417970993},{"_id":"source/_posts/codingGuidelines/git-1.png","hash":"da4a76a7baddb470ae660be92079d4ec4ec36730","modified":1647417752306},{"_id":"source/_posts/codingGuidelines/git-1-1.png","hash":"c190d09d09fa379d9caf0bd9a4116f77853924ef","modified":1647572113744},{"_id":"source/_posts/codingGuidelines/design3.png","hash":"b0fa053a1528922f48e8fdf682abfdc3000180d5","modified":1647574745622},{"_id":"source/_posts/codingGuidelines/git-3.png","hash":"e4b2b8f337dc39e486d1c59bead62400d4bc54a8","modified":1647418143903},{"_id":"source/_posts/codingGuidelines/git-4.png","hash":"9511885860c4ffef04b4647472cca6882b4b3093","modified":1647418350112},{"_id":"source/_posts/codingGuidelines/design2.png","hash":"19c4c319e0630cf0eda942c63e7c721e920afe42","modified":1647574158397},{"_id":"source/_posts/codingGuidelines/design1.png","hash":"ff92ebf24d2e8f67b8d24e5b7b4a11eb8e906a9e","modified":1647574035505},{"_id":"source/_posts/codingGuidelines/git-5.png","hash":"0a266abe72d3bc403340274346ecb370bf3c76f9","modified":1647418439903},{"_id":"source/_posts/codingGuidelines/design-4.png","hash":"5fec7d0abfa764e659972bb7e3ef8da725cb7b5c","modified":1647574470161},{"_id":"source/_posts/codingGuidelines/design4.png","hash":"7800655bd4d5394ff529d2dd43c36fd3ec84943d","modified":1647574593230},{"_id":"source/_posts/codingGuidelines/design-1.png","hash":"4de1d7994313d515ce543248f8e330a1bfb711e9","modified":1647573274811},{"_id":"source/.DS_Store","hash":"1ac8449e4c6700434c225057c38932eee9d4ebff","modified":1685611380288},{"_id":"source/_posts/.DS_Store","hash":"f1cbe35b2552b24000bb22031e56967439cc552a","modified":1685672974997},{"_id":"source/_posts/coding-guidelines.md","hash":"6c0a3327ed918ecb387619c7e4e96f66b5bc869d","modified":1647599609790},{"_id":"source/_posts/coding-guidelines/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1647576034591},{"_id":"source/_posts/coding-guidelines/code_guideline.drawio","hash":"9af6f57a074e3aefc3690f7936f25429ec0aad1e","modified":1647484215160},{"_id":"source/_posts/coding-guidelines/~$code_guideline.drawio.dtmp","hash":"efbe30e9578c31aab5d86747fbfbbae4688bfd46","modified":1647572066261},{"_id":"source/_posts/coding-guidelines/git-0.png","hash":"0ea3d642ba21a5b29112d7b65bd2b4b3eedca21d","modified":1647418794036},{"_id":"source/_posts/coding-guidelines/git-1-1.png","hash":"c190d09d09fa379d9caf0bd9a4116f77853924ef","modified":1647572113744},{"_id":"source/_posts/coding-guidelines/git-1.png","hash":"da4a76a7baddb470ae660be92079d4ec4ec36730","modified":1647417752306},{"_id":"source/_posts/coding-guidelines/git-2.png","hash":"75025ae0e58adfab8023f9bb1b61233bd957b965","modified":1647417970993},{"_id":"source/_posts/coding-guidelines/design3.png","hash":"b0fa053a1528922f48e8fdf682abfdc3000180d5","modified":1647574745622},{"_id":"source/_posts/coding-guidelines/git-4.png","hash":"9511885860c4ffef04b4647472cca6882b4b3093","modified":1647418350112},{"_id":"source/_posts/coding-guidelines/git-3.png","hash":"e4b2b8f337dc39e486d1c59bead62400d4bc54a8","modified":1647418143903},{"_id":"source/_posts/coding-guidelines/design1.png","hash":"ff92ebf24d2e8f67b8d24e5b7b4a11eb8e906a9e","modified":1647574035505},{"_id":"source/_posts/coding-guidelines/design2.png","hash":"19c4c319e0630cf0eda942c63e7c721e920afe42","modified":1647574158397},{"_id":"source/_posts/coding-guidelines/git-5.png","hash":"0a266abe72d3bc403340274346ecb370bf3c76f9","modified":1647418439903},{"_id":"source/_posts/coding-guidelines/design-4.png","hash":"5fec7d0abfa764e659972bb7e3ef8da725cb7b5c","modified":1647574470161},{"_id":"source/_posts/coding-guidelines/design4.png","hash":"bb1487d6579dc2aae10d99217ae49fba23055d0d","modified":1647594558442},{"_id":"source/_posts/coding-guidelines/design-1.png","hash":"4de1d7994313d515ce543248f8e330a1bfb711e9","modified":1647573274811},{"_id":"public/archives/2022/03/index.html","hash":"f17abaa3aec4942009138b14761e05bf73008e5f","modified":1743143648220},{"_id":"public/2022/03/16/coding-guidelines/index.html","hash":"b3940b5d9571ebb9df58464338b7cd2febed36cd","modified":1647596235398},{"_id":"public/2022/03/16/coding-guidelines/code_guideline.drawio","hash":"9af6f57a074e3aefc3690f7936f25429ec0aad1e","modified":1647576434210},{"_id":"public/2022/03/16/coding-guidelines/~$code_guideline.drawio.dtmp","hash":"efbe30e9578c31aab5d86747fbfbbae4688bfd46","modified":1647576434210},{"_id":"public/2022/03/16/coding-guidelines/git-0.png","hash":"0ea3d642ba21a5b29112d7b65bd2b4b3eedca21d","modified":1647576434210},{"_id":"public/2022/03/16/coding-guidelines/git-1-1.png","hash":"c190d09d09fa379d9caf0bd9a4116f77853924ef","modified":1647576434210},{"_id":"public/2022/03/16/coding-guidelines/git-1.png","hash":"da4a76a7baddb470ae660be92079d4ec4ec36730","modified":1647576434210},{"_id":"public/2022/03/16/coding-guidelines/git-2.png","hash":"75025ae0e58adfab8023f9bb1b61233bd957b965","modified":1647576434210},{"_id":"public/2022/03/16/coding-guidelines/design3.png","hash":"b0fa053a1528922f48e8fdf682abfdc3000180d5","modified":1647576434210},{"_id":"public/2022/03/16/coding-guidelines/git-3.png","hash":"e4b2b8f337dc39e486d1c59bead62400d4bc54a8","modified":1647576434210},{"_id":"public/2022/03/16/coding-guidelines/git-4.png","hash":"9511885860c4ffef04b4647472cca6882b4b3093","modified":1647576434210},{"_id":"public/2022/03/16/coding-guidelines/design1.png","hash":"ff92ebf24d2e8f67b8d24e5b7b4a11eb8e906a9e","modified":1647576434210},{"_id":"public/2022/03/16/coding-guidelines/design2.png","hash":"19c4c319e0630cf0eda942c63e7c721e920afe42","modified":1647576434210},{"_id":"public/2022/03/16/coding-guidelines/git-5.png","hash":"0a266abe72d3bc403340274346ecb370bf3c76f9","modified":1647576434210},{"_id":"public/2022/03/16/coding-guidelines/design-4.png","hash":"5fec7d0abfa764e659972bb7e3ef8da725cb7b5c","modified":1647576434210},{"_id":"public/2022/03/16/coding-guidelines/design4.png","hash":"bb1487d6579dc2aae10d99217ae49fba23055d0d","modified":1647596235398},{"_id":"public/2022/03/16/coding-guidelines/design-1.png","hash":"4de1d7994313d515ce543248f8e330a1bfb711e9","modified":1647576434210},{"_id":"themes/next/layout/index copy.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1647595711914},{"_id":"source/_posts/coding-guidelines/git-miss.png","hash":"c41c7675520b9d2814c0ba8851e4d0aacbf7cdd6","modified":1647596414937},{"_id":"public/2022/03/18/coding-guidelines/index.html","hash":"5a660b49db4fe7b1f019b8b56483ffc9f0286894","modified":1743143648220},{"_id":"public/2022/03/18/coding-guidelines/code_guideline.drawio","hash":"9af6f57a074e3aefc3690f7936f25429ec0aad1e","modified":1647597149197},{"_id":"public/2022/03/18/coding-guidelines/~$code_guideline.drawio.dtmp","hash":"efbe30e9578c31aab5d86747fbfbbae4688bfd46","modified":1647597149197},{"_id":"public/2022/03/18/coding-guidelines/git-0.png","hash":"0ea3d642ba21a5b29112d7b65bd2b4b3eedca21d","modified":1647597149197},{"_id":"public/2022/03/18/coding-guidelines/git-2.png","hash":"75025ae0e58adfab8023f9bb1b61233bd957b965","modified":1647597149197},{"_id":"public/2022/03/18/coding-guidelines/git-1-1.png","hash":"c190d09d09fa379d9caf0bd9a4116f77853924ef","modified":1647597149197},{"_id":"public/2022/03/18/coding-guidelines/git-1.png","hash":"da4a76a7baddb470ae660be92079d4ec4ec36730","modified":1647597149197},{"_id":"public/2022/03/18/coding-guidelines/git-miss.png","hash":"c41c7675520b9d2814c0ba8851e4d0aacbf7cdd6","modified":1647597149197},{"_id":"public/2022/03/18/coding-guidelines/design3.png","hash":"b0fa053a1528922f48e8fdf682abfdc3000180d5","modified":1647597149197},{"_id":"public/2022/03/18/coding-guidelines/git-3.png","hash":"e4b2b8f337dc39e486d1c59bead62400d4bc54a8","modified":1647597149197},{"_id":"public/2022/03/18/coding-guidelines/git-4.png","hash":"9511885860c4ffef04b4647472cca6882b4b3093","modified":1647597149197},{"_id":"public/2022/03/18/coding-guidelines/design1.png","hash":"ff92ebf24d2e8f67b8d24e5b7b4a11eb8e906a9e","modified":1647597149197},{"_id":"public/2022/03/18/coding-guidelines/design2.png","hash":"19c4c319e0630cf0eda942c63e7c721e920afe42","modified":1647597149197},{"_id":"public/2022/03/18/coding-guidelines/git-5.png","hash":"0a266abe72d3bc403340274346ecb370bf3c76f9","modified":1647597149197},{"_id":"public/2022/03/18/coding-guidelines/design4.png","hash":"bb1487d6579dc2aae10d99217ae49fba23055d0d","modified":1647597149197},{"_id":"public/2022/03/18/coding-guidelines/design-4.png","hash":"5fec7d0abfa764e659972bb7e3ef8da725cb7b5c","modified":1647597149197},{"_id":"public/2022/03/18/coding-guidelines/design-1.png","hash":"4de1d7994313d515ce543248f8e330a1bfb711e9","modified":1647597149197},{"_id":"source/_posts/socketio.md","hash":"a7767253ad7e99c2a3eae8fa4be7dece7898ffd2","modified":1652886557073},{"_id":"source/_posts/shardingsphere.md","hash":"d4b0e92b41884d30c992ea97cbb0b6775cf8b8d6","modified":1652882172772},{"_id":"public/2022/05/18/socketio/index.html","hash":"b675b2e5997dc1311934c8694a2f18558becf3a5","modified":1743143648220},{"_id":"public/2022/03/19/shardingsphere/index.html","hash":"af734db4784502e5e04e4a7b1772c9a4196eda35","modified":1743143648220},{"_id":"public/archives/2022/05/index.html","hash":"6d4930c2908f830aa374df279cb67e312317c64d","modified":1743143648220},{"_id":"source/_posts/shardingsphere/DataSource.png","hash":"e2cfd2d2764db00e68efc7cc8851f27aa68141a4","modified":1648811392215},{"_id":"source/_posts/shardingsphere/datasource-impl.png","hash":"08c711b3c1202028c0a0d44206bcaae64c6ca665","modified":1648811789550},{"_id":"source/_posts/shardingsphere/jdbc-level.png","hash":"8de06122769ac76a0039382c63a899acc2e17cfe","modified":1648733119945},{"_id":"source/_posts/shardingsphere/jdbc-package.png","hash":"a4033cacf03779151a8ac95bd4584ecad12facbb","modified":1649398013469},{"_id":"source/_posts/shardingsphere/ppt.drawio","hash":"90b7e10c510c6430995e184fe6bfbb9856c312a2","modified":1651679793447},{"_id":"source/_posts/shardingsphere/mybatis-package.png","hash":"10b1a139ef7a43438c89cfe3fa4a79b86aa4b2aa","modified":1650349054730},{"_id":"source/_posts/shardingsphere/mybatis-sharding-jdbc.png","hash":"2c928f8fa6891992194e1e4b9b9e6e3502b8a1ff","modified":1650353146735},{"_id":"source/_posts/shardingsphere/sharding-core-package.png","hash":"880ce234f4fb09b815886c46c8e056a255aa02a1","modified":1650293593648},{"_id":"source/_posts/shardingsphere/sharding-jdbc-sequence.png","hash":"564bbe05c67f766ffdf1ebff7fcf583243b29072","modified":1650353643837},{"_id":"source/_posts/shardingsphere/datasource-pool.png","hash":"d70652aa31be8672ce8943a71e724e51ed7b5bd6","modified":1648812926995},{"_id":"source/_posts/shardingsphere/mybatis-execute.png","hash":"bada7a36f72a9dda0a59477a8eea0fd2baaf1d17","modified":1649136164103},{"_id":"source/_posts/shardingsphere/sharding-jdbc.png","hash":"282521fc226beecf8eb5eabd756e92919d259df6","modified":1647698526603},{"_id":"source/_posts/shardingsphere/mybatis-arch.png","hash":"7fcfeae81edad871c44f4271326a01e03b03d528","modified":1649134489573},{"_id":"source/_posts/shardingsphere/intro.png","hash":"00ad898a560a3c514ca8b29d4153149fa2914875","modified":1647698296883},{"_id":"public/tags/sharding-jdbc/index.html","hash":"8ded752ceeb94a9b349a17011be84d907dd98352","modified":1743143648220},{"_id":"public/2022/03/19/shardingsphere/DataSource.png","hash":"e2cfd2d2764db00e68efc7cc8851f27aa68141a4","modified":1652882219640},{"_id":"public/2022/03/19/shardingsphere/datasource-impl.png","hash":"08c711b3c1202028c0a0d44206bcaae64c6ca665","modified":1652882219640},{"_id":"public/2022/03/19/shardingsphere/jdbc-level.png","hash":"8de06122769ac76a0039382c63a899acc2e17cfe","modified":1652882219640},{"_id":"public/2022/03/19/shardingsphere/jdbc-package.png","hash":"a4033cacf03779151a8ac95bd4584ecad12facbb","modified":1652882219640},{"_id":"public/2022/03/19/shardingsphere/ppt.drawio","hash":"90b7e10c510c6430995e184fe6bfbb9856c312a2","modified":1652882219640},{"_id":"public/2022/03/19/shardingsphere/mybatis-package.png","hash":"10b1a139ef7a43438c89cfe3fa4a79b86aa4b2aa","modified":1652882219640},{"_id":"public/2022/03/19/shardingsphere/mybatis-sharding-jdbc.png","hash":"2c928f8fa6891992194e1e4b9b9e6e3502b8a1ff","modified":1652882219640},{"_id":"public/2022/03/19/shardingsphere/sharding-core-package.png","hash":"880ce234f4fb09b815886c46c8e056a255aa02a1","modified":1652882219640},{"_id":"public/2022/03/19/shardingsphere/sharding-jdbc-sequence.png","hash":"564bbe05c67f766ffdf1ebff7fcf583243b29072","modified":1652882219640},{"_id":"public/2022/03/19/shardingsphere/datasource-pool.png","hash":"d70652aa31be8672ce8943a71e724e51ed7b5bd6","modified":1652882219640},{"_id":"public/2022/03/19/shardingsphere/mybatis-execute.png","hash":"bada7a36f72a9dda0a59477a8eea0fd2baaf1d17","modified":1652882219640},{"_id":"public/2022/03/19/shardingsphere/sharding-jdbc.png","hash":"282521fc226beecf8eb5eabd756e92919d259df6","modified":1652882219640},{"_id":"public/2022/03/19/shardingsphere/mybatis-arch.png","hash":"7fcfeae81edad871c44f4271326a01e03b03d528","modified":1652882219640},{"_id":"public/2022/03/19/shardingsphere/intro.png","hash":"00ad898a560a3c514ca8b29d4153149fa2914875","modified":1652882219640},{"_id":"public/tags/socketio/index.html","hash":"df5c584143794bc28b89cfc31e6e090348ff078b","modified":1743143648220},{"_id":"source/_posts/detect-ip.md","hash":"64512671df166f1286e9261627884ad2bf82a7cc","modified":1681964842847},{"_id":"source/_posts/shardingsphere/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1652925493815},{"_id":"source/_posts/detect-ip/ip-detect.png","hash":"f46b5d25b4f2e95a2b322535cff3310ac10b01a7","modified":1681962412501},{"_id":"source/_posts/detect-ip/ip-show.png","hash":"c3a273c1d609d1b978e36bceeedbb2f7ea9c9cc0","modified":1681913296513},{"_id":"source/_posts/detect-ip/finger2.png","hash":"4087f69e242fe547d0b96c3c49e57769fcaac437","modified":1681960579915},{"_id":"source/_posts/detect-ip/finger1.png","hash":"b8c49be58ba57f780f6629d391290e04c4ae23ed","modified":1681960625930},{"_id":"public/archives/2023/index.html","hash":"9803e7d254c94f52f60bb4e7918db8fc3030589e","modified":1743143648220},{"_id":"public/archives/2023/04/index.html","hash":"5de5e4c54a84aba8d3bf74830f46b87303ef1424","modified":1743143648220},{"_id":"public/2023/04/19/detect-ip/index.html","hash":"36f3a3e586abc23d250f5e3f90b71461b5a86c60","modified":1743143648220},{"_id":"public/2023/04/19/detect-ip/ip-detect.png","hash":"f46b5d25b4f2e95a2b322535cff3310ac10b01a7","modified":1681964537266},{"_id":"public/2023/04/19/detect-ip/ip-show.png","hash":"c3a273c1d609d1b978e36bceeedbb2f7ea9c9cc0","modified":1681964537266},{"_id":"public/2023/04/19/detect-ip/finger1.png","hash":"b8c49be58ba57f780f6629d391290e04c4ae23ed","modified":1681964537266},{"_id":"public/2023/04/19/detect-ip/finger2.png","hash":"4087f69e242fe547d0b96c3c49e57769fcaac437","modified":1681964537266},{"_id":"source/_posts/kafkaConsumerBug.md","hash":"3c0d57d585e98cf668df5f95328f6ddbccf12c61","modified":1685612612529},{"_id":"source/_posts/kafkaConsumerBug/p4.png","hash":"ac5d27c956b689b261152ccdad713831e9a0742f","modified":1685612271229},{"_id":"source/_posts/kafkaConsumerBug/p5.png","hash":"259d97d97ac941e54f87d21c17b0fb01a6721a7e","modified":1685612281640},{"_id":"source/_posts/kafkaConsumerBug/p8.png","hash":"d0764c5308e45e90de7fcc54ed35eaecbeef3fee","modified":1685612307873},{"_id":"source/_posts/kafkaConsumerBug/spring-kafka学习.drawio","hash":"a00a7b8b738750bf8bff211b45d7be704c7a9ad9","modified":1694503567067},{"_id":"source/_posts/kafkaConsumerBug/p3.png","hash":"312bb094bb47ec6946f84c2b978752107efae324","modified":1685612233100},{"_id":"source/_posts/kafkaConsumerBug/p6.png","hash":"706a3aaae234e9005f44984ffdcc6566e98c3751","modified":1685612289164},{"_id":"source/_posts/kafkaConsumerBug/p9.png","hash":"a4d3f82e73f104261c5d6da932de74f0ee8b4612","modified":1685612315620},{"_id":"source/_posts/kafkaConsumerBug/p7.png","hash":"0b53b35a2133de705339c1a0b12e6b4c572f2c4f","modified":1685612300084},{"_id":"source/_posts/kafkaConsumerBug/p2-compare.png","hash":"f69be283fac9ed0f1130537f44537ff10b51b4b8","modified":1685612042740},{"_id":"source/_posts/kafkaConsumerBug/~$spring-kafka学习.drawio.dtmp","hash":"db135fe69f60aeaf96471a7e6d86c9bab5c37b9f","modified":1685611696916},{"_id":"source/_posts/kafkaConsumerBug/p1-jvmgc.png","hash":"c7fd4e2882ca083eaa66e652f9d79f4bafb542eb","modified":1685611780649},{"_id":"source/_posts/kafkaConsumerBug/kafka-clients+0.10.2.1+空poll导致频繁youngGC的问题剖析.doc","hash":"d04f6bc816c4d6445d87117ec96f2527778cabfe","modified":1685611127117},{"_id":"public/2023/06/01/kafkaConsumerBug/index.html","hash":"a1a7c9c5cbbc9df5f8e65be4b0516220527e5915","modified":1743143648220},{"_id":"public/archives/2023/06/index.html","hash":"db968ebf416a0fea03022e4d92404ab75c81d160","modified":1743143648220},{"_id":"public/2023/06/01/kafkaConsumerBug/p4.png","hash":"ac5d27c956b689b261152ccdad713831e9a0742f","modified":1685612640192},{"_id":"public/2023/06/01/kafkaConsumerBug/p5.png","hash":"259d97d97ac941e54f87d21c17b0fb01a6721a7e","modified":1685612640192},{"_id":"public/2023/06/01/kafkaConsumerBug/spring-kafka学习.drawio","hash":"a00a7b8b738750bf8bff211b45d7be704c7a9ad9","modified":1694506832801},{"_id":"public/2023/06/01/kafkaConsumerBug/p8.png","hash":"d0764c5308e45e90de7fcc54ed35eaecbeef3fee","modified":1685612640192},{"_id":"public/2023/06/01/kafkaConsumerBug/p3.png","hash":"312bb094bb47ec6946f84c2b978752107efae324","modified":1685612640192},{"_id":"public/2023/06/01/kafkaConsumerBug/p6.png","hash":"706a3aaae234e9005f44984ffdcc6566e98c3751","modified":1685612640192},{"_id":"public/2023/06/01/kafkaConsumerBug/p7.png","hash":"0b53b35a2133de705339c1a0b12e6b4c572f2c4f","modified":1685612640192},{"_id":"public/2023/06/01/kafkaConsumerBug/p9.png","hash":"a4d3f82e73f104261c5d6da932de74f0ee8b4612","modified":1685612640192},{"_id":"public/2023/06/01/kafkaConsumerBug/p2-compare.png","hash":"f69be283fac9ed0f1130537f44537ff10b51b4b8","modified":1685612640192},{"_id":"public/2023/06/01/kafkaConsumerBug/~$spring-kafka学习.drawio.dtmp","hash":"db135fe69f60aeaf96471a7e6d86c9bab5c37b9f","modified":1685612640192},{"_id":"public/2023/06/01/kafkaConsumerBug/p1-jvmgc.png","hash":"c7fd4e2882ca083eaa66e652f9d79f4bafb542eb","modified":1685612640192},{"_id":"public/2023/06/01/kafkaConsumerBug/kafka-clients+0.10.2.1+空poll导致频繁youngGC的问题剖析.doc","hash":"d04f6bc816c4d6445d87117ec96f2527778cabfe","modified":1685612640192},{"_id":"public/live2dw/lib/L2Dwidget.min.js","hash":"5f1a807437cc723bcadc3791d37add5ceed566a2","modified":1685677255750},{"_id":"public/live2dw/lib/L2Dwidget.min.js.map","hash":"3290fe2df45f065b51a1cd7b24ec325cbf9bb5ce","modified":1685677255750},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js","hash":"35bb5b588b6de25c9be2dd51d3fd331feafac02d","modified":1685677255750},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js.map","hash":"35e71cc2a130199efb167b9a06939576602f0d75","modified":1685677255750},{"_id":"source/_posts/oauth2.md","hash":"e653437c43b58e03e7adfe5412ddbab863afb38c","modified":1694506774978},{"_id":"source/_posts/oauth2/flow.webp","hash":"32c6256fdb7662b76ec9e4d2beb4b2816bdb5c00","modified":1694505419170},{"_id":"source/_posts/oauth2/github_callback.png","hash":"7dc3cb7489cf3f3a203cf89090360bbade078aff","modified":1694505813311},{"_id":"source/_posts/oauth2/github_ac.png","hash":"3c5dc747d98c212b94d7794b99b2ed03d37cb616","modified":1694506576929},{"_id":"source/_posts/oauth2/github_oauth.png","hash":"0f35ffc9468988d2bb7acb105bb616ae0c51b9ec","modified":1694505900608},{"_id":"source/_posts/oauth2/github_new_app.png","hash":"0b93e12d79425afd0ae2dba4d0398446ce44e706","modified":1694505672431},{"_id":"source/_posts/oauth2/github_registered.png","hash":"9ea61540307c9d7284f9513dedf036275876397d","modified":1694505754747},{"_id":"source/_posts/oauth2/github_api.png","hash":"cd1cb430879153415888d9613b80754b842f0086","modified":1694506651354},{"_id":"source/_posts/oauth2/oauth2.drawio","hash":"27d4b81b7c681d2c1ec4d3416e7c36b98369ce6e","modified":1694506711870},{"_id":"public/archives/2023/09/index.html","hash":"42eafe213b6e1a079367fb792c05694e0b18ab70","modified":1743143648220},{"_id":"public/2023/09/12/oauth2/index.html","hash":"8bdda7f450c8990ab84c86b372b88408bd0a56af","modified":1743143648220},{"_id":"public/2023/09/12/oauth2/flow.webp","hash":"32c6256fdb7662b76ec9e4d2beb4b2816bdb5c00","modified":1694506832801},{"_id":"public/2023/09/12/oauth2/github_callback.png","hash":"7dc3cb7489cf3f3a203cf89090360bbade078aff","modified":1694506832801},{"_id":"public/2023/09/12/oauth2/github_ac.png","hash":"3c5dc747d98c212b94d7794b99b2ed03d37cb616","modified":1694506832801},{"_id":"public/2023/09/12/oauth2/github_oauth.png","hash":"0f35ffc9468988d2bb7acb105bb616ae0c51b9ec","modified":1694506832801},{"_id":"public/2023/09/12/oauth2/github_new_app.png","hash":"0b93e12d79425afd0ae2dba4d0398446ce44e706","modified":1694506832801},{"_id":"public/2023/09/12/oauth2/github_registered.png","hash":"9ea61540307c9d7284f9513dedf036275876397d","modified":1694506832801},{"_id":"public/2023/09/12/oauth2/github_api.png","hash":"cd1cb430879153415888d9613b80754b842f0086","modified":1694506832801},{"_id":"public/2023/09/12/oauth2/oauth2.drawio","hash":"27d4b81b7c681d2c1ec4d3416e7c36b98369ce6e","modified":1694506832801},{"_id":"source/_posts/manus-study/2025-03-27-14-51-50-image.png","hash":"b4846329a8f19fc02fe02263db7567535438052c","modified":1743143459725},{"_id":"source/_posts/manus-study/2025-03-27-18-16-45-image.png","hash":"6ff5b848406c118f66e0a8db0b8f8cbd6ba7d4cf","modified":1743143459820},{"_id":"source/_posts/manus-study.md","hash":"7a0f38c1382967b86999c3f6ba59d6ac14777707","modified":1743144823832},{"_id":"source/_posts/manus-study/2025-03-27-14-05-43-image.png","hash":"c3422c829ce8f261ef4e9349cb2c91a59aa38f20","modified":1743143459654},{"_id":"source/_posts/manus-study/2025-03-27-14-10-23-image.png","hash":"6d6b2d4712c146449f728a6e376b8898871158b2","modified":1743143459689},{"_id":"source/_posts/manus-study/2025-03-28-09-07-01-image.png","hash":"0c4683bfd1fff72a1d615ad88eab3095b51672a3","modified":1743143459853},{"_id":"source/_posts/manus-study/2025-03-28-09-47-23-image.png","hash":"dc5139f8000e50d3efca4b00f30ffad968a1ffa3","modified":1743143459926},{"_id":"source/_posts/manus-study/2025-03-28-09-53-16-image.png","hash":"11007b37faea086fdc8f52f806f8ea270fa90fea","modified":1743143459999},{"_id":"source/_posts/manus-study/2025-03-28-09-51-33-image.png","hash":"4b7446bd617e72eaca24b626f2deffec3f03a634","modified":1743143459970},{"_id":"source/_posts/manus-study/2025-03-28-09-49-17-image.png","hash":"6247c72bfb30aeac839967f72abd1f21975aacf3","modified":1743143459940},{"_id":"source/_posts/manus-study/2025-03-28-09-50-59-image.png","hash":"ec19faee17d5ded49352584ecbf0991da07f3375","modified":1743143459954},{"_id":"source/_posts/manus-study/2025-03-27-11-23-48-image.png","hash":"0d80a419b95f54e47f96115bd7fda67bbb3f2bde","modified":1743143459620},{"_id":"source/_posts/manus-study/2025-03-27-16-12-45-image.png","hash":"5ae41f2761f39b2237dceaf7e14ccf0ead3d994d","modified":1743143459807},{"_id":"source/_posts/manus-study/2025-03-28-09-11-23-image.png","hash":"96ccd4b75bc6d6d8e630d6842df0e57dd6f1ab2c","modified":1743143459868},{"_id":"source/_posts/manus-study/2025-03-28-09-46-40-image.png","hash":"5bd411608eb9de6ccc37fef8b3a041b10c6faf48","modified":1743143459915},{"_id":"source/_posts/manus-study/2025-03-28-09-53-54-image.png","hash":"3f4bb7d8e5311dcf1a81c052e885f40769e11701","modified":1743143460010},{"_id":"source/_posts/manus-study/2025-03-28-09-54-36-image.png","hash":"050ebd2f1652bfe48ee9b719dc2502870793daaa","modified":1743143460022},{"_id":"source/_posts/manus-study/2025-03-27-14-29-59-image.png","hash":"7ecdeed63bfd12ae857a31520a31cec4e1aba3c0","modified":1743143459707},{"_id":"source/_posts/manus-study/2025-03-27-11-34-31-image.png","hash":"20aee1b8aeb0d7c64d83619f081f7dfa724e9bd1","modified":1743143459639},{"_id":"source/_posts/manus-study/2025-03-28-09-01-24-image.png","hash":"fd831382663643f59d507459229ff05157505e77","modified":1743143459836},{"_id":"source/_posts/manus-study/2025-03-28-09-52-06-image.png","hash":"8cbfeb17f027d8be3cf027504eb018d232262141","modified":1743143459985},{"_id":"source/_posts/manus-study/2025-03-26-14-13-37-image.png","hash":"d53f56e127b7ff24e7dbaf1ae86295dbaa991a09","modified":1743143459416},{"_id":"source/_posts/manus-study/2025-03-28-09-16-47-image.png","hash":"367e7725f0b0c4922fb8a3113fe12eed5876ce6c","modified":1743143459884},{"_id":"source/_posts/manus-study/2025-03-27-15-08-28-image.png","hash":"c3c45ed81f9976dcc5da9b12bd50c4e1eb4e7646","modified":1743143459742},{"_id":"source/_posts/manus-study/2025-03-27-15-08-32-image.png","hash":"c3c45ed81f9976dcc5da9b12bd50c4e1eb4e7646","modified":1743143459762},{"_id":"source/_posts/manus-study/2025-03-26-14-15-14-image.png","hash":"14fc99386f839231ddcf2e24c38d819c15bbe36b","modified":1743143459427},{"_id":"source/_posts/manus-study/2025-03-27-15-37-02-image.png","hash":"a14fc851556e9939a2f9fd613b26bf579e43cc5c","modified":1743143459777},{"_id":"source/_posts/manus-study/2025-03-26-14-20-28-image.png","hash":"d6a916bd5d217f244062e07fb8c0d8ce628dc937","modified":1743143459460},{"_id":"source/_posts/manus-study/2025-03-26-17-27-29-image.png","hash":"0cbc4bda2fdb216fcc5f8efbc4716a0f3a074c28","modified":1743143459531},{"_id":"source/_posts/manus-study/2025-03-26-17-28-45-image.png","hash":"7ef05b1e1ba1900ac77bb2eb52ee337a4192516f","modified":1743143459598},{"_id":"source/_posts/manus-study/2025-03-27-15-45-22-image.png","hash":"35ff9a7411d8dbb505b81db89ddabedded0b58c9","modified":1743143459794},{"_id":"source/_posts/manus-study/2025-03-28-09-22-54-image.png","hash":"19cbed32bda5ce84470f2c6186a98268e5ab27f1","modified":1743143459900},{"_id":"source/_posts/manus-study/2025-03-26-14-22-24-image.png","hash":"d5bd53872c0e47b8248b80d4a85c81e60a4a07e8","modified":1743143459474},{"_id":"source/_posts/manus-study/2025-03-26-17-14-54-image.png","hash":"486e0dd51f47f737b0c513eb3fcccce7b7f5de43","modified":1743143459509},{"_id":"source/_posts/manus-study/2025-03-26-17-13-21-image.png","hash":"b6faf79cd469fe2f786b093fadbaf17ca3c6ee86","modified":1743143459495},{"_id":"source/_posts/manus-study/2025-03-28-13-40-50-image.png","hash":"adc9b10161b86e8f307caf65d2b7b3ff56a04fdb","modified":1743143460044},{"_id":"public/2025/03/26/manus-study/index.html","hash":"4c9c010cbbfb0008713d8bda48f40d67bf0c2840","modified":1743144851423},{"_id":"public/archives/2025/index.html","hash":"e2016940058ef0f8136e8dc1b2335e4935ea0139","modified":1743143648220},{"_id":"public/archives/2025/03/index.html","hash":"e11c110e986fcc9df1c02e1623678c49e1570f95","modified":1743143648220},{"_id":"public/2025/03/26/manus-study/2025-03-27-14-51-50-image.png","hash":"b4846329a8f19fc02fe02263db7567535438052c","modified":1743143648220},{"_id":"public/2025/03/26/manus-study/2025-03-27-18-16-45-image.png","hash":"6ff5b848406c118f66e0a8db0b8f8cbd6ba7d4cf","modified":1743143648220},{"_id":"public/2025/03/26/manus-study/2025-03-27-14-05-43-image.png","hash":"c3422c829ce8f261ef4e9349cb2c91a59aa38f20","modified":1743143648220},{"_id":"public/2025/03/26/manus-study/2025-03-27-14-10-23-image.png","hash":"6d6b2d4712c146449f728a6e376b8898871158b2","modified":1743143648220},{"_id":"public/2025/03/26/manus-study/2025-03-28-09-07-01-image.png","hash":"0c4683bfd1fff72a1d615ad88eab3095b51672a3","modified":1743143648220},{"_id":"public/2025/03/26/manus-study/2025-03-28-09-47-23-image.png","hash":"dc5139f8000e50d3efca4b00f30ffad968a1ffa3","modified":1743143648220},{"_id":"public/2025/03/26/manus-study/2025-03-28-09-49-17-image.png","hash":"6247c72bfb30aeac839967f72abd1f21975aacf3","modified":1743143648220},{"_id":"public/2025/03/26/manus-study/2025-03-28-09-51-33-image.png","hash":"4b7446bd617e72eaca24b626f2deffec3f03a634","modified":1743143648220},{"_id":"public/2025/03/26/manus-study/2025-03-28-09-50-59-image.png","hash":"ec19faee17d5ded49352584ecbf0991da07f3375","modified":1743143648220},{"_id":"public/2025/03/26/manus-study/2025-03-28-09-53-16-image.png","hash":"11007b37faea086fdc8f52f806f8ea270fa90fea","modified":1743143648220},{"_id":"public/2025/03/26/manus-study/2025-03-27-11-23-48-image.png","hash":"0d80a419b95f54e47f96115bd7fda67bbb3f2bde","modified":1743143648220},{"_id":"public/2025/03/26/manus-study/2025-03-27-16-12-45-image.png","hash":"5ae41f2761f39b2237dceaf7e14ccf0ead3d994d","modified":1743143648220},{"_id":"public/2025/03/26/manus-study/2025-03-28-09-11-23-image.png","hash":"96ccd4b75bc6d6d8e630d6842df0e57dd6f1ab2c","modified":1743143648220},{"_id":"public/2025/03/26/manus-study/2025-03-28-09-46-40-image.png","hash":"5bd411608eb9de6ccc37fef8b3a041b10c6faf48","modified":1743143648220},{"_id":"public/2025/03/26/manus-study/2025-03-28-09-53-54-image.png","hash":"3f4bb7d8e5311dcf1a81c052e885f40769e11701","modified":1743143648220},{"_id":"public/2025/03/26/manus-study/2025-03-28-09-54-36-image.png","hash":"050ebd2f1652bfe48ee9b719dc2502870793daaa","modified":1743143648220},{"_id":"public/2025/03/26/manus-study/2025-03-27-14-29-59-image.png","hash":"7ecdeed63bfd12ae857a31520a31cec4e1aba3c0","modified":1743143648220},{"_id":"public/2025/03/26/manus-study/2025-03-27-11-34-31-image.png","hash":"20aee1b8aeb0d7c64d83619f081f7dfa724e9bd1","modified":1743143648220},{"_id":"public/2025/03/26/manus-study/2025-03-28-09-01-24-image.png","hash":"fd831382663643f59d507459229ff05157505e77","modified":1743143648220},{"_id":"public/2025/03/26/manus-study/2025-03-28-09-52-06-image.png","hash":"8cbfeb17f027d8be3cf027504eb018d232262141","modified":1743143648220},{"_id":"public/2025/03/26/manus-study/2025-03-26-14-13-37-image.png","hash":"d53f56e127b7ff24e7dbaf1ae86295dbaa991a09","modified":1743143648220},{"_id":"public/2025/03/26/manus-study/2025-03-28-09-16-47-image.png","hash":"367e7725f0b0c4922fb8a3113fe12eed5876ce6c","modified":1743143648220},{"_id":"public/2025/03/26/manus-study/2025-03-27-15-08-32-image.png","hash":"c3c45ed81f9976dcc5da9b12bd50c4e1eb4e7646","modified":1743143648220},{"_id":"public/2025/03/26/manus-study/2025-03-27-15-08-28-image.png","hash":"c3c45ed81f9976dcc5da9b12bd50c4e1eb4e7646","modified":1743143648220},{"_id":"public/2025/03/26/manus-study/2025-03-26-14-15-14-image.png","hash":"14fc99386f839231ddcf2e24c38d819c15bbe36b","modified":1743143648220},{"_id":"public/2025/03/26/manus-study/2025-03-27-15-37-02-image.png","hash":"a14fc851556e9939a2f9fd613b26bf579e43cc5c","modified":1743143648220},{"_id":"public/2025/03/26/manus-study/2025-03-26-14-20-28-image.png","hash":"d6a916bd5d217f244062e07fb8c0d8ce628dc937","modified":1743143648220},{"_id":"public/2025/03/26/manus-study/2025-03-26-17-27-29-image.png","hash":"0cbc4bda2fdb216fcc5f8efbc4716a0f3a074c28","modified":1743143648220},{"_id":"public/2025/03/26/manus-study/2025-03-26-17-28-45-image.png","hash":"7ef05b1e1ba1900ac77bb2eb52ee337a4192516f","modified":1743143648220},{"_id":"public/2025/03/26/manus-study/2025-03-27-15-45-22-image.png","hash":"35ff9a7411d8dbb505b81db89ddabedded0b58c9","modified":1743143648220},{"_id":"public/2025/03/26/manus-study/2025-03-28-09-22-54-image.png","hash":"19cbed32bda5ce84470f2c6186a98268e5ab27f1","modified":1743143648220},{"_id":"public/2025/03/26/manus-study/2025-03-26-14-22-24-image.png","hash":"d5bd53872c0e47b8248b80d4a85c81e60a4a07e8","modified":1743143648220},{"_id":"public/2025/03/26/manus-study/2025-03-26-17-14-54-image.png","hash":"486e0dd51f47f737b0c513eb3fcccce7b7f5de43","modified":1743143648220},{"_id":"public/2025/03/26/manus-study/2025-03-26-17-13-21-image.png","hash":"b6faf79cd469fe2f786b093fadbaf17ca3c6ee86","modified":1743143648220},{"_id":"public/2025/03/26/manus-study/2025-03-28-13-40-50-image.png","hash":"adc9b10161b86e8f307caf65d2b7b3ff56a04fdb","modified":1743143648220},{"_id":"source/_posts/manus-study/cline-exec-req.txt","hash":"e6df35960cf75344a49671d55ff7c35f91b86583","modified":1743144572260},{"_id":"public/2025/03/26/manus-study/cline-exec-req.txt","hash":"e6df35960cf75344a49671d55ff7c35f91b86583","modified":1743144851423}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"网络基础知识","_content":"\n\n## 分层模型 OSI model\n\n**Open Systems Interconnection model** (**OSI model**) 开放系统互联模型是一个概念性的参考模型, 不指定任何协议的具体实现. 核心思想在于不同网络层级间的解耦、接口独立, 任何一层协议可以升级替换后不影响整个网络功能, 在网络通信协议设计时起到一个指导作用.  \n<img src=\"osi7.png\" alt=\"image-osi\" style=\"zoom:50%;\" />\n\n### Definitions:\n\n+ 通信协议(Communication protocols): 让处于同层的不同host实体可以相互交互.\n\n+ Protocol data unit(PDU): 在每一层, 两个实体通过交换该层协议的PDU来进行交互, PDU包含payload(也称为[service data unit](https://en.wikipedia.org/wiki/Service_data_unit) ,SDU) 和 protocol-related headers or footers . \n\n+  数据通信流程: 从Layer highest开始, PDU向下层传递, 并作为下层的SDU; 重复向更下层传递直至Layer lowest; 接着,底层负责将PDU传递给对端底层; 然后,逐层向上传递,拆包解析出各层SDU.\n\n<img src=\"./osi_pdu_pass.png\" alt=\"image-20220119105145560\" style=\"zoom:40%;\" />\n\n<img src=\"osi_transfer_example.png\" alt=\"image-20220123111825642\" style=\"zoom:43%;\" />\n\n### Layer architecture\n\n#### Layer 1: Physical layer\n\n物理层负责非结构化原始数据的传输和接收, between device和物理传输介质。它将raw digital bits转换成electrical电子,optical光学 或radio无线信号等. 物理层规范规格包含蓝牙、以太网和USB标准等.\n\nExamples: Ethernet family 802.3 PHY(千兆宽带, 百兆宽带), 802.11 LAN & wireless(2.4Ghz, 5Ghz), BLE(Bluetooth Low Energy) PHY,   E1.\n\n#### Layer 2: Data link layer\n\n物理层的线路有传输介质与通信设备组成，比特流在传输介质上传输时肯定会存在误差错误的。这样就引入了数据链路层在物理层之上，采用差错检测、差错控制和流量控制等方法，向网络层提供高质量的数据传输服务。\n\n数据链路层从网络层接受数据包, 并在将其发送到物理层之前, 将这些数据包封装成帧frame. 之后在两个相邻节点间(node to node)的链路上传送帧，每一帧包括**数据**和必要的**头尾信息**（如同步信息、地址信息、差错信息等）. 如果帧太大(超过MTU)的话，数据链路层通常会将大帧拆分为一个个的小帧，小帧能够使传输控制和错误检测更加高效。\n\n#### Layer 3: Network layer\n\n网络层的任务就是提供能在不同的网络间transfer packets的程序和方法. 网络中会有非常多的nodes, 每个node会拥有自己的访问地址, 网络层就是要提供一种节点间路由寻址方式能让packet准确的传递给destination. 网络层还会在packet在某些MTU较小链路层传输时, 对原包进行分片, 独立传输, 并在下一链路node重新装配.  网络层可以做数据错误校验, 可靠性保障的功能, 但并不necessary.\n\n#### Layer 4: Transport layer\n\n传输层负责将变长数据(variable-length data sequences)从源传输到目的地, 并提供保障QoS的方式. \n\n#### Layer 5: Session layer\n\n会话层的主要功能是负责维护两个节点之间的传输联接，确保点到点传输不中断，以及管理数据交换等功能。会话层在应用进程中建立、管理和终止会话。\n\n#### Layer 6: Presentation layer\n\n表示层的主要功能是处理在两个通信系统中交换信息的表示方式，主要包括数据格式变化、[数据加密](https://baike.baidu.com/item/数据加密/11048982)与解密、[数据压缩](https://baike.baidu.com/item/数据压缩/5198909)与解压等\n\n#### Layer 7: Application layer\n\n该层直接面向用户，是OSI中的最高层。它的主要任务是为用户提供应用的接口，即提供不同计算机间的文件传送、访问与管理，电子邮件的内容处理，不同计算机通过网络交互访问的虚拟终端功能等.\n\n### Protocol stack examples\n\n#### BLE protocol stack\n\n<img src=\"./ble_osi.png\" alt=\"ble_osi\" style=\"zoom:80%;\" />\n\n## 分层模型——TCP/IP模型及协议族\n\nTCP/IP 模型将网络分为四层(算上物理层就是五层)，它不关注底层物理介质，主要关注终端之间的逻辑数据流转发。\nTCP/IP 模型的核心是**网络层**和**传输层**，网络层解决网络之间的逻辑转发问题，传输层保证源端到目的端之间的可靠传输。最上层的**应用层**通过各种协议向终端用户提供业务应用。\n\n### 物理层\n\n任何协议栈都逃不脱最终帮其传输数据的物理层. 物理层传递的都是bit flow, 而以太网使用的都是曼彻斯特编码信号. 曼彻斯特(Manchester)编码的编码方法是把每个码元分成两个相等的间隔。 如图,码元1是前一个间隔为高电压后一个间隔为低电压，即位周期中心向下跳变表示1；码元0正好相反，位周期中心向上跳变表示0。这样保证了在每一个 码元中间出现一次电压的转换，接收端就利用这种电压的转换方便地把位同步信号提取出来.\n\n<img src=\"./manchester.png\" alt=\"image-20220125225252662\" style=\"zoom:45%;\" />\n\n在链路层从物理层收到的bit流中提取数据时, 一个问题就是如何区分帧的开始.  Manchester + Preamble.\n\n<img src=\"./preamble.png\" alt=\"image-20220125230003591\" style=\"zoom:40%;\" />\n\n### 数据链路层\n\n数据链路层位于网络层之下, 这意味着它与网络层协议比如常用的IP协议是解耦的, 以**以太网数据链路层帧**为例, 在通信时, 其完全不关心payload中是IP协议报文或是其他协议报文, 而是完全通过帧首的源MAC、目标MAC地址进行寻址通信.\n\nIEEE 802 规范下数据链路层向下还可细分为 logical link control (LLC) 层和 medium access control (MAC) 层。\n\n<img src=\"./datalinklayer_sublayers.png\" alt=\"dll_sublayes\" style=\"zoom:40%;\" />\n\nLLC 层又叫做`逻辑控制链路`层，它主要用于数据传输，它充当网络层和数据链路层中的`媒体访问控制（MAC）`子层之间的接口。LLC 层的主要功能如下\n\n- LLC 的主要功能是发送时在 MAC 层上多路复用协议，并在接收时同样地多路分解协议。\n- LLC 提供跳到跳的流的差错控制，像是路由器和路由器之间这种相邻节点的数据传输称为 `一跳`。\n- 它允许通过计算机网络进行多点通信。\n\nMAC 层负责传输介质的流控制和多路复用，它的主要功能如下\n\n- MAC 层为 LLC 和 OSI 网络的上层提供了物理层的抽象。\n- MAC 层负责封装帧，以便通过物理介质进行传输。\n- MAC 层负责解析源和目标地址。\n- MAC 层还负责在冲突的情况下执行冲突解决并启动重传。\n- MAC 层负责生成帧校验序列，从而有助于防止传输错误。\n\n在 MAC 层中，有一个关键概念是 `MAC 地址`。MAC 地址主要用于识别数据链路中互联的节点. MAC 地址长 6 bytes (48 bit)，在使用`网卡(NIC)` 的情况下，MAC 地址一般都会烧入 ROM 中。因此，任何一个网卡的 MAC 地址都是唯一的。\n\n<img src=\"/Users/talentxiet/Desktop/我的学习文档/网络基础/mac_addr.png\" alt=\"mac_addr\" style=\"zoom:28%;\" />\n\n链路层的差错控制通过增加差错编码来实现, 又可分为**检错编码**和**纠错编码**: 检错编码常见有奇偶校验码和循环冗余码; 纠错编码常见有海明码等.\n\n流量(阻塞)控制是控制链路上的帧的发送速率，使接收方有足够的缓冲空间来接收帧，主要方法有两种，停止-等待协议和滑动窗口协议. 停止-等待协议是一种特殊的滑动窗口协议，相当于发送窗口和接收窗口大小为1的滑动窗口协议。\n\n<img src=\"./datalink_timewindow.png\" alt=\"image-20220121112137195\" style=\"zoom:40%;\" />\n\n以太网上传输的链路层数据帧有两种格式：**Ethernet_II 和 IEEE802.3**。选择哪种格式由 TCP/IP 协议簇中的网络层决定。大多数的数据帧使用的是 Ethernet_II 格式. IEEE802.3 格式：Length字段值小于等于0x05DC. Ethernet_II 格式：Type 字段值大于等于0x0600. 以此来供链路层判断数据是哪种规范.\n\n<img src=\"./data_link_layer_frame.png\" alt=\"image-20220119143457079\" style=\"zoom:45%;\" />\n\nFCS: frame check sequence, 错误检查的.\nLLC：Logical Link Control，逻辑链路控制由目的访问点 D.SAP （Destination Service Access Point）、源服务访问点 S.SAP（Source Service Access Point）和 Control 字段组成.\nSNAP：Sub-network Access Protocol，子网访问协议由机构代码（Org Code）和类型（Type）字段组成。Org Code 三个字节都为 0 。Type 字段的含义与 Ethernet_II 帧中的 Type 字段相同.\n\n### 网络层\n\n#### **IP协议**\n\n- 对于网络层，**IP协议**是其中一个非常重要的协议\n- IP协议使得复杂的实际网络变为一个**虚拟互联的网络**（也就是我们只需要将终端设备连接到这个网络中去即可，并不需要关心里边实际的复杂网络）\n- IP协议使得网络层可以**屏蔽底层细节**而专注网络层的**数据转发**（如果单从网络层去看，我们是不用关心**数据包**是通过海底电缆还是通过无线WiFi传输到目的计算机的）\n- IP协议**解决了在虚拟网络中数据报传输路径的问题**\n\n<img src=\"./ip_nets.png\" alt=\"image-20220125231347009\" style=\"zoom:40%;\" />\n\n**IP协议特点:**\n\n- 无状态, 是指IP通信双方不同步传输数据的状态信息，因此所有IP数据报的发送，传输，和接收都是相互独立的，没有山下文关系的。发送、传输和接收都是相互独立、没有上下文关系的。这种服务最大的缺点是无法处理乱序和重复的IP数据报。比如发送端发送出的第N个IP数据报可能比第N+1个IP数据报后到达接收端，而同一个IP数据报也可能经过不同的路径多次到达接收端。在这两种情况下，接收端的IP模块无法检测到乱序和重复，因为这些IP数据报之间没有任何上下文关系。接收端的IP模块只要收到了完整的IP数据报(如果是IP分片的话，IP 模块将先执行重组)，就将其数据部分(TCP报文段、UDP数据报或者ICMP报文)，上交给上层协议。那么从上层协议来看，这些数据就可能是乱序的、重复的。面向连接的协议，比如TCP协议，则能够自己处理乱序的、重复的报文段，它递交给上层协议的内容绝对是有序的、正确的。虽然IP数据报头部提供了一个标识字段(见后文)用以唯-标识-一个IP数据报，但它是被用来处理IP分片和重组的，而不是用来指示接收顺序的。无状态服务的优点也很明显:简单、高效。我们无须为保持通信的状态而分配一些内核资源，也无须每次传输数据时都携带状态信息。在网络协议中，无状态是很常见的，比如UDP协议和HTTP协议都是无状态协议。以HTTP协议为例，一个浏览器的连续两次网页请求之间没有任何关联，它们将被Web服务器独立地处理。\n- 无连接(connectionless), 是指IP通信双方都不长久地维持对方的任何信息。这样，上层协议每次发送数据的时候，都必须明确指定对方的IP地址。\n- 不可靠, 是指IP协议不能保证IP数据报准确地到达接收端，它只是承诺尽最大努力(best effort)。 很多种情况都能导致IP数据报发送失败。比如，某个中转路由器发现IP数据报在网络上存活的时间太长(根据IP数据报头部字段TTL判断，见后文)，那么它将丢弃之，并返回一个ICMP错误消息(超时错误)给发送端。又比如，接收端发现收到的IP数据报不正确(通过校验机制)，它也将丢弃之，并返回一个ICMP错误消息(IP 头部参数错误)给发送端。无论哪种情况，发送端的IP模块一旦检测到IP数据报发送失败，就通知上层协议发送失败，而不会试图重传。因此，使用IP服务的上层协议(比如TCP协议)需要自己实现数据确认、超时重传等机制以达到可靠传输的目的。\n\n**IP协议报文格式 :**\n\n<img src=\"./ip_packet.png\" alt=\"image-20220125234059378\" style=\"zoom:40%;\" />\n\n- **版本**：占4位，指的是IP协议的版本，通信双方的版本必须一致，即IPv4，也有IPv6\n\n- **首部长度**：占4位，最大数值为15，表示的是IP首部的长度，单位是“32位字”（4个字节），也就是**IP首部**最大长度为60字节\n\n- **服务类型**：服务登记, 比如VIP专线, 这个一般是不需要关心的\n\n- **总长度**：占16位，最大数值为65535，表示的是**IP数据报总长度**（IP首部+IP数据） （在前边介绍数据链路层的时候，也提到过一个长度。对于数据链路层的长度，称之为**MTU**，一般为1500字节。而IP数据报的最大长度有65535个字节，比MTU要大。如果真正传输的时候，如果出现这种情况，数据链路层会对IP数据报进行**分片**，也就是将一个较长的IP数据报拆分成多个数据帧来进行传输）\n\n- **标识**：占16位，计数器标示, 分片后的同组数据具备相同标示. 同一组的包根据标示重组.\n\n- **标记**： 占3位，但目前只有2位有意义。\n   标志字段中的最低位记为MF(More Fragment)。MF=1即表示后面“还有分片”的数据报,MF=0表示这已是若干数据报片中的最后一个\n   标志字段中间的一位记为DF(Don’t Fragment)，意思是“不能分片”。只有当DF=0时才允许分片。\n   \n- **片偏移**：前边有提到，如果IP数据报的长度过长，会进行IP报文的分片，把一个IP报文拆分成多个数据帧进行数据链路层的传输(以**8 Bytes**的倍数分包)。因此，如果拆分的话，就需要使用**片偏移**来记录当前的数据帧，保存的**第几个偏移的IP数据**\n\n   <img src=\"./ip_offset.png\" alt=\"image-20220129104929487\" style=\"zoom:45%;\" />\n\n- **TTL**：占8位，表明IP数据报文在网络中的**寿命**，每经过一个设备（不管是路由器还是计算机），TTL减一，当TTL=0时，网络设备必须**丢弃**该报文（它解决的就是，当网络报文找不到终点的时候，避免网络报文在网络中无限的传输，以消耗带宽）\n\n- **协议**：占8位，表明IP数据所携带的具体数据是什么**协议**的（如TCP、UDP等，一些协议对应的值，可参考下图）\n\n- **校验和**：占16位，校验IP首部是否有出错（接收方接收到IP首部之后也会进行校验，如果有错，则直接丢弃）\n\n- **源IP地址**：**发送**IP数据报的网络设备的IP地址\n\n- **目的IP地址**：IP数据报要**到达**的目的网络设备的IP地址\n\n#### **ICMP协议**\n\n<img src=\"./icmp_kinds.png\" alt=\"image-20220126215905234\" style=\"zoom:50%;\" />\n\n#### **路由选择协议**\n\n**自治系统**：autonomous system。在互联网中，一个自治系统(AS)是一个有权自主地决定在本系统中应采用各种[路由协议](https://baike.baidu.com/item/路由协议/202634)的小型单位。这个网络单位可以是一个简单的网络也可以是一个由一个或多个普通的[网络管理员](https://baike.baidu.com/item/网络管理员/595848)来控制的网络群体，它是一个单独的可管理的[网络单元](https://baike.baidu.com/item/网络单元/9928606)（例如一所大学，一个企业或者一个公司个体）。\n\n<img src=\"./ip_routing_protocol.png\" alt=\"image-20220126220513526\" style=\"zoom:50%;\" />\n\n内部网关协议:\n\n+ RIP, Routing Information Protocol: 优点, 算法简单; 缺点, 路由故障链路改变远端感知慢, 距离有限 max16, 大规模网络路由表可能过大.\n\n<img src=\"./rip.png\" alt=\"image-20220126220918042\" style=\"zoom:50%;\" />\n\n+ OSPF, Open Shortest Path First 开放的最短路径优先算法: \n\n  与RIP三个区别:（1）向本[自治系统](https://baike.baidu.com/item/自治系统)中所有路由器发送信息。（2）发送的信息就是与本[路由器](https://baike.baidu.com/item/路由器)相邻的所有路由器的链路状态，但这只是路由器所知道的部分信息。（3）只有在链路状态发生变化时，[路由器](https://baike.baidu.com/item/路由器)才向所有路由器用[洪泛](https://baike.baidu.com/item/洪泛)法发送此信息。\n\n外部(边界)网关协议:\n\nBGP用于在不同的自治系统（AS）之间交换路由信息。当两个AS需要交换路由信息时，每个AS都必须指定一个运行BGP的节点，来代表AS与其他的AS交换路由信息。两个AS中利用BGP交换信息的路由器也被称为边界网关（Border Gateway）或边界路由器（Border Router）. \n\n<img src=\"./BGP_speaker.png\" alt=\"image-20220126223533819\" style=\"zoom:50%;\" />\n\n<img src=\"./BGP_example.png\" alt=\"image-20220126223429235\" style=\"zoom:40%;\" />\n\n\n\n### 传输层\n\n端口作用, 实现进程到进程的通信, 复用ip线路, 提供标准的的端口->进程的映射方式.\n\n<img src=\"./transport_process.png\" alt=\"image-20220126230009234\" style=\"zoom:50%;\" />\n\n#### UDP\n\nUDP, User Datagram Protocol用户数据报协议, 只在IP基础上多了复用分用和差错校验的功能.\n\n##### 特点\n\n+ 无连接\n+ 尽努力交付\n+ 面向报文的\n+ 无拥塞控制\n+ 支持一对一、一对多、多对一、多对多\n+ 首部开销小\n\n##### 协议格式\n\n<img src=\"./udp_protocol.png\" alt=\"image-20220126233302042\" style=\"zoom:45%;\" />\n\n#### TCP\n\n##### 特点\n\n+ 面向连接\n\n+ 每条点对点(socket1, socket2)\n\n+ 可靠的\n\n+ 全双工\n\n+ 面向字节流的\n\n+ 为应用程序间提供逻辑通信链路\n\n  <img src=\"./tcp_bytes_stream.png\" alt=\"image-20220129001752910\" style=\"zoom:50%;\" />\n\n##### 协议格式\n\n<img src=\"./tcp_protocol.png\" alt=\"image-20220127225910379\" style=\"zoom:50%;\" />\n\n**16位源端口号**：指发送端的端口号\n**16位目的端口号**：指目的端的端口号\n**4位头部长度**：同IP头部，表示TCP头部的大小，以4字节为单位。\n**32位序列号**：TCP通信过程中，通过序列号来保证传输过程中数据的有序性\n**32位确认号**：用以对接受到的报文进行确认\n**保留6位**\n**URG**：表示紧急指针\n**ACK**：表示确认号\n**PSH**：通知对端立即从缓冲区取走数据\n**RST**: 通知当前连接出现问题, 要释放资源, 有需要则重新建立连接. 也可用于拒绝非法连接. \n**SYN**：表示请求建立连接\n**FIN**：标志要通知对端本端的数据发送要关闭\n**16位窗口大小**：TCP流量控制的手段，告诉发送方本端的接收端缓冲区还能接受多少数据, 单位字节.\n**16位校验和**：由发送方填充，接收端用以检查TCP报文在传输过程中是否有损坏\n\n##### 可靠性\n\n###### 滑动窗口\n\nA根据B TCP ack报文中的窗口大小发送滑动窗口大小以内的若干数据给B, 给回复按序抵达的最大包序号, 即31. B不应过度拖延回复ack的时间.\n\n<img src=\"./tcp_window.png\" alt=\"image-20220128000255497\" style=\"zoom:50%;\" />\n\n<img src=\"./tcp_buffer.png\" alt=\"image-20220128000641845\" style=\"zoom:50%;\" />\n\n需注意, tcp是全双工通信, 每端都有自己的发送和接受窗口及缓冲. \n\n###### 超时重传时间 Retransmision Time out\n\n<img src=\"./tcp_rto.png\" alt=\"image-20220128001439268\" style=\"zoom:40%;\" />\n\n###### 选择确认ACK Selective ACK\n\nSACK用于接收端向发送端报告部分未按序已收到的字节块, 从而避免重复传输. 需要tcp连接时 option增加SACK头, 双方确认支持SACK. 但是描述哪些数据已接受其实是比较复杂的, 尽管RFC2018有详细说明, 但使用还是较少, 大部分还是发送端重发所有未ack字节.\n\n<img src=\"./tcp_sack.png\" alt=\"image-20220128002718253\" style=\"zoom:50%;\" />\n\n\n\n##### TCP流量控制\n\n###### 可利用滑动窗口控制发送方流量\n\n\n\n###### TCP传输效率\n\n应用程序把发送数据给到TCP缓存就不管了, 由TCP负责控制发送时机将数据正确的发送出去. 这是一个比较复杂的问题.\n\n+ **Nagle算法**\n\n  TCP/IP协议中，无论发送多少数据，总是要在数据前面加上协议头，同时，对方接收到数据，也需要发送ACK表示确认。为了尽可能的利用网络带宽，TCP总是希望尽可能的发送足够大的数据。（一个连接会设置MSS参数，因此，TCP/IP希望每次都能够以MSS尺寸的数据块来发送数据）。Nagle算法就是为了尽可能发送大块数据，避免网络中充斥着许多小数据块。\n\n  Nagle算法的基本定义是**任意时刻，最多只能有一个未被确认的小段**。 所谓“小段”，指的是小于MSS尺寸的数据块，所谓“未被确认”，是指一个数据块发送出去后，没有收到对方发送的ACK确认该数据已收到。\n\n  Nagle算法的规则（可参考tcp_output.c文件里tcp_nagle_check函数注释）：\n\n  （1）如果包长度达到MSS，则允许发送；\n\n  （2）如果该包含有FIN，则允许发送；\n\n  （3）设置了TCP_NODELAY选项，则允许发送；\n\n  （4）未设置TCP_CORK选项时，若所有发出去的小数据包（包长度小于MSS）均被确认，则允许发送；\n\n  （5）上述条件都未满足，但发生了超时（一般为200ms），则立即发送。\n\n  ```bash\n      if there is new data to send #有数据要发送\n          # 发送窗口缓冲区和队列数据 >=mss，队列数据（available data）为原有的队列数据加上新到来的数据\n          # 也就是说缓冲区数据超过mss大小，nagle算法尽可能发送足够大的数据包\n          if the window size >= MSS and available data is >= MSS \n              send complete MSS segment now # 立即发送\n          else\n              if there is unconfirmed data still in the pipe # 前一次发送的包没有收到ack\n                  # 将该包数据放入队列中，直到收到一个ack再发送缓冲区数据\n                  enqueue data in the buffer until an acknowledge is received \n              else\n                  send data immediately # 立即发送\n              end if\n          end if\n      end if　\n  ```\n\n  Nagle算法只允许一个未被ACK的包存在于网络，它并不管包的大小，因此它事实上就是一个扩展的停-等协议，只不过它是基于包停-等的，而不是基于字节停-等的。\n\n+ **TCP确认延迟机制**\n\n  当Server端收到数据之后，它并不会马上向client端发送ACK，而是会将ACK的发送延迟一段时间（假设为t），它希望在t时间内server端会向client端发送应答数据，这样ACK就能够和应答数据一起发送，就像是应答数据**捎带着ACK**过去。初始化是40ms。\n\n+ **TCP_NODELAY 选项**\n\n  默认情况下，发送数据采用Nagle 算法。这样虽然提高了[网络吞吐量](https://baike.baidu.com/item/网络吞吐量/646450)，但是实时性却降低了，在一些交互性很强的应用程序来说是不允许的，使用TCP_NODELAY选项可以禁止Nagle 算法。\n\n  此时，应用程序向内核递交的每个数据包都会立即发送出去。需要注意的是，虽然禁止了Nagle 算法，但网络的传输仍然受到TCP确认延迟机制的影响。\n\n+ **TCP_CORK 选项**\n\n  所谓的CORK就是塞子的意思，形象地理解就是用CORK将连接塞住，使得数据先不发出去，等到拔去塞子后再发出去。设置该选项后，内核会尽力把小数据包拼接成一个大的数据包（一个MTU）再发送出去，当然若一定时间后（一般为200ms，该值尚待确认），内核仍然没有组合成一个MTU时也必须发送现有的数据（不可能让数据一直等待吧）。\n\n##### TCP拥塞控制\n\n+ 拥塞控制：防止过多的数据注入到网络中，这样可以使网络中的路由器或链路不致过载。拥塞控制所要做的都有一个前提：网络能够承受现有的网络负荷。拥塞控制是一个全局性的过程，涉及到所有的主机、路由器，以及与降低网络传输性能有关的所有因素。\n\n+ 流量控制：指点对点通信量的控制，是端到端的问题。流量控制所要做的就是抑制发送端发送的速率，以便使接收端来得及接收。\n\n解决拥塞问题一般是以下步骤: 1) 监测网络, 探测拥塞的位置与时间;  2) 将拥塞信息发送到能采取控制的地方; 3) 调整网络参数.\n\n常用方法: 慢开始( slow-start )、拥塞避免( congestion avoidance )、快重传( fast retransmit )和快恢复( fast recovery )。\n\n###### 慢开始\n\n发送方维持一个拥塞窗口 cwnd ( congestion window )的状态变量。拥塞窗口的大小取决于网络的拥塞程度，并且动态地在变化。发送方让自己的发送窗口等于拥塞窗口。发送方控制拥塞窗口的原则是：只要网络没有出现拥塞，拥塞窗口就再增大一些，以便把更多的分组发送出去。但只要网络出现拥塞，拥塞窗口就减小一些，以减少注入到网络中的分组数。\n\n慢开始算法：当主机开始发送数据时，如果立即所大量数据字节注入到网络，那么就有可能引起网络拥塞，因为现在并不清楚网络的负荷情况。因此，较好的方法是先探测一下，即由小到大逐渐增大发送窗口，也就是说，由小到大逐渐增大拥塞窗口数值。通常在刚刚开始发送报文段时，先把拥塞窗口 cwnd 设置为一个最大报文段MSS的数值。而在每收到一个对新的报文段的确认后，把拥塞窗口增加至多一个MSS的数值。用这样的方法逐步增大发送方的拥塞窗口 cwnd ，可以使分组注入到网络的速率更加合理。 cwnd = 1, 2, 4, 8 ...\n\n为了防止拥塞窗口cwnd增长过大引起网络拥塞，还需要设置一个慢开始门限ssthresh状态变量。慢开始门限ssthresh的用法如下：\n\n　　当 cwnd < ssthresh 时，使用上述的慢开始算法\n　　当 cwnd > ssthresh 时，停止使用慢开始算法而改用拥塞避免算法\n　　当 cwnd = ssthresh 时，既可使用慢开始算法，也可使用拥塞控制避免算法\n\n###### 拥塞避免\n\n让拥塞窗口cwnd缓慢地增大，即每经过一个往返时间RTT就把发送方的拥塞窗口cwnd加1，而不是加倍。这样拥塞窗口cwnd按线性规律缓慢增长，比慢开始算法的拥塞窗口增长速率缓慢得多。\n\n无论在慢开始阶段还是在拥塞避免阶段，只要发送方判断网络出现拥塞（其根据就是没有收到确认），就要把慢开始门限ssthresh设置为出现拥塞时的发送方窗口值的一半（但不能小于2）。然后把拥塞窗口cwnd重新设置为1，执行慢开始算法。这样做的目的就是要迅速减少主机发送到网络中的分组数，使得发生拥塞的路由器有足够时间把队列中积压的分组处理完毕。\n\n<img src=\"./tcp_slow_start.png\" alt=\"image-20220128190952845\" style=\"zoom:40%;\" />\n\n###### 快重传和快恢复\n\n快重传算法首先要求接收方每收到一个报文段后(即便是后序)就立即发出重复确认（为的是使发送方及早知道有报文段没有到达对方），而不要等到自己发送数据时才进行捎带确认。当发送方连续收到三个重复确认，就执行“乘法减小”算法，把慢开始门限ssthresh减半。在采用快恢复算法时，慢开始算法只是在TCP连接建立时和网络出现超时时才使用。采用这样的拥塞控制方法使得TCP的性能有明显的改进。\n\n<img src=\"./tcp_congest.png\" alt=\"image-20220128190034654\" style=\"zoom:50%;\" />\n\n##### TCP连接管理\n\n###### 三次握手\n\n三次握手是为了建立连接, 双方确认对方的存在,并协商一些参数,如窗口大小 , 初始化一下缓冲队列资源等. 为了确认双方存在, 头两次sync, sync+ack是 省不了的, 那第三次ack是为了做什么呢? 是为了避免已失效的sync请求又抵达B, 又消耗B的资源. 有了第三次ack, 当无效的syn被server sync+ack后, client不会回复ack, 超时后server也就会再销毁掉对应资源.\n\n<img src=\"./tcp_handshake.png\" alt=\"image-20220129000032602\" style=\"zoom:50%;\" />\n\n###### 四次挥手\n\n<img src=\"./tcp_bye_handshake.png\" alt=\"image-20220129002627713\" style=\"zoom:50%;\" />\n\n**MSL**: Max Segment lifetime, 报文端最大寿命. \n\n为什么A收到 FIN 后要等两个MSL呢? \n\n1. 确保能回复FIN的ack, 如果B没收到ack, 会重新发送FIN+ACK. 这时如果A已经断了, B就只能自己特殊处理到CLOSED状态.\n2. 尽量让本次连接 网络中的网络包都传输完, 不会在新连接中收到旧连接报文.\n\n##### TCP有限状态机\n\n<img src=\"./tcp_state.png\" alt=\"image-20220129152318656\" style=\"zoom:50%;\" />\n\n\n\n#### 应用层\n\n## 应用层常用协议\n\n### DNS\n\n基于UDP, **53**端口:  query请求(src port: 12868 , dst port: 53 ) + response响应(src port: 53, dst port: 12868 )\n\n迭代查询 or 递归查询 + 缓存. \n\n**解析顺序**: 浏览器缓存, 系统缓存, 路由器DNS缓存 , ISP DNS 缓存, 根域名服务器, 顶级域名服务器, 主域名服务器, 保存结果至缓存.\n\n<img src=\"./dns.png\" alt=\"image-20220129165409193\" style=\"zoom:40%;\" />\n\n### HTTP\n\nHTTP协议发展历程:\n\n![image-20220127112311050](/Users/talentxiet/Library/Application Support/typora-user-images/image-20220127112311050.png)\n\n协议格式:\n\n<img src=\"./http_protocol.png\" alt=\"image-20220130002354946\" style=\"zoom:50%;\" />\n\n### SMTP\n\n<img src=\"./smtp.png\" alt=\"image-20220130002634963\" style=\"zoom:45%;\" />\n\n### DHCP\n\n<img src=\"./dhcp.png\" alt=\"image-20220130221121647\" style=\"zoom:50%;\" />\n\n## 应用程序间通信过程\n\n### 系统调用&socket套接字\n\n<img src=\"./syscall.png\" alt=\"image-20220130221429374\" style=\"zoom:50%;\" />\n\n<img src=\"./socket2.png\" alt=\"image-20220130224749539\" style=\"zoom:50%;\" />\n\n\n\n## 网络安全\n\n四个目标:\n\n+ 保密性\n+ 端点鉴别\n+ 信息完整性\n+ 运行安全性 访问控制\n\n<img src=\"./net_sec_key.png\" alt=\"image-20220205185347484\" style=\"zoom:50%;\" />\n\n### DES AES\n\ndata encryption standard,  advanced encrytion standard, 对称加密、\n\n### 公钥密码体制\n\n任何加解密算法的安全性都取决于密钥长度,以及攻破密文的计算量\n\n### 数字签名\n\n目标:\n\n+ 接收者能核实发送者对报文的数字签名, 即是发送者发的\n+ 收到的数据是完整的\n+ 发送者事后不可抵赖数字签名\n\n<img src=\"./signature.png\" alt=\"image-20220205191312308\" style=\"zoom:50%;\" />\n\n### 报文鉴别\n\n加解密算法可以实现报文鉴别,但是消耗cpu, 所以常用密码散列算法保护数据完整性. MD5 (message digest 第五代)和 SHA-1,2,3(secure hash algorithm).\n\n<img src=\"./sec_mac.png\" alt=\"image-20220205193055077\" style=\"zoom:50%;\" />\n\nMAC: message authentication code,\n\n### 密钥分配\n\n#### 对称密钥分配\n\n对称密钥是一对一的, 任意双方通信都要有唯一的key, 通常由KDC动态随机分配\n\n<img src=\"./对称密钥分配.png\" alt=\"image-20220205195510847\" style=\"zoom:50%;\" />\n\n#### 公钥分配\n\n由受信任的机构维护公钥和实体的关系, 通常是政府机构, 称之为CA (certification authority), 每个实体会被颁布 证书(certificate), 证书中包含拥有者标示, 公钥, 且此证书被CA进行了数字签名. 公众可以从机构公开信息中获取到机构的公钥, 对签名和 证书信息进行验证.\n\n为了使CA拥有统一格式, IETF接受了ITU制定的X.509规范.\n\n### 互联网中的安全协议\n\n#### 网络层\n\n##### IPsec\n\n<img src=\"./ipsec.png\" alt=\"image-20220206000051358\" style=\"zoom:50%;\" />\n\n#### 传输层\n\n##### SSL\n\nSecure Socket Layer, Netscape开发, 95年交给IETF\n\n<img src=\"./ssl.png\" alt=\"image-20220206001829432\" style=\"zoom:50%;\" />\n\n<img src=\"./ssl_procedure.png\" alt=\"image-20220206002408083\" style=\"zoom:50%;\" />\n\n##### TLS\n\nTransport Layer Security, 基于SSL3.0设计. \n\n### 防火墙\n\n是一种访问控制技术, 通常是特殊编程的路由器, 进行访问策略控制. \n\n+ 分组过滤路由器: 根据 源/目的 IP/端口 协议类型进行分组过滤控制.\n+ 应用网关: 应用层网关, 根据应用层报文鉴权转发\n\n## 实时音视频相关协议\n\n<img src=\"./av_protocols.png\" alt=\"image-20220206165809797\" style=\"zoom:50%;\" />\n\n### RTP\n\n<img src=\"./rtp_protocol.png\" alt=\"image-20220206165710831\" style=\"zoom:50%;\" />\n\n### RTCP\n\n<img src=\"./rtcp.png\" alt=\"image-20220206172316751\" style=\"zoom:50%;\" />\n\n## 常见网络设备\n\n### Repeater中继器\n\n中继器是一个将输入信号增强放大的设备, 把信号送得更远，以延展网络长度. 与具体信号形式无关,比如卫星雷达, 以太网集线器; 属于物理层\n\n### Hub集线器 \n\n集线器（Ethernet hub）是指将多条以太网双绞线或光纤集合连接在同一段物理介质下的设备。集线器运作在OSI模型中的物理层，可以让其链接的设备工作在同一网段。集线器上有多个I/O端口，信号从任意一个端口进入后，会从其他端口出现. \n\n由于集线器会把收到的任何数字信号，从集线器的所有端口提交，这会造成信号之间碰撞的机会很大，而且信号也可能被窃听，并且这代表所有连到集线器的设备，都是属于同一个冲突网域以及广播网域(hub间组网所有hub都属于同一广播域), 冲突和泛洪严重，因此大部分Hub已被Switch代替.\n\n<img src=\"./hub_pic.png\" alt=\"image-20220121154139634\" style=\"zoom:35%;\" />\n\n### Bridge网桥\n\n网桥工作在第二层数据链路层, 可以解析出链路层数据包, 并在Bridge内维护每个端口和连接着的设备MAC地址映射关系, 从而可以动态判断是否要转发收到的物理帧, 从而在一定程度上解决hub间的泛洪问题.\n\n<img src=\"/Users/talentxiet/Desktop/我的学习文档/网络基础/bridge_pic.png\" alt=\"image-20220121155228284\" style=\"zoom:50%;\" />\n\n### Switch交换机\n\n二层交换机: 二层交换机工作在数据链路层, 相比Hub, 它可以解析物理帧中的链路层frame信息,并基于frame中的mac地址与交换机端口进行缓存映射, 从而高效的解决Hub的冲突, 泛洪等问题. 此外交换机通常还支持划分VLAN的功能, VLAN可以创建相互隔离的子LAN, 从而缩小广播域大小. \n\n<img src=\"./switch_pic.png\" alt=\"image-20220121160921808\" style=\"zoom:55%;\" />\n\n交换机组网示例:\n\n<img src=\"./switch_net.png\" alt=\"image-20220122201304858\" style=\"zoom:50%;\" />\n\n三层交换机: 三层交换机在交换机的基础之上加了网络层协议的解析能力, 以及一些简单的三层路由功能. 不过它的主要功能还是交换机的，同时它的价格比路由器价格偏低，实用性更高。\n\n一个真实的交换机图片如下所示:\n\n<img src=\"./real_switch.png\" alt=\"image-20220122202630798\" style=\"zoom:38%;\" />\n\n### Router路由器 (网关)\n\n讲到路由器,我们要先讲一下IP子网和网关(Gateway), IP地址+掩码标示了IP网段, 不同网段间的网络相互隔离. 而网关, 顾名思义, 就是不同网络间连接的关口, 在网络层上实现网络连通. 网关概念也可延伸到应用服务网关, 这里我们讨论的均指TCP/IP协议下网关.\n\n在TCP/IP协议的系统内核层, 会在网络层向链路层封包时, 检测目标IP与源IP是否在同一子网, 如果在同一子网, 封包时的对端MAC地址通过ARP协议获取; 而当不在同一子网时, 会使用网关的MAC作为目标MAC地址. 可以用下图思考一下, 不同子网间通信时的隔离性到底是如何实现的? \n\n<img src=\"./ip_group_question.png\" alt=\"image-20220122220139210\" style=\"zoom:40%;\" />\n\n不同的IP网段可以设置不同的网关地址, 从而细粒度的控制流量出口. 一个默认macos下的路由表配置如下, 该机器ip为192.168.0.108, default网关为192.168.0.1, 访问127.0.0.1时会loopback到自己网卡, 访问192.168.0/24网段时会在en0网卡所处的进行链路层进行二层数据通信. \n\n<img src=\"./routing_table.png\" alt=\"image-20220122215006525\" style=\"zoom:50%;\" />\n\n路由器实现了网关的功能, 它工作的三层网络层, 可以实现三层协议的解包路由等功能. 当然路由器还有很多其他功能, 比如NAT等. \n\n路由器上会有很多网口, 可以按用处分为WAN口和LAN口, WAN口指的是接入其他Wide Area Network广域网的网口, LAN口指的是接入路由器内部Local Area Network局域网的网口. 往往内部LAN还支持Wifi的接入, 成为Wireless LAN (WLAN).  每个WAN口均可以提供三层能力, 即可配置独立的MAC及IP地址(独立网卡); LAN口则往往只具备二层传输能力, 提供交换机的功能. 具备三层能力的LAN口可以通过路由器配置作为WAN口服务.\n\n<img src=\"/Users/talentxiet/Desktop/我的学习文档/网络基础/router_wan_lan.png\" alt=\"router_wan_lan\" style=\"zoom:40%;\" />\n\n当路由器要串联多组子网时, 若想要子网间按期望进行通信的话, 就需要正确配置Router的路由表了. 路由表比较核心的三个配置属性是Destination, Gateway 和 Interface. \n\nDestination可以是网段, Host或者default (均不匹配时), 路由器网卡收到frame并解出目标IP后, 会逐一进行匹配, 匹配到对应记录后, 会按路由表配置, 将frame的目标MAC地址转换为所配网关的MAC地址, 并通过指定配置的Interface发送出去. 当没配置网关时, 会在Interface广播域对目标IP进行广播寻址.\n\n<img src=\"/Users/talentxiet/Desktop/我的学习文档/网络基础/router_trans.png\" alt=\"router_transfer\" style=\"zoom:36%;\" />\n\n<img src=\"./router_trans2.png\" alt=\"image-20220124222512944\" style=\"zoom:50%;\" />\n\n一个真实企业级路由器的图片如下: \n\n<img src=\"/Users/talentxiet/Desktop/我的学习文档/网络基础/real_router.png\" alt=\"image-20220122203856676\" style=\"zoom:45%;\" />\n\n### F5\n\nF5是一家美国公司, 卖的F5设备可提供4-7层的解包和路由能力, 相比工作于网络层的Router其功能就更丰富了. 包括负载均衡，应用状态监控，高可用性保障，广域流量管理，链路控制；内容转换，高速缓存，SSL加速和卸载等能力等等.\n\n<img src=\"./real_f5.png\" alt=\"image-20220122205509626\" style=\"zoom:60%;\" />\n\n## 真实组网案例\n\n### 公共网络\n\n\n\n### 家庭网络\n\n\n\n## Glossary:\n\n### Ethernet 以太网\n\n以太网(Ethernet)是一种计算机局域网技术, 提出于1980s。IEEE组织的IEEE 802.3标准制定了以太网的技术标准, 后续延伸出了802.3~11标准，它规定了包括物理层的连线、电子信号和介质访问层协议的内容。以太网是当前应用最普遍的局域网技术，取代了其他局域网标准如令牌环、FDDI 和 ARCNET。\n\n### 广播域 broadcast domain\n\n广播域（Broadcast domain）是计算机网络的一个逻辑划分。广播域中的任意一个节点可以在数据链路层通过广播的方式到达任意一个节点。广播域可以处于同一个局域网内,也可以被桥接到其他的局域网。\n\n根据目前的流行技术，任意连接到同一 repeater 或者 switch 的电脑属于同一个广播域，并且任意连接到同一个inter-connected的 repeater 或 switch 的集合的电脑也是属于同一个广播域的。而 Router 和其他high-level devices会在广播域间形成隔离。\n\n### 冲突域 collision domain\n\n与广播域相对的是冲突域。冲突域中所有节点都链接到同一个被集线器、交换机和学习型网桥划分的相互连接的中继器集合。冲突域一般来说小于或者包含在广播域中。 冲突域下的碰撞问题通过CSMA/CD (Carrier-sense multiple access)解决.\n\n\n\n## 常用命令\n\n### traceroute实现\n\n向目标ip发送ICMP echo包或随机30000+大端口发送udp包,  通过TTL和ICMP结果返回报文判断路由点地址和通信时间.\n\n","source":"_posts/network-base.md","raw":"\n---\ntitle: 网络基础知识\n---\n\n\n## 分层模型 OSI model\n\n**Open Systems Interconnection model** (**OSI model**) 开放系统互联模型是一个概念性的参考模型, 不指定任何协议的具体实现. 核心思想在于不同网络层级间的解耦、接口独立, 任何一层协议可以升级替换后不影响整个网络功能, 在网络通信协议设计时起到一个指导作用.  \n<img src=\"osi7.png\" alt=\"image-osi\" style=\"zoom:50%;\" />\n\n### Definitions:\n\n+ 通信协议(Communication protocols): 让处于同层的不同host实体可以相互交互.\n\n+ Protocol data unit(PDU): 在每一层, 两个实体通过交换该层协议的PDU来进行交互, PDU包含payload(也称为[service data unit](https://en.wikipedia.org/wiki/Service_data_unit) ,SDU) 和 protocol-related headers or footers . \n\n+  数据通信流程: 从Layer highest开始, PDU向下层传递, 并作为下层的SDU; 重复向更下层传递直至Layer lowest; 接着,底层负责将PDU传递给对端底层; 然后,逐层向上传递,拆包解析出各层SDU.\n\n<img src=\"./osi_pdu_pass.png\" alt=\"image-20220119105145560\" style=\"zoom:40%;\" />\n\n<img src=\"osi_transfer_example.png\" alt=\"image-20220123111825642\" style=\"zoom:43%;\" />\n\n### Layer architecture\n\n#### Layer 1: Physical layer\n\n物理层负责非结构化原始数据的传输和接收, between device和物理传输介质。它将raw digital bits转换成electrical电子,optical光学 或radio无线信号等. 物理层规范规格包含蓝牙、以太网和USB标准等.\n\nExamples: Ethernet family 802.3 PHY(千兆宽带, 百兆宽带), 802.11 LAN & wireless(2.4Ghz, 5Ghz), BLE(Bluetooth Low Energy) PHY,   E1.\n\n#### Layer 2: Data link layer\n\n物理层的线路有传输介质与通信设备组成，比特流在传输介质上传输时肯定会存在误差错误的。这样就引入了数据链路层在物理层之上，采用差错检测、差错控制和流量控制等方法，向网络层提供高质量的数据传输服务。\n\n数据链路层从网络层接受数据包, 并在将其发送到物理层之前, 将这些数据包封装成帧frame. 之后在两个相邻节点间(node to node)的链路上传送帧，每一帧包括**数据**和必要的**头尾信息**（如同步信息、地址信息、差错信息等）. 如果帧太大(超过MTU)的话，数据链路层通常会将大帧拆分为一个个的小帧，小帧能够使传输控制和错误检测更加高效。\n\n#### Layer 3: Network layer\n\n网络层的任务就是提供能在不同的网络间transfer packets的程序和方法. 网络中会有非常多的nodes, 每个node会拥有自己的访问地址, 网络层就是要提供一种节点间路由寻址方式能让packet准确的传递给destination. 网络层还会在packet在某些MTU较小链路层传输时, 对原包进行分片, 独立传输, 并在下一链路node重新装配.  网络层可以做数据错误校验, 可靠性保障的功能, 但并不necessary.\n\n#### Layer 4: Transport layer\n\n传输层负责将变长数据(variable-length data sequences)从源传输到目的地, 并提供保障QoS的方式. \n\n#### Layer 5: Session layer\n\n会话层的主要功能是负责维护两个节点之间的传输联接，确保点到点传输不中断，以及管理数据交换等功能。会话层在应用进程中建立、管理和终止会话。\n\n#### Layer 6: Presentation layer\n\n表示层的主要功能是处理在两个通信系统中交换信息的表示方式，主要包括数据格式变化、[数据加密](https://baike.baidu.com/item/数据加密/11048982)与解密、[数据压缩](https://baike.baidu.com/item/数据压缩/5198909)与解压等\n\n#### Layer 7: Application layer\n\n该层直接面向用户，是OSI中的最高层。它的主要任务是为用户提供应用的接口，即提供不同计算机间的文件传送、访问与管理，电子邮件的内容处理，不同计算机通过网络交互访问的虚拟终端功能等.\n\n### Protocol stack examples\n\n#### BLE protocol stack\n\n<img src=\"./ble_osi.png\" alt=\"ble_osi\" style=\"zoom:80%;\" />\n\n## 分层模型——TCP/IP模型及协议族\n\nTCP/IP 模型将网络分为四层(算上物理层就是五层)，它不关注底层物理介质，主要关注终端之间的逻辑数据流转发。\nTCP/IP 模型的核心是**网络层**和**传输层**，网络层解决网络之间的逻辑转发问题，传输层保证源端到目的端之间的可靠传输。最上层的**应用层**通过各种协议向终端用户提供业务应用。\n\n### 物理层\n\n任何协议栈都逃不脱最终帮其传输数据的物理层. 物理层传递的都是bit flow, 而以太网使用的都是曼彻斯特编码信号. 曼彻斯特(Manchester)编码的编码方法是把每个码元分成两个相等的间隔。 如图,码元1是前一个间隔为高电压后一个间隔为低电压，即位周期中心向下跳变表示1；码元0正好相反，位周期中心向上跳变表示0。这样保证了在每一个 码元中间出现一次电压的转换，接收端就利用这种电压的转换方便地把位同步信号提取出来.\n\n<img src=\"./manchester.png\" alt=\"image-20220125225252662\" style=\"zoom:45%;\" />\n\n在链路层从物理层收到的bit流中提取数据时, 一个问题就是如何区分帧的开始.  Manchester + Preamble.\n\n<img src=\"./preamble.png\" alt=\"image-20220125230003591\" style=\"zoom:40%;\" />\n\n### 数据链路层\n\n数据链路层位于网络层之下, 这意味着它与网络层协议比如常用的IP协议是解耦的, 以**以太网数据链路层帧**为例, 在通信时, 其完全不关心payload中是IP协议报文或是其他协议报文, 而是完全通过帧首的源MAC、目标MAC地址进行寻址通信.\n\nIEEE 802 规范下数据链路层向下还可细分为 logical link control (LLC) 层和 medium access control (MAC) 层。\n\n<img src=\"./datalinklayer_sublayers.png\" alt=\"dll_sublayes\" style=\"zoom:40%;\" />\n\nLLC 层又叫做`逻辑控制链路`层，它主要用于数据传输，它充当网络层和数据链路层中的`媒体访问控制（MAC）`子层之间的接口。LLC 层的主要功能如下\n\n- LLC 的主要功能是发送时在 MAC 层上多路复用协议，并在接收时同样地多路分解协议。\n- LLC 提供跳到跳的流的差错控制，像是路由器和路由器之间这种相邻节点的数据传输称为 `一跳`。\n- 它允许通过计算机网络进行多点通信。\n\nMAC 层负责传输介质的流控制和多路复用，它的主要功能如下\n\n- MAC 层为 LLC 和 OSI 网络的上层提供了物理层的抽象。\n- MAC 层负责封装帧，以便通过物理介质进行传输。\n- MAC 层负责解析源和目标地址。\n- MAC 层还负责在冲突的情况下执行冲突解决并启动重传。\n- MAC 层负责生成帧校验序列，从而有助于防止传输错误。\n\n在 MAC 层中，有一个关键概念是 `MAC 地址`。MAC 地址主要用于识别数据链路中互联的节点. MAC 地址长 6 bytes (48 bit)，在使用`网卡(NIC)` 的情况下，MAC 地址一般都会烧入 ROM 中。因此，任何一个网卡的 MAC 地址都是唯一的。\n\n<img src=\"/Users/talentxiet/Desktop/我的学习文档/网络基础/mac_addr.png\" alt=\"mac_addr\" style=\"zoom:28%;\" />\n\n链路层的差错控制通过增加差错编码来实现, 又可分为**检错编码**和**纠错编码**: 检错编码常见有奇偶校验码和循环冗余码; 纠错编码常见有海明码等.\n\n流量(阻塞)控制是控制链路上的帧的发送速率，使接收方有足够的缓冲空间来接收帧，主要方法有两种，停止-等待协议和滑动窗口协议. 停止-等待协议是一种特殊的滑动窗口协议，相当于发送窗口和接收窗口大小为1的滑动窗口协议。\n\n<img src=\"./datalink_timewindow.png\" alt=\"image-20220121112137195\" style=\"zoom:40%;\" />\n\n以太网上传输的链路层数据帧有两种格式：**Ethernet_II 和 IEEE802.3**。选择哪种格式由 TCP/IP 协议簇中的网络层决定。大多数的数据帧使用的是 Ethernet_II 格式. IEEE802.3 格式：Length字段值小于等于0x05DC. Ethernet_II 格式：Type 字段值大于等于0x0600. 以此来供链路层判断数据是哪种规范.\n\n<img src=\"./data_link_layer_frame.png\" alt=\"image-20220119143457079\" style=\"zoom:45%;\" />\n\nFCS: frame check sequence, 错误检查的.\nLLC：Logical Link Control，逻辑链路控制由目的访问点 D.SAP （Destination Service Access Point）、源服务访问点 S.SAP（Source Service Access Point）和 Control 字段组成.\nSNAP：Sub-network Access Protocol，子网访问协议由机构代码（Org Code）和类型（Type）字段组成。Org Code 三个字节都为 0 。Type 字段的含义与 Ethernet_II 帧中的 Type 字段相同.\n\n### 网络层\n\n#### **IP协议**\n\n- 对于网络层，**IP协议**是其中一个非常重要的协议\n- IP协议使得复杂的实际网络变为一个**虚拟互联的网络**（也就是我们只需要将终端设备连接到这个网络中去即可，并不需要关心里边实际的复杂网络）\n- IP协议使得网络层可以**屏蔽底层细节**而专注网络层的**数据转发**（如果单从网络层去看，我们是不用关心**数据包**是通过海底电缆还是通过无线WiFi传输到目的计算机的）\n- IP协议**解决了在虚拟网络中数据报传输路径的问题**\n\n<img src=\"./ip_nets.png\" alt=\"image-20220125231347009\" style=\"zoom:40%;\" />\n\n**IP协议特点:**\n\n- 无状态, 是指IP通信双方不同步传输数据的状态信息，因此所有IP数据报的发送，传输，和接收都是相互独立的，没有山下文关系的。发送、传输和接收都是相互独立、没有上下文关系的。这种服务最大的缺点是无法处理乱序和重复的IP数据报。比如发送端发送出的第N个IP数据报可能比第N+1个IP数据报后到达接收端，而同一个IP数据报也可能经过不同的路径多次到达接收端。在这两种情况下，接收端的IP模块无法检测到乱序和重复，因为这些IP数据报之间没有任何上下文关系。接收端的IP模块只要收到了完整的IP数据报(如果是IP分片的话，IP 模块将先执行重组)，就将其数据部分(TCP报文段、UDP数据报或者ICMP报文)，上交给上层协议。那么从上层协议来看，这些数据就可能是乱序的、重复的。面向连接的协议，比如TCP协议，则能够自己处理乱序的、重复的报文段，它递交给上层协议的内容绝对是有序的、正确的。虽然IP数据报头部提供了一个标识字段(见后文)用以唯-标识-一个IP数据报，但它是被用来处理IP分片和重组的，而不是用来指示接收顺序的。无状态服务的优点也很明显:简单、高效。我们无须为保持通信的状态而分配一些内核资源，也无须每次传输数据时都携带状态信息。在网络协议中，无状态是很常见的，比如UDP协议和HTTP协议都是无状态协议。以HTTP协议为例，一个浏览器的连续两次网页请求之间没有任何关联，它们将被Web服务器独立地处理。\n- 无连接(connectionless), 是指IP通信双方都不长久地维持对方的任何信息。这样，上层协议每次发送数据的时候，都必须明确指定对方的IP地址。\n- 不可靠, 是指IP协议不能保证IP数据报准确地到达接收端，它只是承诺尽最大努力(best effort)。 很多种情况都能导致IP数据报发送失败。比如，某个中转路由器发现IP数据报在网络上存活的时间太长(根据IP数据报头部字段TTL判断，见后文)，那么它将丢弃之，并返回一个ICMP错误消息(超时错误)给发送端。又比如，接收端发现收到的IP数据报不正确(通过校验机制)，它也将丢弃之，并返回一个ICMP错误消息(IP 头部参数错误)给发送端。无论哪种情况，发送端的IP模块一旦检测到IP数据报发送失败，就通知上层协议发送失败，而不会试图重传。因此，使用IP服务的上层协议(比如TCP协议)需要自己实现数据确认、超时重传等机制以达到可靠传输的目的。\n\n**IP协议报文格式 :**\n\n<img src=\"./ip_packet.png\" alt=\"image-20220125234059378\" style=\"zoom:40%;\" />\n\n- **版本**：占4位，指的是IP协议的版本，通信双方的版本必须一致，即IPv4，也有IPv6\n\n- **首部长度**：占4位，最大数值为15，表示的是IP首部的长度，单位是“32位字”（4个字节），也就是**IP首部**最大长度为60字节\n\n- **服务类型**：服务登记, 比如VIP专线, 这个一般是不需要关心的\n\n- **总长度**：占16位，最大数值为65535，表示的是**IP数据报总长度**（IP首部+IP数据） （在前边介绍数据链路层的时候，也提到过一个长度。对于数据链路层的长度，称之为**MTU**，一般为1500字节。而IP数据报的最大长度有65535个字节，比MTU要大。如果真正传输的时候，如果出现这种情况，数据链路层会对IP数据报进行**分片**，也就是将一个较长的IP数据报拆分成多个数据帧来进行传输）\n\n- **标识**：占16位，计数器标示, 分片后的同组数据具备相同标示. 同一组的包根据标示重组.\n\n- **标记**： 占3位，但目前只有2位有意义。\n   标志字段中的最低位记为MF(More Fragment)。MF=1即表示后面“还有分片”的数据报,MF=0表示这已是若干数据报片中的最后一个\n   标志字段中间的一位记为DF(Don’t Fragment)，意思是“不能分片”。只有当DF=0时才允许分片。\n   \n- **片偏移**：前边有提到，如果IP数据报的长度过长，会进行IP报文的分片，把一个IP报文拆分成多个数据帧进行数据链路层的传输(以**8 Bytes**的倍数分包)。因此，如果拆分的话，就需要使用**片偏移**来记录当前的数据帧，保存的**第几个偏移的IP数据**\n\n   <img src=\"./ip_offset.png\" alt=\"image-20220129104929487\" style=\"zoom:45%;\" />\n\n- **TTL**：占8位，表明IP数据报文在网络中的**寿命**，每经过一个设备（不管是路由器还是计算机），TTL减一，当TTL=0时，网络设备必须**丢弃**该报文（它解决的就是，当网络报文找不到终点的时候，避免网络报文在网络中无限的传输，以消耗带宽）\n\n- **协议**：占8位，表明IP数据所携带的具体数据是什么**协议**的（如TCP、UDP等，一些协议对应的值，可参考下图）\n\n- **校验和**：占16位，校验IP首部是否有出错（接收方接收到IP首部之后也会进行校验，如果有错，则直接丢弃）\n\n- **源IP地址**：**发送**IP数据报的网络设备的IP地址\n\n- **目的IP地址**：IP数据报要**到达**的目的网络设备的IP地址\n\n#### **ICMP协议**\n\n<img src=\"./icmp_kinds.png\" alt=\"image-20220126215905234\" style=\"zoom:50%;\" />\n\n#### **路由选择协议**\n\n**自治系统**：autonomous system。在互联网中，一个自治系统(AS)是一个有权自主地决定在本系统中应采用各种[路由协议](https://baike.baidu.com/item/路由协议/202634)的小型单位。这个网络单位可以是一个简单的网络也可以是一个由一个或多个普通的[网络管理员](https://baike.baidu.com/item/网络管理员/595848)来控制的网络群体，它是一个单独的可管理的[网络单元](https://baike.baidu.com/item/网络单元/9928606)（例如一所大学，一个企业或者一个公司个体）。\n\n<img src=\"./ip_routing_protocol.png\" alt=\"image-20220126220513526\" style=\"zoom:50%;\" />\n\n内部网关协议:\n\n+ RIP, Routing Information Protocol: 优点, 算法简单; 缺点, 路由故障链路改变远端感知慢, 距离有限 max16, 大规模网络路由表可能过大.\n\n<img src=\"./rip.png\" alt=\"image-20220126220918042\" style=\"zoom:50%;\" />\n\n+ OSPF, Open Shortest Path First 开放的最短路径优先算法: \n\n  与RIP三个区别:（1）向本[自治系统](https://baike.baidu.com/item/自治系统)中所有路由器发送信息。（2）发送的信息就是与本[路由器](https://baike.baidu.com/item/路由器)相邻的所有路由器的链路状态，但这只是路由器所知道的部分信息。（3）只有在链路状态发生变化时，[路由器](https://baike.baidu.com/item/路由器)才向所有路由器用[洪泛](https://baike.baidu.com/item/洪泛)法发送此信息。\n\n外部(边界)网关协议:\n\nBGP用于在不同的自治系统（AS）之间交换路由信息。当两个AS需要交换路由信息时，每个AS都必须指定一个运行BGP的节点，来代表AS与其他的AS交换路由信息。两个AS中利用BGP交换信息的路由器也被称为边界网关（Border Gateway）或边界路由器（Border Router）. \n\n<img src=\"./BGP_speaker.png\" alt=\"image-20220126223533819\" style=\"zoom:50%;\" />\n\n<img src=\"./BGP_example.png\" alt=\"image-20220126223429235\" style=\"zoom:40%;\" />\n\n\n\n### 传输层\n\n端口作用, 实现进程到进程的通信, 复用ip线路, 提供标准的的端口->进程的映射方式.\n\n<img src=\"./transport_process.png\" alt=\"image-20220126230009234\" style=\"zoom:50%;\" />\n\n#### UDP\n\nUDP, User Datagram Protocol用户数据报协议, 只在IP基础上多了复用分用和差错校验的功能.\n\n##### 特点\n\n+ 无连接\n+ 尽努力交付\n+ 面向报文的\n+ 无拥塞控制\n+ 支持一对一、一对多、多对一、多对多\n+ 首部开销小\n\n##### 协议格式\n\n<img src=\"./udp_protocol.png\" alt=\"image-20220126233302042\" style=\"zoom:45%;\" />\n\n#### TCP\n\n##### 特点\n\n+ 面向连接\n\n+ 每条点对点(socket1, socket2)\n\n+ 可靠的\n\n+ 全双工\n\n+ 面向字节流的\n\n+ 为应用程序间提供逻辑通信链路\n\n  <img src=\"./tcp_bytes_stream.png\" alt=\"image-20220129001752910\" style=\"zoom:50%;\" />\n\n##### 协议格式\n\n<img src=\"./tcp_protocol.png\" alt=\"image-20220127225910379\" style=\"zoom:50%;\" />\n\n**16位源端口号**：指发送端的端口号\n**16位目的端口号**：指目的端的端口号\n**4位头部长度**：同IP头部，表示TCP头部的大小，以4字节为单位。\n**32位序列号**：TCP通信过程中，通过序列号来保证传输过程中数据的有序性\n**32位确认号**：用以对接受到的报文进行确认\n**保留6位**\n**URG**：表示紧急指针\n**ACK**：表示确认号\n**PSH**：通知对端立即从缓冲区取走数据\n**RST**: 通知当前连接出现问题, 要释放资源, 有需要则重新建立连接. 也可用于拒绝非法连接. \n**SYN**：表示请求建立连接\n**FIN**：标志要通知对端本端的数据发送要关闭\n**16位窗口大小**：TCP流量控制的手段，告诉发送方本端的接收端缓冲区还能接受多少数据, 单位字节.\n**16位校验和**：由发送方填充，接收端用以检查TCP报文在传输过程中是否有损坏\n\n##### 可靠性\n\n###### 滑动窗口\n\nA根据B TCP ack报文中的窗口大小发送滑动窗口大小以内的若干数据给B, 给回复按序抵达的最大包序号, 即31. B不应过度拖延回复ack的时间.\n\n<img src=\"./tcp_window.png\" alt=\"image-20220128000255497\" style=\"zoom:50%;\" />\n\n<img src=\"./tcp_buffer.png\" alt=\"image-20220128000641845\" style=\"zoom:50%;\" />\n\n需注意, tcp是全双工通信, 每端都有自己的发送和接受窗口及缓冲. \n\n###### 超时重传时间 Retransmision Time out\n\n<img src=\"./tcp_rto.png\" alt=\"image-20220128001439268\" style=\"zoom:40%;\" />\n\n###### 选择确认ACK Selective ACK\n\nSACK用于接收端向发送端报告部分未按序已收到的字节块, 从而避免重复传输. 需要tcp连接时 option增加SACK头, 双方确认支持SACK. 但是描述哪些数据已接受其实是比较复杂的, 尽管RFC2018有详细说明, 但使用还是较少, 大部分还是发送端重发所有未ack字节.\n\n<img src=\"./tcp_sack.png\" alt=\"image-20220128002718253\" style=\"zoom:50%;\" />\n\n\n\n##### TCP流量控制\n\n###### 可利用滑动窗口控制发送方流量\n\n\n\n###### TCP传输效率\n\n应用程序把发送数据给到TCP缓存就不管了, 由TCP负责控制发送时机将数据正确的发送出去. 这是一个比较复杂的问题.\n\n+ **Nagle算法**\n\n  TCP/IP协议中，无论发送多少数据，总是要在数据前面加上协议头，同时，对方接收到数据，也需要发送ACK表示确认。为了尽可能的利用网络带宽，TCP总是希望尽可能的发送足够大的数据。（一个连接会设置MSS参数，因此，TCP/IP希望每次都能够以MSS尺寸的数据块来发送数据）。Nagle算法就是为了尽可能发送大块数据，避免网络中充斥着许多小数据块。\n\n  Nagle算法的基本定义是**任意时刻，最多只能有一个未被确认的小段**。 所谓“小段”，指的是小于MSS尺寸的数据块，所谓“未被确认”，是指一个数据块发送出去后，没有收到对方发送的ACK确认该数据已收到。\n\n  Nagle算法的规则（可参考tcp_output.c文件里tcp_nagle_check函数注释）：\n\n  （1）如果包长度达到MSS，则允许发送；\n\n  （2）如果该包含有FIN，则允许发送；\n\n  （3）设置了TCP_NODELAY选项，则允许发送；\n\n  （4）未设置TCP_CORK选项时，若所有发出去的小数据包（包长度小于MSS）均被确认，则允许发送；\n\n  （5）上述条件都未满足，但发生了超时（一般为200ms），则立即发送。\n\n  ```bash\n      if there is new data to send #有数据要发送\n          # 发送窗口缓冲区和队列数据 >=mss，队列数据（available data）为原有的队列数据加上新到来的数据\n          # 也就是说缓冲区数据超过mss大小，nagle算法尽可能发送足够大的数据包\n          if the window size >= MSS and available data is >= MSS \n              send complete MSS segment now # 立即发送\n          else\n              if there is unconfirmed data still in the pipe # 前一次发送的包没有收到ack\n                  # 将该包数据放入队列中，直到收到一个ack再发送缓冲区数据\n                  enqueue data in the buffer until an acknowledge is received \n              else\n                  send data immediately # 立即发送\n              end if\n          end if\n      end if　\n  ```\n\n  Nagle算法只允许一个未被ACK的包存在于网络，它并不管包的大小，因此它事实上就是一个扩展的停-等协议，只不过它是基于包停-等的，而不是基于字节停-等的。\n\n+ **TCP确认延迟机制**\n\n  当Server端收到数据之后，它并不会马上向client端发送ACK，而是会将ACK的发送延迟一段时间（假设为t），它希望在t时间内server端会向client端发送应答数据，这样ACK就能够和应答数据一起发送，就像是应答数据**捎带着ACK**过去。初始化是40ms。\n\n+ **TCP_NODELAY 选项**\n\n  默认情况下，发送数据采用Nagle 算法。这样虽然提高了[网络吞吐量](https://baike.baidu.com/item/网络吞吐量/646450)，但是实时性却降低了，在一些交互性很强的应用程序来说是不允许的，使用TCP_NODELAY选项可以禁止Nagle 算法。\n\n  此时，应用程序向内核递交的每个数据包都会立即发送出去。需要注意的是，虽然禁止了Nagle 算法，但网络的传输仍然受到TCP确认延迟机制的影响。\n\n+ **TCP_CORK 选项**\n\n  所谓的CORK就是塞子的意思，形象地理解就是用CORK将连接塞住，使得数据先不发出去，等到拔去塞子后再发出去。设置该选项后，内核会尽力把小数据包拼接成一个大的数据包（一个MTU）再发送出去，当然若一定时间后（一般为200ms，该值尚待确认），内核仍然没有组合成一个MTU时也必须发送现有的数据（不可能让数据一直等待吧）。\n\n##### TCP拥塞控制\n\n+ 拥塞控制：防止过多的数据注入到网络中，这样可以使网络中的路由器或链路不致过载。拥塞控制所要做的都有一个前提：网络能够承受现有的网络负荷。拥塞控制是一个全局性的过程，涉及到所有的主机、路由器，以及与降低网络传输性能有关的所有因素。\n\n+ 流量控制：指点对点通信量的控制，是端到端的问题。流量控制所要做的就是抑制发送端发送的速率，以便使接收端来得及接收。\n\n解决拥塞问题一般是以下步骤: 1) 监测网络, 探测拥塞的位置与时间;  2) 将拥塞信息发送到能采取控制的地方; 3) 调整网络参数.\n\n常用方法: 慢开始( slow-start )、拥塞避免( congestion avoidance )、快重传( fast retransmit )和快恢复( fast recovery )。\n\n###### 慢开始\n\n发送方维持一个拥塞窗口 cwnd ( congestion window )的状态变量。拥塞窗口的大小取决于网络的拥塞程度，并且动态地在变化。发送方让自己的发送窗口等于拥塞窗口。发送方控制拥塞窗口的原则是：只要网络没有出现拥塞，拥塞窗口就再增大一些，以便把更多的分组发送出去。但只要网络出现拥塞，拥塞窗口就减小一些，以减少注入到网络中的分组数。\n\n慢开始算法：当主机开始发送数据时，如果立即所大量数据字节注入到网络，那么就有可能引起网络拥塞，因为现在并不清楚网络的负荷情况。因此，较好的方法是先探测一下，即由小到大逐渐增大发送窗口，也就是说，由小到大逐渐增大拥塞窗口数值。通常在刚刚开始发送报文段时，先把拥塞窗口 cwnd 设置为一个最大报文段MSS的数值。而在每收到一个对新的报文段的确认后，把拥塞窗口增加至多一个MSS的数值。用这样的方法逐步增大发送方的拥塞窗口 cwnd ，可以使分组注入到网络的速率更加合理。 cwnd = 1, 2, 4, 8 ...\n\n为了防止拥塞窗口cwnd增长过大引起网络拥塞，还需要设置一个慢开始门限ssthresh状态变量。慢开始门限ssthresh的用法如下：\n\n　　当 cwnd < ssthresh 时，使用上述的慢开始算法\n　　当 cwnd > ssthresh 时，停止使用慢开始算法而改用拥塞避免算法\n　　当 cwnd = ssthresh 时，既可使用慢开始算法，也可使用拥塞控制避免算法\n\n###### 拥塞避免\n\n让拥塞窗口cwnd缓慢地增大，即每经过一个往返时间RTT就把发送方的拥塞窗口cwnd加1，而不是加倍。这样拥塞窗口cwnd按线性规律缓慢增长，比慢开始算法的拥塞窗口增长速率缓慢得多。\n\n无论在慢开始阶段还是在拥塞避免阶段，只要发送方判断网络出现拥塞（其根据就是没有收到确认），就要把慢开始门限ssthresh设置为出现拥塞时的发送方窗口值的一半（但不能小于2）。然后把拥塞窗口cwnd重新设置为1，执行慢开始算法。这样做的目的就是要迅速减少主机发送到网络中的分组数，使得发生拥塞的路由器有足够时间把队列中积压的分组处理完毕。\n\n<img src=\"./tcp_slow_start.png\" alt=\"image-20220128190952845\" style=\"zoom:40%;\" />\n\n###### 快重传和快恢复\n\n快重传算法首先要求接收方每收到一个报文段后(即便是后序)就立即发出重复确认（为的是使发送方及早知道有报文段没有到达对方），而不要等到自己发送数据时才进行捎带确认。当发送方连续收到三个重复确认，就执行“乘法减小”算法，把慢开始门限ssthresh减半。在采用快恢复算法时，慢开始算法只是在TCP连接建立时和网络出现超时时才使用。采用这样的拥塞控制方法使得TCP的性能有明显的改进。\n\n<img src=\"./tcp_congest.png\" alt=\"image-20220128190034654\" style=\"zoom:50%;\" />\n\n##### TCP连接管理\n\n###### 三次握手\n\n三次握手是为了建立连接, 双方确认对方的存在,并协商一些参数,如窗口大小 , 初始化一下缓冲队列资源等. 为了确认双方存在, 头两次sync, sync+ack是 省不了的, 那第三次ack是为了做什么呢? 是为了避免已失效的sync请求又抵达B, 又消耗B的资源. 有了第三次ack, 当无效的syn被server sync+ack后, client不会回复ack, 超时后server也就会再销毁掉对应资源.\n\n<img src=\"./tcp_handshake.png\" alt=\"image-20220129000032602\" style=\"zoom:50%;\" />\n\n###### 四次挥手\n\n<img src=\"./tcp_bye_handshake.png\" alt=\"image-20220129002627713\" style=\"zoom:50%;\" />\n\n**MSL**: Max Segment lifetime, 报文端最大寿命. \n\n为什么A收到 FIN 后要等两个MSL呢? \n\n1. 确保能回复FIN的ack, 如果B没收到ack, 会重新发送FIN+ACK. 这时如果A已经断了, B就只能自己特殊处理到CLOSED状态.\n2. 尽量让本次连接 网络中的网络包都传输完, 不会在新连接中收到旧连接报文.\n\n##### TCP有限状态机\n\n<img src=\"./tcp_state.png\" alt=\"image-20220129152318656\" style=\"zoom:50%;\" />\n\n\n\n#### 应用层\n\n## 应用层常用协议\n\n### DNS\n\n基于UDP, **53**端口:  query请求(src port: 12868 , dst port: 53 ) + response响应(src port: 53, dst port: 12868 )\n\n迭代查询 or 递归查询 + 缓存. \n\n**解析顺序**: 浏览器缓存, 系统缓存, 路由器DNS缓存 , ISP DNS 缓存, 根域名服务器, 顶级域名服务器, 主域名服务器, 保存结果至缓存.\n\n<img src=\"./dns.png\" alt=\"image-20220129165409193\" style=\"zoom:40%;\" />\n\n### HTTP\n\nHTTP协议发展历程:\n\n![image-20220127112311050](/Users/talentxiet/Library/Application Support/typora-user-images/image-20220127112311050.png)\n\n协议格式:\n\n<img src=\"./http_protocol.png\" alt=\"image-20220130002354946\" style=\"zoom:50%;\" />\n\n### SMTP\n\n<img src=\"./smtp.png\" alt=\"image-20220130002634963\" style=\"zoom:45%;\" />\n\n### DHCP\n\n<img src=\"./dhcp.png\" alt=\"image-20220130221121647\" style=\"zoom:50%;\" />\n\n## 应用程序间通信过程\n\n### 系统调用&socket套接字\n\n<img src=\"./syscall.png\" alt=\"image-20220130221429374\" style=\"zoom:50%;\" />\n\n<img src=\"./socket2.png\" alt=\"image-20220130224749539\" style=\"zoom:50%;\" />\n\n\n\n## 网络安全\n\n四个目标:\n\n+ 保密性\n+ 端点鉴别\n+ 信息完整性\n+ 运行安全性 访问控制\n\n<img src=\"./net_sec_key.png\" alt=\"image-20220205185347484\" style=\"zoom:50%;\" />\n\n### DES AES\n\ndata encryption standard,  advanced encrytion standard, 对称加密、\n\n### 公钥密码体制\n\n任何加解密算法的安全性都取决于密钥长度,以及攻破密文的计算量\n\n### 数字签名\n\n目标:\n\n+ 接收者能核实发送者对报文的数字签名, 即是发送者发的\n+ 收到的数据是完整的\n+ 发送者事后不可抵赖数字签名\n\n<img src=\"./signature.png\" alt=\"image-20220205191312308\" style=\"zoom:50%;\" />\n\n### 报文鉴别\n\n加解密算法可以实现报文鉴别,但是消耗cpu, 所以常用密码散列算法保护数据完整性. MD5 (message digest 第五代)和 SHA-1,2,3(secure hash algorithm).\n\n<img src=\"./sec_mac.png\" alt=\"image-20220205193055077\" style=\"zoom:50%;\" />\n\nMAC: message authentication code,\n\n### 密钥分配\n\n#### 对称密钥分配\n\n对称密钥是一对一的, 任意双方通信都要有唯一的key, 通常由KDC动态随机分配\n\n<img src=\"./对称密钥分配.png\" alt=\"image-20220205195510847\" style=\"zoom:50%;\" />\n\n#### 公钥分配\n\n由受信任的机构维护公钥和实体的关系, 通常是政府机构, 称之为CA (certification authority), 每个实体会被颁布 证书(certificate), 证书中包含拥有者标示, 公钥, 且此证书被CA进行了数字签名. 公众可以从机构公开信息中获取到机构的公钥, 对签名和 证书信息进行验证.\n\n为了使CA拥有统一格式, IETF接受了ITU制定的X.509规范.\n\n### 互联网中的安全协议\n\n#### 网络层\n\n##### IPsec\n\n<img src=\"./ipsec.png\" alt=\"image-20220206000051358\" style=\"zoom:50%;\" />\n\n#### 传输层\n\n##### SSL\n\nSecure Socket Layer, Netscape开发, 95年交给IETF\n\n<img src=\"./ssl.png\" alt=\"image-20220206001829432\" style=\"zoom:50%;\" />\n\n<img src=\"./ssl_procedure.png\" alt=\"image-20220206002408083\" style=\"zoom:50%;\" />\n\n##### TLS\n\nTransport Layer Security, 基于SSL3.0设计. \n\n### 防火墙\n\n是一种访问控制技术, 通常是特殊编程的路由器, 进行访问策略控制. \n\n+ 分组过滤路由器: 根据 源/目的 IP/端口 协议类型进行分组过滤控制.\n+ 应用网关: 应用层网关, 根据应用层报文鉴权转发\n\n## 实时音视频相关协议\n\n<img src=\"./av_protocols.png\" alt=\"image-20220206165809797\" style=\"zoom:50%;\" />\n\n### RTP\n\n<img src=\"./rtp_protocol.png\" alt=\"image-20220206165710831\" style=\"zoom:50%;\" />\n\n### RTCP\n\n<img src=\"./rtcp.png\" alt=\"image-20220206172316751\" style=\"zoom:50%;\" />\n\n## 常见网络设备\n\n### Repeater中继器\n\n中继器是一个将输入信号增强放大的设备, 把信号送得更远，以延展网络长度. 与具体信号形式无关,比如卫星雷达, 以太网集线器; 属于物理层\n\n### Hub集线器 \n\n集线器（Ethernet hub）是指将多条以太网双绞线或光纤集合连接在同一段物理介质下的设备。集线器运作在OSI模型中的物理层，可以让其链接的设备工作在同一网段。集线器上有多个I/O端口，信号从任意一个端口进入后，会从其他端口出现. \n\n由于集线器会把收到的任何数字信号，从集线器的所有端口提交，这会造成信号之间碰撞的机会很大，而且信号也可能被窃听，并且这代表所有连到集线器的设备，都是属于同一个冲突网域以及广播网域(hub间组网所有hub都属于同一广播域), 冲突和泛洪严重，因此大部分Hub已被Switch代替.\n\n<img src=\"./hub_pic.png\" alt=\"image-20220121154139634\" style=\"zoom:35%;\" />\n\n### Bridge网桥\n\n网桥工作在第二层数据链路层, 可以解析出链路层数据包, 并在Bridge内维护每个端口和连接着的设备MAC地址映射关系, 从而可以动态判断是否要转发收到的物理帧, 从而在一定程度上解决hub间的泛洪问题.\n\n<img src=\"/Users/talentxiet/Desktop/我的学习文档/网络基础/bridge_pic.png\" alt=\"image-20220121155228284\" style=\"zoom:50%;\" />\n\n### Switch交换机\n\n二层交换机: 二层交换机工作在数据链路层, 相比Hub, 它可以解析物理帧中的链路层frame信息,并基于frame中的mac地址与交换机端口进行缓存映射, 从而高效的解决Hub的冲突, 泛洪等问题. 此外交换机通常还支持划分VLAN的功能, VLAN可以创建相互隔离的子LAN, 从而缩小广播域大小. \n\n<img src=\"./switch_pic.png\" alt=\"image-20220121160921808\" style=\"zoom:55%;\" />\n\n交换机组网示例:\n\n<img src=\"./switch_net.png\" alt=\"image-20220122201304858\" style=\"zoom:50%;\" />\n\n三层交换机: 三层交换机在交换机的基础之上加了网络层协议的解析能力, 以及一些简单的三层路由功能. 不过它的主要功能还是交换机的，同时它的价格比路由器价格偏低，实用性更高。\n\n一个真实的交换机图片如下所示:\n\n<img src=\"./real_switch.png\" alt=\"image-20220122202630798\" style=\"zoom:38%;\" />\n\n### Router路由器 (网关)\n\n讲到路由器,我们要先讲一下IP子网和网关(Gateway), IP地址+掩码标示了IP网段, 不同网段间的网络相互隔离. 而网关, 顾名思义, 就是不同网络间连接的关口, 在网络层上实现网络连通. 网关概念也可延伸到应用服务网关, 这里我们讨论的均指TCP/IP协议下网关.\n\n在TCP/IP协议的系统内核层, 会在网络层向链路层封包时, 检测目标IP与源IP是否在同一子网, 如果在同一子网, 封包时的对端MAC地址通过ARP协议获取; 而当不在同一子网时, 会使用网关的MAC作为目标MAC地址. 可以用下图思考一下, 不同子网间通信时的隔离性到底是如何实现的? \n\n<img src=\"./ip_group_question.png\" alt=\"image-20220122220139210\" style=\"zoom:40%;\" />\n\n不同的IP网段可以设置不同的网关地址, 从而细粒度的控制流量出口. 一个默认macos下的路由表配置如下, 该机器ip为192.168.0.108, default网关为192.168.0.1, 访问127.0.0.1时会loopback到自己网卡, 访问192.168.0/24网段时会在en0网卡所处的进行链路层进行二层数据通信. \n\n<img src=\"./routing_table.png\" alt=\"image-20220122215006525\" style=\"zoom:50%;\" />\n\n路由器实现了网关的功能, 它工作的三层网络层, 可以实现三层协议的解包路由等功能. 当然路由器还有很多其他功能, 比如NAT等. \n\n路由器上会有很多网口, 可以按用处分为WAN口和LAN口, WAN口指的是接入其他Wide Area Network广域网的网口, LAN口指的是接入路由器内部Local Area Network局域网的网口. 往往内部LAN还支持Wifi的接入, 成为Wireless LAN (WLAN).  每个WAN口均可以提供三层能力, 即可配置独立的MAC及IP地址(独立网卡); LAN口则往往只具备二层传输能力, 提供交换机的功能. 具备三层能力的LAN口可以通过路由器配置作为WAN口服务.\n\n<img src=\"/Users/talentxiet/Desktop/我的学习文档/网络基础/router_wan_lan.png\" alt=\"router_wan_lan\" style=\"zoom:40%;\" />\n\n当路由器要串联多组子网时, 若想要子网间按期望进行通信的话, 就需要正确配置Router的路由表了. 路由表比较核心的三个配置属性是Destination, Gateway 和 Interface. \n\nDestination可以是网段, Host或者default (均不匹配时), 路由器网卡收到frame并解出目标IP后, 会逐一进行匹配, 匹配到对应记录后, 会按路由表配置, 将frame的目标MAC地址转换为所配网关的MAC地址, 并通过指定配置的Interface发送出去. 当没配置网关时, 会在Interface广播域对目标IP进行广播寻址.\n\n<img src=\"/Users/talentxiet/Desktop/我的学习文档/网络基础/router_trans.png\" alt=\"router_transfer\" style=\"zoom:36%;\" />\n\n<img src=\"./router_trans2.png\" alt=\"image-20220124222512944\" style=\"zoom:50%;\" />\n\n一个真实企业级路由器的图片如下: \n\n<img src=\"/Users/talentxiet/Desktop/我的学习文档/网络基础/real_router.png\" alt=\"image-20220122203856676\" style=\"zoom:45%;\" />\n\n### F5\n\nF5是一家美国公司, 卖的F5设备可提供4-7层的解包和路由能力, 相比工作于网络层的Router其功能就更丰富了. 包括负载均衡，应用状态监控，高可用性保障，广域流量管理，链路控制；内容转换，高速缓存，SSL加速和卸载等能力等等.\n\n<img src=\"./real_f5.png\" alt=\"image-20220122205509626\" style=\"zoom:60%;\" />\n\n## 真实组网案例\n\n### 公共网络\n\n\n\n### 家庭网络\n\n\n\n## Glossary:\n\n### Ethernet 以太网\n\n以太网(Ethernet)是一种计算机局域网技术, 提出于1980s。IEEE组织的IEEE 802.3标准制定了以太网的技术标准, 后续延伸出了802.3~11标准，它规定了包括物理层的连线、电子信号和介质访问层协议的内容。以太网是当前应用最普遍的局域网技术，取代了其他局域网标准如令牌环、FDDI 和 ARCNET。\n\n### 广播域 broadcast domain\n\n广播域（Broadcast domain）是计算机网络的一个逻辑划分。广播域中的任意一个节点可以在数据链路层通过广播的方式到达任意一个节点。广播域可以处于同一个局域网内,也可以被桥接到其他的局域网。\n\n根据目前的流行技术，任意连接到同一 repeater 或者 switch 的电脑属于同一个广播域，并且任意连接到同一个inter-connected的 repeater 或 switch 的集合的电脑也是属于同一个广播域的。而 Router 和其他high-level devices会在广播域间形成隔离。\n\n### 冲突域 collision domain\n\n与广播域相对的是冲突域。冲突域中所有节点都链接到同一个被集线器、交换机和学习型网桥划分的相互连接的中继器集合。冲突域一般来说小于或者包含在广播域中。 冲突域下的碰撞问题通过CSMA/CD (Carrier-sense multiple access)解决.\n\n\n\n## 常用命令\n\n### traceroute实现\n\n向目标ip发送ICMP echo包或随机30000+大端口发送udp包,  通过TTL和ICMP结果返回报文判断路由点地址和通信时间.\n\n","slug":"network-base","published":1,"date":"2022-02-07T15:16:57.429Z","updated":"2022-03-18T03:49:16.025Z","_id":"ckzcu8epe0000u4je09ey43dg","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"分层模型-OSI-model\"><a href=\"#分层模型-OSI-model\" class=\"headerlink\" title=\"分层模型 OSI model\"></a>分层模型 OSI model</h2><p><strong>Open Systems Interconnection model</strong> (<strong>OSI model</strong>) 开放系统互联模型是一个概念性的参考模型, 不指定任何协议的具体实现. 核心思想在于不同网络层级间的解耦、接口独立, 任何一层协议可以升级替换后不影响整个网络功能, 在网络通信协议设计时起到一个指导作用.<br><img src=\"osi7.png\" alt=\"image-osi\" style=\"zoom:50%;\" /></p>\n<h3 id=\"Definitions\"><a href=\"#Definitions\" class=\"headerlink\" title=\"Definitions:\"></a>Definitions:</h3><ul>\n<li><p>通信协议(Communication protocols): 让处于同层的不同host实体可以相互交互.</p>\n</li>\n<li><p>Protocol data unit(PDU): 在每一层, 两个实体通过交换该层协议的PDU来进行交互, PDU包含payload(也称为<a href=\"https://en.wikipedia.org/wiki/Service_data_unit\">service data unit</a> ,SDU) 和 protocol-related headers or footers . </p>\n</li>\n<li><p> 数据通信流程: 从Layer highest开始, PDU向下层传递, 并作为下层的SDU; 重复向更下层传递直至Layer lowest; 接着,底层负责将PDU传递给对端底层; 然后,逐层向上传递,拆包解析出各层SDU.</p>\n</li>\n</ul>\n<img src=\"./osi_pdu_pass.png\" alt=\"image-20220119105145560\" style=\"zoom:40%;\" />\n\n<img src=\"osi_transfer_example.png\" alt=\"image-20220123111825642\" style=\"zoom:43%;\" />\n\n<h3 id=\"Layer-architecture\"><a href=\"#Layer-architecture\" class=\"headerlink\" title=\"Layer architecture\"></a>Layer architecture</h3><h4 id=\"Layer-1-Physical-layer\"><a href=\"#Layer-1-Physical-layer\" class=\"headerlink\" title=\"Layer 1: Physical layer\"></a>Layer 1: Physical layer</h4><p>物理层负责非结构化原始数据的传输和接收, between device和物理传输介质。它将raw digital bits转换成electrical电子,optical光学 或radio无线信号等. 物理层规范规格包含蓝牙、以太网和USB标准等.</p>\n<p>Examples: Ethernet family 802.3 PHY(千兆宽带, 百兆宽带), 802.11 LAN &amp; wireless(2.4Ghz, 5Ghz), BLE(Bluetooth Low Energy) PHY,   E1.</p>\n<h4 id=\"Layer-2-Data-link-layer\"><a href=\"#Layer-2-Data-link-layer\" class=\"headerlink\" title=\"Layer 2: Data link layer\"></a>Layer 2: Data link layer</h4><p>物理层的线路有传输介质与通信设备组成，比特流在传输介质上传输时肯定会存在误差错误的。这样就引入了数据链路层在物理层之上，采用差错检测、差错控制和流量控制等方法，向网络层提供高质量的数据传输服务。</p>\n<p>数据链路层从网络层接受数据包, 并在将其发送到物理层之前, 将这些数据包封装成帧frame. 之后在两个相邻节点间(node to node)的链路上传送帧，每一帧包括<strong>数据</strong>和必要的<strong>头尾信息</strong>（如同步信息、地址信息、差错信息等）. 如果帧太大(超过MTU)的话，数据链路层通常会将大帧拆分为一个个的小帧，小帧能够使传输控制和错误检测更加高效。</p>\n<h4 id=\"Layer-3-Network-layer\"><a href=\"#Layer-3-Network-layer\" class=\"headerlink\" title=\"Layer 3: Network layer\"></a>Layer 3: Network layer</h4><p>网络层的任务就是提供能在不同的网络间transfer packets的程序和方法. 网络中会有非常多的nodes, 每个node会拥有自己的访问地址, 网络层就是要提供一种节点间路由寻址方式能让packet准确的传递给destination. 网络层还会在packet在某些MTU较小链路层传输时, 对原包进行分片, 独立传输, 并在下一链路node重新装配.  网络层可以做数据错误校验, 可靠性保障的功能, 但并不necessary.</p>\n<h4 id=\"Layer-4-Transport-layer\"><a href=\"#Layer-4-Transport-layer\" class=\"headerlink\" title=\"Layer 4: Transport layer\"></a>Layer 4: Transport layer</h4><p>传输层负责将变长数据(variable-length data sequences)从源传输到目的地, 并提供保障QoS的方式. </p>\n<h4 id=\"Layer-5-Session-layer\"><a href=\"#Layer-5-Session-layer\" class=\"headerlink\" title=\"Layer 5: Session layer\"></a>Layer 5: Session layer</h4><p>会话层的主要功能是负责维护两个节点之间的传输联接，确保点到点传输不中断，以及管理数据交换等功能。会话层在应用进程中建立、管理和终止会话。</p>\n<h4 id=\"Layer-6-Presentation-layer\"><a href=\"#Layer-6-Presentation-layer\" class=\"headerlink\" title=\"Layer 6: Presentation layer\"></a>Layer 6: Presentation layer</h4><p>表示层的主要功能是处理在两个通信系统中交换信息的表示方式，主要包括数据格式变化、<a href=\"https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%8A%A0%E5%AF%86/11048982\">数据加密</a>与解密、<a href=\"https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%8E%8B%E7%BC%A9/5198909\">数据压缩</a>与解压等</p>\n<h4 id=\"Layer-7-Application-layer\"><a href=\"#Layer-7-Application-layer\" class=\"headerlink\" title=\"Layer 7: Application layer\"></a>Layer 7: Application layer</h4><p>该层直接面向用户，是OSI中的最高层。它的主要任务是为用户提供应用的接口，即提供不同计算机间的文件传送、访问与管理，电子邮件的内容处理，不同计算机通过网络交互访问的虚拟终端功能等.</p>\n<h3 id=\"Protocol-stack-examples\"><a href=\"#Protocol-stack-examples\" class=\"headerlink\" title=\"Protocol stack examples\"></a>Protocol stack examples</h3><h4 id=\"BLE-protocol-stack\"><a href=\"#BLE-protocol-stack\" class=\"headerlink\" title=\"BLE protocol stack\"></a>BLE protocol stack</h4><img src=\"./ble_osi.png\" alt=\"ble_osi\" style=\"zoom:80%;\" />\n\n<h2 id=\"分层模型——TCP-IP模型及协议族\"><a href=\"#分层模型——TCP-IP模型及协议族\" class=\"headerlink\" title=\"分层模型——TCP/IP模型及协议族\"></a>分层模型——TCP/IP模型及协议族</h2><p>TCP/IP 模型将网络分为四层(算上物理层就是五层)，它不关注底层物理介质，主要关注终端之间的逻辑数据流转发。<br>TCP/IP 模型的核心是<strong>网络层</strong>和<strong>传输层</strong>，网络层解决网络之间的逻辑转发问题，传输层保证源端到目的端之间的可靠传输。最上层的<strong>应用层</strong>通过各种协议向终端用户提供业务应用。</p>\n<h3 id=\"物理层\"><a href=\"#物理层\" class=\"headerlink\" title=\"物理层\"></a>物理层</h3><p>任何协议栈都逃不脱最终帮其传输数据的物理层. 物理层传递的都是bit flow, 而以太网使用的都是曼彻斯特编码信号. 曼彻斯特(Manchester)编码的编码方法是把每个码元分成两个相等的间隔。 如图,码元1是前一个间隔为高电压后一个间隔为低电压，即位周期中心向下跳变表示1；码元0正好相反，位周期中心向上跳变表示0。这样保证了在每一个 码元中间出现一次电压的转换，接收端就利用这种电压的转换方便地把位同步信号提取出来.</p>\n<img src=\"./manchester.png\" alt=\"image-20220125225252662\" style=\"zoom:45%;\" />\n\n<p>在链路层从物理层收到的bit流中提取数据时, 一个问题就是如何区分帧的开始.  Manchester + Preamble.</p>\n<img src=\"./preamble.png\" alt=\"image-20220125230003591\" style=\"zoom:40%;\" />\n\n<h3 id=\"数据链路层\"><a href=\"#数据链路层\" class=\"headerlink\" title=\"数据链路层\"></a>数据链路层</h3><p>数据链路层位于网络层之下, 这意味着它与网络层协议比如常用的IP协议是解耦的, 以<strong>以太网数据链路层帧</strong>为例, 在通信时, 其完全不关心payload中是IP协议报文或是其他协议报文, 而是完全通过帧首的源MAC、目标MAC地址进行寻址通信.</p>\n<p>IEEE 802 规范下数据链路层向下还可细分为 logical link control (LLC) 层和 medium access control (MAC) 层。</p>\n<img src=\"./datalinklayer_sublayers.png\" alt=\"dll_sublayes\" style=\"zoom:40%;\" />\n\n<p>LLC 层又叫做<code>逻辑控制链路</code>层，它主要用于数据传输，它充当网络层和数据链路层中的<code>媒体访问控制（MAC）</code>子层之间的接口。LLC 层的主要功能如下</p>\n<ul>\n<li>LLC 的主要功能是发送时在 MAC 层上多路复用协议，并在接收时同样地多路分解协议。</li>\n<li>LLC 提供跳到跳的流的差错控制，像是路由器和路由器之间这种相邻节点的数据传输称为 <code>一跳</code>。</li>\n<li>它允许通过计算机网络进行多点通信。</li>\n</ul>\n<p>MAC 层负责传输介质的流控制和多路复用，它的主要功能如下</p>\n<ul>\n<li>MAC 层为 LLC 和 OSI 网络的上层提供了物理层的抽象。</li>\n<li>MAC 层负责封装帧，以便通过物理介质进行传输。</li>\n<li>MAC 层负责解析源和目标地址。</li>\n<li>MAC 层还负责在冲突的情况下执行冲突解决并启动重传。</li>\n<li>MAC 层负责生成帧校验序列，从而有助于防止传输错误。</li>\n</ul>\n<p>在 MAC 层中，有一个关键概念是 <code>MAC 地址</code>。MAC 地址主要用于识别数据链路中互联的节点. MAC 地址长 6 bytes (48 bit)，在使用<code>网卡(NIC)</code> 的情况下，MAC 地址一般都会烧入 ROM 中。因此，任何一个网卡的 MAC 地址都是唯一的。</p>\n<img src=\"/Users/talentxiet/Desktop/我的学习文档/网络基础/mac_addr.png\" alt=\"mac_addr\" style=\"zoom:28%;\" />\n\n<p>链路层的差错控制通过增加差错编码来实现, 又可分为<strong>检错编码</strong>和<strong>纠错编码</strong>: 检错编码常见有奇偶校验码和循环冗余码; 纠错编码常见有海明码等.</p>\n<p>流量(阻塞)控制是控制链路上的帧的发送速率，使接收方有足够的缓冲空间来接收帧，主要方法有两种，停止-等待协议和滑动窗口协议. 停止-等待协议是一种特殊的滑动窗口协议，相当于发送窗口和接收窗口大小为1的滑动窗口协议。</p>\n<img src=\"./datalink_timewindow.png\" alt=\"image-20220121112137195\" style=\"zoom:40%;\" />\n\n<p>以太网上传输的链路层数据帧有两种格式：<strong>Ethernet_II 和 IEEE802.3</strong>。选择哪种格式由 TCP/IP 协议簇中的网络层决定。大多数的数据帧使用的是 Ethernet_II 格式. IEEE802.3 格式：Length字段值小于等于0x05DC. Ethernet_II 格式：Type 字段值大于等于0x0600. 以此来供链路层判断数据是哪种规范.</p>\n<img src=\"./data_link_layer_frame.png\" alt=\"image-20220119143457079\" style=\"zoom:45%;\" />\n\n<p>FCS: frame check sequence, 错误检查的.<br>LLC：Logical Link Control，逻辑链路控制由目的访问点 D.SAP （Destination Service Access Point）、源服务访问点 S.SAP（Source Service Access Point）和 Control 字段组成.<br>SNAP：Sub-network Access Protocol，子网访问协议由机构代码（Org Code）和类型（Type）字段组成。Org Code 三个字节都为 0 。Type 字段的含义与 Ethernet_II 帧中的 Type 字段相同.</p>\n<h3 id=\"网络层\"><a href=\"#网络层\" class=\"headerlink\" title=\"网络层\"></a>网络层</h3><h4 id=\"IP协议\"><a href=\"#IP协议\" class=\"headerlink\" title=\"IP协议\"></a><strong>IP协议</strong></h4><ul>\n<li>对于网络层，<strong>IP协议</strong>是其中一个非常重要的协议</li>\n<li>IP协议使得复杂的实际网络变为一个<strong>虚拟互联的网络</strong>（也就是我们只需要将终端设备连接到这个网络中去即可，并不需要关心里边实际的复杂网络）</li>\n<li>IP协议使得网络层可以<strong>屏蔽底层细节</strong>而专注网络层的<strong>数据转发</strong>（如果单从网络层去看，我们是不用关心<strong>数据包</strong>是通过海底电缆还是通过无线WiFi传输到目的计算机的）</li>\n<li>IP协议<strong>解决了在虚拟网络中数据报传输路径的问题</strong></li>\n</ul>\n<img src=\"./ip_nets.png\" alt=\"image-20220125231347009\" style=\"zoom:40%;\" />\n\n<p><strong>IP协议特点:</strong></p>\n<ul>\n<li>无状态, 是指IP通信双方不同步传输数据的状态信息，因此所有IP数据报的发送，传输，和接收都是相互独立的，没有山下文关系的。发送、传输和接收都是相互独立、没有上下文关系的。这种服务最大的缺点是无法处理乱序和重复的IP数据报。比如发送端发送出的第N个IP数据报可能比第N+1个IP数据报后到达接收端，而同一个IP数据报也可能经过不同的路径多次到达接收端。在这两种情况下，接收端的IP模块无法检测到乱序和重复，因为这些IP数据报之间没有任何上下文关系。接收端的IP模块只要收到了完整的IP数据报(如果是IP分片的话，IP 模块将先执行重组)，就将其数据部分(TCP报文段、UDP数据报或者ICMP报文)，上交给上层协议。那么从上层协议来看，这些数据就可能是乱序的、重复的。面向连接的协议，比如TCP协议，则能够自己处理乱序的、重复的报文段，它递交给上层协议的内容绝对是有序的、正确的。虽然IP数据报头部提供了一个标识字段(见后文)用以唯-标识-一个IP数据报，但它是被用来处理IP分片和重组的，而不是用来指示接收顺序的。无状态服务的优点也很明显:简单、高效。我们无须为保持通信的状态而分配一些内核资源，也无须每次传输数据时都携带状态信息。在网络协议中，无状态是很常见的，比如UDP协议和HTTP协议都是无状态协议。以HTTP协议为例，一个浏览器的连续两次网页请求之间没有任何关联，它们将被Web服务器独立地处理。</li>\n<li>无连接(connectionless), 是指IP通信双方都不长久地维持对方的任何信息。这样，上层协议每次发送数据的时候，都必须明确指定对方的IP地址。</li>\n<li>不可靠, 是指IP协议不能保证IP数据报准确地到达接收端，它只是承诺尽最大努力(best effort)。 很多种情况都能导致IP数据报发送失败。比如，某个中转路由器发现IP数据报在网络上存活的时间太长(根据IP数据报头部字段TTL判断，见后文)，那么它将丢弃之，并返回一个ICMP错误消息(超时错误)给发送端。又比如，接收端发现收到的IP数据报不正确(通过校验机制)，它也将丢弃之，并返回一个ICMP错误消息(IP 头部参数错误)给发送端。无论哪种情况，发送端的IP模块一旦检测到IP数据报发送失败，就通知上层协议发送失败，而不会试图重传。因此，使用IP服务的上层协议(比如TCP协议)需要自己实现数据确认、超时重传等机制以达到可靠传输的目的。</li>\n</ul>\n<p><strong>IP协议报文格式 :</strong></p>\n<img src=\"./ip_packet.png\" alt=\"image-20220125234059378\" style=\"zoom:40%;\" />\n\n<ul>\n<li><p><strong>版本</strong>：占4位，指的是IP协议的版本，通信双方的版本必须一致，即IPv4，也有IPv6</p>\n</li>\n<li><p><strong>首部长度</strong>：占4位，最大数值为15，表示的是IP首部的长度，单位是“32位字”（4个字节），也就是<strong>IP首部</strong>最大长度为60字节</p>\n</li>\n<li><p><strong>服务类型</strong>：服务登记, 比如VIP专线, 这个一般是不需要关心的</p>\n</li>\n<li><p><strong>总长度</strong>：占16位，最大数值为65535，表示的是<strong>IP数据报总长度</strong>（IP首部+IP数据） （在前边介绍数据链路层的时候，也提到过一个长度。对于数据链路层的长度，称之为<strong>MTU</strong>，一般为1500字节。而IP数据报的最大长度有65535个字节，比MTU要大。如果真正传输的时候，如果出现这种情况，数据链路层会对IP数据报进行<strong>分片</strong>，也就是将一个较长的IP数据报拆分成多个数据帧来进行传输）</p>\n</li>\n<li><p><strong>标识</strong>：占16位，计数器标示, 分片后的同组数据具备相同标示. 同一组的包根据标示重组.</p>\n</li>\n<li><p><strong>标记</strong>： 占3位，但目前只有2位有意义。<br> 标志字段中的最低位记为MF(More Fragment)。MF=1即表示后面“还有分片”的数据报,MF=0表示这已是若干数据报片中的最后一个<br> 标志字段中间的一位记为DF(Don’t Fragment)，意思是“不能分片”。只有当DF=0时才允许分片。</p>\n</li>\n<li><p><strong>片偏移</strong>：前边有提到，如果IP数据报的长度过长，会进行IP报文的分片，把一个IP报文拆分成多个数据帧进行数据链路层的传输(以<strong>8 Bytes</strong>的倍数分包)。因此，如果拆分的话，就需要使用<strong>片偏移</strong>来记录当前的数据帧，保存的<strong>第几个偏移的IP数据</strong></p>\n <img src=\"./ip_offset.png\" alt=\"image-20220129104929487\" style=\"zoom:45%;\" /></li>\n<li><p><strong>TTL</strong>：占8位，表明IP数据报文在网络中的<strong>寿命</strong>，每经过一个设备（不管是路由器还是计算机），TTL减一，当TTL=0时，网络设备必须<strong>丢弃</strong>该报文（它解决的就是，当网络报文找不到终点的时候，避免网络报文在网络中无限的传输，以消耗带宽）</p>\n</li>\n<li><p><strong>协议</strong>：占8位，表明IP数据所携带的具体数据是什么<strong>协议</strong>的（如TCP、UDP等，一些协议对应的值，可参考下图）</p>\n</li>\n<li><p><strong>校验和</strong>：占16位，校验IP首部是否有出错（接收方接收到IP首部之后也会进行校验，如果有错，则直接丢弃）</p>\n</li>\n<li><p><strong>源IP地址</strong>：<strong>发送</strong>IP数据报的网络设备的IP地址</p>\n</li>\n<li><p><strong>目的IP地址</strong>：IP数据报要<strong>到达</strong>的目的网络设备的IP地址</p>\n</li>\n</ul>\n<h4 id=\"ICMP协议\"><a href=\"#ICMP协议\" class=\"headerlink\" title=\"ICMP协议\"></a><strong>ICMP协议</strong></h4><img src=\"./icmp_kinds.png\" alt=\"image-20220126215905234\" style=\"zoom:50%;\" />\n\n<h4 id=\"路由选择协议\"><a href=\"#路由选择协议\" class=\"headerlink\" title=\"路由选择协议\"></a><strong>路由选择协议</strong></h4><p><strong>自治系统</strong>：autonomous system。在互联网中，一个自治系统(AS)是一个有权自主地决定在本系统中应采用各种<a href=\"https://baike.baidu.com/item/%E8%B7%AF%E7%94%B1%E5%8D%8F%E8%AE%AE/202634\">路由协议</a>的小型单位。这个网络单位可以是一个简单的网络也可以是一个由一个或多个普通的<a href=\"https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86%E5%91%98/595848\">网络管理员</a>来控制的网络群体，它是一个单独的可管理的<a href=\"https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E5%8D%95%E5%85%83/9928606\">网络单元</a>（例如一所大学，一个企业或者一个公司个体）。</p>\n<img src=\"./ip_routing_protocol.png\" alt=\"image-20220126220513526\" style=\"zoom:50%;\" />\n\n<p>内部网关协议:</p>\n<ul>\n<li>RIP, Routing Information Protocol: 优点, 算法简单; 缺点, 路由故障链路改变远端感知慢, 距离有限 max16, 大规模网络路由表可能过大.</li>\n</ul>\n<img src=\"./rip.png\" alt=\"image-20220126220918042\" style=\"zoom:50%;\" />\n\n<ul>\n<li><p>OSPF, Open Shortest Path First 开放的最短路径优先算法: </p>\n<p>与RIP三个区别:（1）向本<a href=\"https://baike.baidu.com/item/%E8%87%AA%E6%B2%BB%E7%B3%BB%E7%BB%9F\">自治系统</a>中所有路由器发送信息。（2）发送的信息就是与本<a href=\"https://baike.baidu.com/item/%E8%B7%AF%E7%94%B1%E5%99%A8\">路由器</a>相邻的所有路由器的链路状态，但这只是路由器所知道的部分信息。（3）只有在链路状态发生变化时，<a href=\"https://baike.baidu.com/item/%E8%B7%AF%E7%94%B1%E5%99%A8\">路由器</a>才向所有路由器用<a href=\"https://baike.baidu.com/item/%E6%B4%AA%E6%B3%9B\">洪泛</a>法发送此信息。</p>\n</li>\n</ul>\n<p>外部(边界)网关协议:</p>\n<p>BGP用于在不同的自治系统（AS）之间交换路由信息。当两个AS需要交换路由信息时，每个AS都必须指定一个运行BGP的节点，来代表AS与其他的AS交换路由信息。两个AS中利用BGP交换信息的路由器也被称为边界网关（Border Gateway）或边界路由器（Border Router）. </p>\n<img src=\"./BGP_speaker.png\" alt=\"image-20220126223533819\" style=\"zoom:50%;\" />\n\n<img src=\"./BGP_example.png\" alt=\"image-20220126223429235\" style=\"zoom:40%;\" />\n\n\n\n<h3 id=\"传输层\"><a href=\"#传输层\" class=\"headerlink\" title=\"传输层\"></a>传输层</h3><p>端口作用, 实现进程到进程的通信, 复用ip线路, 提供标准的的端口-&gt;进程的映射方式.</p>\n<img src=\"./transport_process.png\" alt=\"image-20220126230009234\" style=\"zoom:50%;\" />\n\n<h4 id=\"UDP\"><a href=\"#UDP\" class=\"headerlink\" title=\"UDP\"></a>UDP</h4><p>UDP, User Datagram Protocol用户数据报协议, 只在IP基础上多了复用分用和差错校验的功能.</p>\n<h5 id=\"特点\"><a href=\"#特点\" class=\"headerlink\" title=\"特点\"></a>特点</h5><ul>\n<li>无连接</li>\n<li>尽努力交付</li>\n<li>面向报文的</li>\n<li>无拥塞控制</li>\n<li>支持一对一、一对多、多对一、多对多</li>\n<li>首部开销小</li>\n</ul>\n<h5 id=\"协议格式\"><a href=\"#协议格式\" class=\"headerlink\" title=\"协议格式\"></a>协议格式</h5><img src=\"./udp_protocol.png\" alt=\"image-20220126233302042\" style=\"zoom:45%;\" />\n\n<h4 id=\"TCP\"><a href=\"#TCP\" class=\"headerlink\" title=\"TCP\"></a>TCP</h4><h5 id=\"特点-1\"><a href=\"#特点-1\" class=\"headerlink\" title=\"特点\"></a>特点</h5><ul>\n<li><p>面向连接</p>\n</li>\n<li><p>每条点对点(socket1, socket2)</p>\n</li>\n<li><p>可靠的</p>\n</li>\n<li><p>全双工</p>\n</li>\n<li><p>面向字节流的</p>\n</li>\n<li><p>为应用程序间提供逻辑通信链路</p>\n<img src=\"./tcp_bytes_stream.png\" alt=\"image-20220129001752910\" style=\"zoom:50%;\" /></li>\n</ul>\n<h5 id=\"协议格式-1\"><a href=\"#协议格式-1\" class=\"headerlink\" title=\"协议格式\"></a>协议格式</h5><img src=\"./tcp_protocol.png\" alt=\"image-20220127225910379\" style=\"zoom:50%;\" />\n\n<p><strong>16位源端口号</strong>：指发送端的端口号<br><strong>16位目的端口号</strong>：指目的端的端口号<br><strong>4位头部长度</strong>：同IP头部，表示TCP头部的大小，以4字节为单位。<br><strong>32位序列号</strong>：TCP通信过程中，通过序列号来保证传输过程中数据的有序性<br><strong>32位确认号</strong>：用以对接受到的报文进行确认<br><strong>保留6位</strong><br><strong>URG</strong>：表示紧急指针<br><strong>ACK</strong>：表示确认号<br><strong>PSH</strong>：通知对端立即从缓冲区取走数据<br><strong>RST</strong>: 通知当前连接出现问题, 要释放资源, 有需要则重新建立连接. 也可用于拒绝非法连接.<br><strong>SYN</strong>：表示请求建立连接<br><strong>FIN</strong>：标志要通知对端本端的数据发送要关闭<br><strong>16位窗口大小</strong>：TCP流量控制的手段，告诉发送方本端的接收端缓冲区还能接受多少数据, 单位字节.<br><strong>16位校验和</strong>：由发送方填充，接收端用以检查TCP报文在传输过程中是否有损坏</p>\n<h5 id=\"可靠性\"><a href=\"#可靠性\" class=\"headerlink\" title=\"可靠性\"></a>可靠性</h5><h6 id=\"滑动窗口\"><a href=\"#滑动窗口\" class=\"headerlink\" title=\"滑动窗口\"></a>滑动窗口</h6><p>A根据B TCP ack报文中的窗口大小发送滑动窗口大小以内的若干数据给B, 给回复按序抵达的最大包序号, 即31. B不应过度拖延回复ack的时间.</p>\n<img src=\"./tcp_window.png\" alt=\"image-20220128000255497\" style=\"zoom:50%;\" />\n\n<img src=\"./tcp_buffer.png\" alt=\"image-20220128000641845\" style=\"zoom:50%;\" />\n\n<p>需注意, tcp是全双工通信, 每端都有自己的发送和接受窗口及缓冲. </p>\n<h6 id=\"超时重传时间-Retransmision-Time-out\"><a href=\"#超时重传时间-Retransmision-Time-out\" class=\"headerlink\" title=\"超时重传时间 Retransmision Time out\"></a>超时重传时间 Retransmision Time out</h6><img src=\"./tcp_rto.png\" alt=\"image-20220128001439268\" style=\"zoom:40%;\" />\n\n<h6 id=\"选择确认ACK-Selective-ACK\"><a href=\"#选择确认ACK-Selective-ACK\" class=\"headerlink\" title=\"选择确认ACK Selective ACK\"></a>选择确认ACK Selective ACK</h6><p>SACK用于接收端向发送端报告部分未按序已收到的字节块, 从而避免重复传输. 需要tcp连接时 option增加SACK头, 双方确认支持SACK. 但是描述哪些数据已接受其实是比较复杂的, 尽管RFC2018有详细说明, 但使用还是较少, 大部分还是发送端重发所有未ack字节.</p>\n<img src=\"./tcp_sack.png\" alt=\"image-20220128002718253\" style=\"zoom:50%;\" />\n\n\n\n<h5 id=\"TCP流量控制\"><a href=\"#TCP流量控制\" class=\"headerlink\" title=\"TCP流量控制\"></a>TCP流量控制</h5><h6 id=\"可利用滑动窗口控制发送方流量\"><a href=\"#可利用滑动窗口控制发送方流量\" class=\"headerlink\" title=\"可利用滑动窗口控制发送方流量\"></a>可利用滑动窗口控制发送方流量</h6><h6 id=\"TCP传输效率\"><a href=\"#TCP传输效率\" class=\"headerlink\" title=\"TCP传输效率\"></a>TCP传输效率</h6><p>应用程序把发送数据给到TCP缓存就不管了, 由TCP负责控制发送时机将数据正确的发送出去. 这是一个比较复杂的问题.</p>\n<ul>\n<li><p><strong>Nagle算法</strong></p>\n<p>TCP/IP协议中，无论发送多少数据，总是要在数据前面加上协议头，同时，对方接收到数据，也需要发送ACK表示确认。为了尽可能的利用网络带宽，TCP总是希望尽可能的发送足够大的数据。（一个连接会设置MSS参数，因此，TCP/IP希望每次都能够以MSS尺寸的数据块来发送数据）。Nagle算法就是为了尽可能发送大块数据，避免网络中充斥着许多小数据块。</p>\n<p>Nagle算法的基本定义是<strong>任意时刻，最多只能有一个未被确认的小段</strong>。 所谓“小段”，指的是小于MSS尺寸的数据块，所谓“未被确认”，是指一个数据块发送出去后，没有收到对方发送的ACK确认该数据已收到。</p>\n<p>Nagle算法的规则（可参考tcp_output.c文件里tcp_nagle_check函数注释）：</p>\n<p>（1）如果包长度达到MSS，则允许发送；</p>\n<p>（2）如果该包含有FIN，则允许发送；</p>\n<p>（3）设置了TCP_NODELAY选项，则允许发送；</p>\n<p>（4）未设置TCP_CORK选项时，若所有发出去的小数据包（包长度小于MSS）均被确认，则允许发送；</p>\n<p>（5）上述条件都未满足，但发生了超时（一般为200ms），则立即发送。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> there is new data to send <span class=\"comment\">#有数据要发送</span></span><br><span class=\"line\">    <span class=\"comment\"># 发送窗口缓冲区和队列数据 &gt;=mss，队列数据（available data）为原有的队列数据加上新到来的数据</span></span><br><span class=\"line\">    <span class=\"comment\"># 也就是说缓冲区数据超过mss大小，nagle算法尽可能发送足够大的数据包</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> the window size &gt;= MSS and available data is &gt;= MSS </span><br><span class=\"line\">        send complete MSS segment now <span class=\"comment\"># 立即发送</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> there is unconfirmed data still <span class=\"keyword\">in</span> the pipe <span class=\"comment\"># 前一次发送的包没有收到ack</span></span><br><span class=\"line\">            <span class=\"comment\"># 将该包数据放入队列中，直到收到一个ack再发送缓冲区数据</span></span><br><span class=\"line\">            enqueue data <span class=\"keyword\">in</span> the buffer until an acknowledge is received </span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            send data immediately <span class=\"comment\"># 立即发送</span></span><br><span class=\"line\">        end <span class=\"keyword\">if</span></span><br><span class=\"line\">    end <span class=\"keyword\">if</span></span><br><span class=\"line\">end <span class=\"keyword\">if</span>　</span><br></pre></td></tr></table></figure>\n\n<p>Nagle算法只允许一个未被ACK的包存在于网络，它并不管包的大小，因此它事实上就是一个扩展的停-等协议，只不过它是基于包停-等的，而不是基于字节停-等的。</p>\n</li>\n<li><p><strong>TCP确认延迟机制</strong></p>\n<p>当Server端收到数据之后，它并不会马上向client端发送ACK，而是会将ACK的发送延迟一段时间（假设为t），它希望在t时间内server端会向client端发送应答数据，这样ACK就能够和应答数据一起发送，就像是应答数据<strong>捎带着ACK</strong>过去。初始化是40ms。</p>\n</li>\n<li><p><strong>TCP_NODELAY 选项</strong></p>\n<p>默认情况下，发送数据采用Nagle 算法。这样虽然提高了<a href=\"https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E5%90%9E%E5%90%90%E9%87%8F/646450\">网络吞吐量</a>，但是实时性却降低了，在一些交互性很强的应用程序来说是不允许的，使用TCP_NODELAY选项可以禁止Nagle 算法。</p>\n<p>此时，应用程序向内核递交的每个数据包都会立即发送出去。需要注意的是，虽然禁止了Nagle 算法，但网络的传输仍然受到TCP确认延迟机制的影响。</p>\n</li>\n<li><p><strong>TCP_CORK 选项</strong></p>\n<p>所谓的CORK就是塞子的意思，形象地理解就是用CORK将连接塞住，使得数据先不发出去，等到拔去塞子后再发出去。设置该选项后，内核会尽力把小数据包拼接成一个大的数据包（一个MTU）再发送出去，当然若一定时间后（一般为200ms，该值尚待确认），内核仍然没有组合成一个MTU时也必须发送现有的数据（不可能让数据一直等待吧）。</p>\n</li>\n</ul>\n<h5 id=\"TCP拥塞控制\"><a href=\"#TCP拥塞控制\" class=\"headerlink\" title=\"TCP拥塞控制\"></a>TCP拥塞控制</h5><ul>\n<li><p>拥塞控制：防止过多的数据注入到网络中，这样可以使网络中的路由器或链路不致过载。拥塞控制所要做的都有一个前提：网络能够承受现有的网络负荷。拥塞控制是一个全局性的过程，涉及到所有的主机、路由器，以及与降低网络传输性能有关的所有因素。</p>\n</li>\n<li><p>流量控制：指点对点通信量的控制，是端到端的问题。流量控制所要做的就是抑制发送端发送的速率，以便使接收端来得及接收。</p>\n</li>\n</ul>\n<p>解决拥塞问题一般是以下步骤: 1) 监测网络, 探测拥塞的位置与时间;  2) 将拥塞信息发送到能采取控制的地方; 3) 调整网络参数.</p>\n<p>常用方法: 慢开始( slow-start )、拥塞避免( congestion avoidance )、快重传( fast retransmit )和快恢复( fast recovery )。</p>\n<h6 id=\"慢开始\"><a href=\"#慢开始\" class=\"headerlink\" title=\"慢开始\"></a>慢开始</h6><p>发送方维持一个拥塞窗口 cwnd ( congestion window )的状态变量。拥塞窗口的大小取决于网络的拥塞程度，并且动态地在变化。发送方让自己的发送窗口等于拥塞窗口。发送方控制拥塞窗口的原则是：只要网络没有出现拥塞，拥塞窗口就再增大一些，以便把更多的分组发送出去。但只要网络出现拥塞，拥塞窗口就减小一些，以减少注入到网络中的分组数。</p>\n<p>慢开始算法：当主机开始发送数据时，如果立即所大量数据字节注入到网络，那么就有可能引起网络拥塞，因为现在并不清楚网络的负荷情况。因此，较好的方法是先探测一下，即由小到大逐渐增大发送窗口，也就是说，由小到大逐渐增大拥塞窗口数值。通常在刚刚开始发送报文段时，先把拥塞窗口 cwnd 设置为一个最大报文段MSS的数值。而在每收到一个对新的报文段的确认后，把拥塞窗口增加至多一个MSS的数值。用这样的方法逐步增大发送方的拥塞窗口 cwnd ，可以使分组注入到网络的速率更加合理。 cwnd = 1, 2, 4, 8 …</p>\n<p>为了防止拥塞窗口cwnd增长过大引起网络拥塞，还需要设置一个慢开始门限ssthresh状态变量。慢开始门限ssthresh的用法如下：</p>\n<p>　　当 cwnd &lt; ssthresh 时，使用上述的慢开始算法<br>　　当 cwnd &gt; ssthresh 时，停止使用慢开始算法而改用拥塞避免算法<br>　　当 cwnd = ssthresh 时，既可使用慢开始算法，也可使用拥塞控制避免算法</p>\n<h6 id=\"拥塞避免\"><a href=\"#拥塞避免\" class=\"headerlink\" title=\"拥塞避免\"></a>拥塞避免</h6><p>让拥塞窗口cwnd缓慢地增大，即每经过一个往返时间RTT就把发送方的拥塞窗口cwnd加1，而不是加倍。这样拥塞窗口cwnd按线性规律缓慢增长，比慢开始算法的拥塞窗口增长速率缓慢得多。</p>\n<p>无论在慢开始阶段还是在拥塞避免阶段，只要发送方判断网络出现拥塞（其根据就是没有收到确认），就要把慢开始门限ssthresh设置为出现拥塞时的发送方窗口值的一半（但不能小于2）。然后把拥塞窗口cwnd重新设置为1，执行慢开始算法。这样做的目的就是要迅速减少主机发送到网络中的分组数，使得发生拥塞的路由器有足够时间把队列中积压的分组处理完毕。</p>\n<img src=\"./tcp_slow_start.png\" alt=\"image-20220128190952845\" style=\"zoom:40%;\" />\n\n<h6 id=\"快重传和快恢复\"><a href=\"#快重传和快恢复\" class=\"headerlink\" title=\"快重传和快恢复\"></a>快重传和快恢复</h6><p>快重传算法首先要求接收方每收到一个报文段后(即便是后序)就立即发出重复确认（为的是使发送方及早知道有报文段没有到达对方），而不要等到自己发送数据时才进行捎带确认。当发送方连续收到三个重复确认，就执行“乘法减小”算法，把慢开始门限ssthresh减半。在采用快恢复算法时，慢开始算法只是在TCP连接建立时和网络出现超时时才使用。采用这样的拥塞控制方法使得TCP的性能有明显的改进。</p>\n<img src=\"./tcp_congest.png\" alt=\"image-20220128190034654\" style=\"zoom:50%;\" />\n\n<h5 id=\"TCP连接管理\"><a href=\"#TCP连接管理\" class=\"headerlink\" title=\"TCP连接管理\"></a>TCP连接管理</h5><h6 id=\"三次握手\"><a href=\"#三次握手\" class=\"headerlink\" title=\"三次握手\"></a>三次握手</h6><p>三次握手是为了建立连接, 双方确认对方的存在,并协商一些参数,如窗口大小 , 初始化一下缓冲队列资源等. 为了确认双方存在, 头两次sync, sync+ack是 省不了的, 那第三次ack是为了做什么呢? 是为了避免已失效的sync请求又抵达B, 又消耗B的资源. 有了第三次ack, 当无效的syn被server sync+ack后, client不会回复ack, 超时后server也就会再销毁掉对应资源.</p>\n<img src=\"./tcp_handshake.png\" alt=\"image-20220129000032602\" style=\"zoom:50%;\" />\n\n<h6 id=\"四次挥手\"><a href=\"#四次挥手\" class=\"headerlink\" title=\"四次挥手\"></a>四次挥手</h6><img src=\"./tcp_bye_handshake.png\" alt=\"image-20220129002627713\" style=\"zoom:50%;\" />\n\n<p><strong>MSL</strong>: Max Segment lifetime, 报文端最大寿命. </p>\n<p>为什么A收到 FIN 后要等两个MSL呢? </p>\n<ol>\n<li>确保能回复FIN的ack, 如果B没收到ack, 会重新发送FIN+ACK. 这时如果A已经断了, B就只能自己特殊处理到CLOSED状态.</li>\n<li>尽量让本次连接 网络中的网络包都传输完, 不会在新连接中收到旧连接报文.</li>\n</ol>\n<h5 id=\"TCP有限状态机\"><a href=\"#TCP有限状态机\" class=\"headerlink\" title=\"TCP有限状态机\"></a>TCP有限状态机</h5><img src=\"./tcp_state.png\" alt=\"image-20220129152318656\" style=\"zoom:50%;\" />\n\n\n\n<h4 id=\"应用层\"><a href=\"#应用层\" class=\"headerlink\" title=\"应用层\"></a>应用层</h4><h2 id=\"应用层常用协议\"><a href=\"#应用层常用协议\" class=\"headerlink\" title=\"应用层常用协议\"></a>应用层常用协议</h2><h3 id=\"DNS\"><a href=\"#DNS\" class=\"headerlink\" title=\"DNS\"></a>DNS</h3><p>基于UDP, <strong>53</strong>端口:  query请求(src port: 12868 , dst port: 53 ) + response响应(src port: 53, dst port: 12868 )</p>\n<p>迭代查询 or 递归查询 + 缓存. </p>\n<p><strong>解析顺序</strong>: 浏览器缓存, 系统缓存, 路由器DNS缓存 , ISP DNS 缓存, 根域名服务器, 顶级域名服务器, 主域名服务器, 保存结果至缓存.</p>\n<img src=\"./dns.png\" alt=\"image-20220129165409193\" style=\"zoom:40%;\" />\n\n<h3 id=\"HTTP\"><a href=\"#HTTP\" class=\"headerlink\" title=\"HTTP\"></a>HTTP</h3><p>HTTP协议发展历程:</p>\n<p>![image-20220127112311050](/Users/talentxiet/Library/Application Support/typora-user-images/image-20220127112311050.png)</p>\n<p>协议格式:</p>\n<img src=\"./http_protocol.png\" alt=\"image-20220130002354946\" style=\"zoom:50%;\" />\n\n<h3 id=\"SMTP\"><a href=\"#SMTP\" class=\"headerlink\" title=\"SMTP\"></a>SMTP</h3><img src=\"./smtp.png\" alt=\"image-20220130002634963\" style=\"zoom:45%;\" />\n\n<h3 id=\"DHCP\"><a href=\"#DHCP\" class=\"headerlink\" title=\"DHCP\"></a>DHCP</h3><img src=\"./dhcp.png\" alt=\"image-20220130221121647\" style=\"zoom:50%;\" />\n\n<h2 id=\"应用程序间通信过程\"><a href=\"#应用程序间通信过程\" class=\"headerlink\" title=\"应用程序间通信过程\"></a>应用程序间通信过程</h2><h3 id=\"系统调用-amp-socket套接字\"><a href=\"#系统调用-amp-socket套接字\" class=\"headerlink\" title=\"系统调用&amp;socket套接字\"></a>系统调用&amp;socket套接字</h3><img src=\"./syscall.png\" alt=\"image-20220130221429374\" style=\"zoom:50%;\" />\n\n<img src=\"./socket2.png\" alt=\"image-20220130224749539\" style=\"zoom:50%;\" />\n\n\n\n<h2 id=\"网络安全\"><a href=\"#网络安全\" class=\"headerlink\" title=\"网络安全\"></a>网络安全</h2><p>四个目标:</p>\n<ul>\n<li>保密性</li>\n<li>端点鉴别</li>\n<li>信息完整性</li>\n<li>运行安全性 访问控制</li>\n</ul>\n<img src=\"./net_sec_key.png\" alt=\"image-20220205185347484\" style=\"zoom:50%;\" />\n\n<h3 id=\"DES-AES\"><a href=\"#DES-AES\" class=\"headerlink\" title=\"DES AES\"></a>DES AES</h3><p>data encryption standard,  advanced encrytion standard, 对称加密、</p>\n<h3 id=\"公钥密码体制\"><a href=\"#公钥密码体制\" class=\"headerlink\" title=\"公钥密码体制\"></a>公钥密码体制</h3><p>任何加解密算法的安全性都取决于密钥长度,以及攻破密文的计算量</p>\n<h3 id=\"数字签名\"><a href=\"#数字签名\" class=\"headerlink\" title=\"数字签名\"></a>数字签名</h3><p>目标:</p>\n<ul>\n<li>接收者能核实发送者对报文的数字签名, 即是发送者发的</li>\n<li>收到的数据是完整的</li>\n<li>发送者事后不可抵赖数字签名</li>\n</ul>\n<img src=\"./signature.png\" alt=\"image-20220205191312308\" style=\"zoom:50%;\" />\n\n<h3 id=\"报文鉴别\"><a href=\"#报文鉴别\" class=\"headerlink\" title=\"报文鉴别\"></a>报文鉴别</h3><p>加解密算法可以实现报文鉴别,但是消耗cpu, 所以常用密码散列算法保护数据完整性. MD5 (message digest 第五代)和 SHA-1,2,3(secure hash algorithm).</p>\n<img src=\"./sec_mac.png\" alt=\"image-20220205193055077\" style=\"zoom:50%;\" />\n\n<p>MAC: message authentication code,</p>\n<h3 id=\"密钥分配\"><a href=\"#密钥分配\" class=\"headerlink\" title=\"密钥分配\"></a>密钥分配</h3><h4 id=\"对称密钥分配\"><a href=\"#对称密钥分配\" class=\"headerlink\" title=\"对称密钥分配\"></a>对称密钥分配</h4><p>对称密钥是一对一的, 任意双方通信都要有唯一的key, 通常由KDC动态随机分配</p>\n<img src=\"./对称密钥分配.png\" alt=\"image-20220205195510847\" style=\"zoom:50%;\" />\n\n<h4 id=\"公钥分配\"><a href=\"#公钥分配\" class=\"headerlink\" title=\"公钥分配\"></a>公钥分配</h4><p>由受信任的机构维护公钥和实体的关系, 通常是政府机构, 称之为CA (certification authority), 每个实体会被颁布 证书(certificate), 证书中包含拥有者标示, 公钥, 且此证书被CA进行了数字签名. 公众可以从机构公开信息中获取到机构的公钥, 对签名和 证书信息进行验证.</p>\n<p>为了使CA拥有统一格式, IETF接受了ITU制定的X.509规范.</p>\n<h3 id=\"互联网中的安全协议\"><a href=\"#互联网中的安全协议\" class=\"headerlink\" title=\"互联网中的安全协议\"></a>互联网中的安全协议</h3><h4 id=\"网络层-1\"><a href=\"#网络层-1\" class=\"headerlink\" title=\"网络层\"></a>网络层</h4><h5 id=\"IPsec\"><a href=\"#IPsec\" class=\"headerlink\" title=\"IPsec\"></a>IPsec</h5><img src=\"./ipsec.png\" alt=\"image-20220206000051358\" style=\"zoom:50%;\" />\n\n<h4 id=\"传输层-1\"><a href=\"#传输层-1\" class=\"headerlink\" title=\"传输层\"></a>传输层</h4><h5 id=\"SSL\"><a href=\"#SSL\" class=\"headerlink\" title=\"SSL\"></a>SSL</h5><p>Secure Socket Layer, Netscape开发, 95年交给IETF</p>\n<img src=\"./ssl.png\" alt=\"image-20220206001829432\" style=\"zoom:50%;\" />\n\n<img src=\"./ssl_procedure.png\" alt=\"image-20220206002408083\" style=\"zoom:50%;\" />\n\n<h5 id=\"TLS\"><a href=\"#TLS\" class=\"headerlink\" title=\"TLS\"></a>TLS</h5><p>Transport Layer Security, 基于SSL3.0设计. </p>\n<h3 id=\"防火墙\"><a href=\"#防火墙\" class=\"headerlink\" title=\"防火墙\"></a>防火墙</h3><p>是一种访问控制技术, 通常是特殊编程的路由器, 进行访问策略控制. </p>\n<ul>\n<li>分组过滤路由器: 根据 源/目的 IP/端口 协议类型进行分组过滤控制.</li>\n<li>应用网关: 应用层网关, 根据应用层报文鉴权转发</li>\n</ul>\n<h2 id=\"实时音视频相关协议\"><a href=\"#实时音视频相关协议\" class=\"headerlink\" title=\"实时音视频相关协议\"></a>实时音视频相关协议</h2><img src=\"./av_protocols.png\" alt=\"image-20220206165809797\" style=\"zoom:50%;\" />\n\n<h3 id=\"RTP\"><a href=\"#RTP\" class=\"headerlink\" title=\"RTP\"></a>RTP</h3><img src=\"./rtp_protocol.png\" alt=\"image-20220206165710831\" style=\"zoom:50%;\" />\n\n<h3 id=\"RTCP\"><a href=\"#RTCP\" class=\"headerlink\" title=\"RTCP\"></a>RTCP</h3><img src=\"./rtcp.png\" alt=\"image-20220206172316751\" style=\"zoom:50%;\" />\n\n<h2 id=\"常见网络设备\"><a href=\"#常见网络设备\" class=\"headerlink\" title=\"常见网络设备\"></a>常见网络设备</h2><h3 id=\"Repeater中继器\"><a href=\"#Repeater中继器\" class=\"headerlink\" title=\"Repeater中继器\"></a>Repeater中继器</h3><p>中继器是一个将输入信号增强放大的设备, 把信号送得更远，以延展网络长度. 与具体信号形式无关,比如卫星雷达, 以太网集线器; 属于物理层</p>\n<h3 id=\"Hub集线器\"><a href=\"#Hub集线器\" class=\"headerlink\" title=\"Hub集线器\"></a>Hub集线器</h3><p>集线器（Ethernet hub）是指将多条以太网双绞线或光纤集合连接在同一段物理介质下的设备。集线器运作在OSI模型中的物理层，可以让其链接的设备工作在同一网段。集线器上有多个I/O端口，信号从任意一个端口进入后，会从其他端口出现. </p>\n<p>由于集线器会把收到的任何数字信号，从集线器的所有端口提交，这会造成信号之间碰撞的机会很大，而且信号也可能被窃听，并且这代表所有连到集线器的设备，都是属于同一个冲突网域以及广播网域(hub间组网所有hub都属于同一广播域), 冲突和泛洪严重，因此大部分Hub已被Switch代替.</p>\n<img src=\"./hub_pic.png\" alt=\"image-20220121154139634\" style=\"zoom:35%;\" />\n\n<h3 id=\"Bridge网桥\"><a href=\"#Bridge网桥\" class=\"headerlink\" title=\"Bridge网桥\"></a>Bridge网桥</h3><p>网桥工作在第二层数据链路层, 可以解析出链路层数据包, 并在Bridge内维护每个端口和连接着的设备MAC地址映射关系, 从而可以动态判断是否要转发收到的物理帧, 从而在一定程度上解决hub间的泛洪问题.</p>\n<img src=\"/Users/talentxiet/Desktop/我的学习文档/网络基础/bridge_pic.png\" alt=\"image-20220121155228284\" style=\"zoom:50%;\" />\n\n<h3 id=\"Switch交换机\"><a href=\"#Switch交换机\" class=\"headerlink\" title=\"Switch交换机\"></a>Switch交换机</h3><p>二层交换机: 二层交换机工作在数据链路层, 相比Hub, 它可以解析物理帧中的链路层frame信息,并基于frame中的mac地址与交换机端口进行缓存映射, 从而高效的解决Hub的冲突, 泛洪等问题. 此外交换机通常还支持划分VLAN的功能, VLAN可以创建相互隔离的子LAN, 从而缩小广播域大小. </p>\n<img src=\"./switch_pic.png\" alt=\"image-20220121160921808\" style=\"zoom:55%;\" />\n\n<p>交换机组网示例:</p>\n<img src=\"./switch_net.png\" alt=\"image-20220122201304858\" style=\"zoom:50%;\" />\n\n<p>三层交换机: 三层交换机在交换机的基础之上加了网络层协议的解析能力, 以及一些简单的三层路由功能. 不过它的主要功能还是交换机的，同时它的价格比路由器价格偏低，实用性更高。</p>\n<p>一个真实的交换机图片如下所示:</p>\n<img src=\"./real_switch.png\" alt=\"image-20220122202630798\" style=\"zoom:38%;\" />\n\n<h3 id=\"Router路由器-网关\"><a href=\"#Router路由器-网关\" class=\"headerlink\" title=\"Router路由器 (网关)\"></a>Router路由器 (网关)</h3><p>讲到路由器,我们要先讲一下IP子网和网关(Gateway), IP地址+掩码标示了IP网段, 不同网段间的网络相互隔离. 而网关, 顾名思义, 就是不同网络间连接的关口, 在网络层上实现网络连通. 网关概念也可延伸到应用服务网关, 这里我们讨论的均指TCP/IP协议下网关.</p>\n<p>在TCP/IP协议的系统内核层, 会在网络层向链路层封包时, 检测目标IP与源IP是否在同一子网, 如果在同一子网, 封包时的对端MAC地址通过ARP协议获取; 而当不在同一子网时, 会使用网关的MAC作为目标MAC地址. 可以用下图思考一下, 不同子网间通信时的隔离性到底是如何实现的? </p>\n<img src=\"./ip_group_question.png\" alt=\"image-20220122220139210\" style=\"zoom:40%;\" />\n\n<p>不同的IP网段可以设置不同的网关地址, 从而细粒度的控制流量出口. 一个默认macos下的路由表配置如下, 该机器ip为192.168.0.108, default网关为192.168.0.1, 访问127.0.0.1时会loopback到自己网卡, 访问192.168.0/24网段时会在en0网卡所处的进行链路层进行二层数据通信. </p>\n<img src=\"./routing_table.png\" alt=\"image-20220122215006525\" style=\"zoom:50%;\" />\n\n<p>路由器实现了网关的功能, 它工作的三层网络层, 可以实现三层协议的解包路由等功能. 当然路由器还有很多其他功能, 比如NAT等. </p>\n<p>路由器上会有很多网口, 可以按用处分为WAN口和LAN口, WAN口指的是接入其他Wide Area Network广域网的网口, LAN口指的是接入路由器内部Local Area Network局域网的网口. 往往内部LAN还支持Wifi的接入, 成为Wireless LAN (WLAN).  每个WAN口均可以提供三层能力, 即可配置独立的MAC及IP地址(独立网卡); LAN口则往往只具备二层传输能力, 提供交换机的功能. 具备三层能力的LAN口可以通过路由器配置作为WAN口服务.</p>\n<img src=\"/Users/talentxiet/Desktop/我的学习文档/网络基础/router_wan_lan.png\" alt=\"router_wan_lan\" style=\"zoom:40%;\" />\n\n<p>当路由器要串联多组子网时, 若想要子网间按期望进行通信的话, 就需要正确配置Router的路由表了. 路由表比较核心的三个配置属性是Destination, Gateway 和 Interface. </p>\n<p>Destination可以是网段, Host或者default (均不匹配时), 路由器网卡收到frame并解出目标IP后, 会逐一进行匹配, 匹配到对应记录后, 会按路由表配置, 将frame的目标MAC地址转换为所配网关的MAC地址, 并通过指定配置的Interface发送出去. 当没配置网关时, 会在Interface广播域对目标IP进行广播寻址.</p>\n<img src=\"/Users/talentxiet/Desktop/我的学习文档/网络基础/router_trans.png\" alt=\"router_transfer\" style=\"zoom:36%;\" />\n\n<img src=\"./router_trans2.png\" alt=\"image-20220124222512944\" style=\"zoom:50%;\" />\n\n<p>一个真实企业级路由器的图片如下: </p>\n<img src=\"/Users/talentxiet/Desktop/我的学习文档/网络基础/real_router.png\" alt=\"image-20220122203856676\" style=\"zoom:45%;\" />\n\n<h3 id=\"F5\"><a href=\"#F5\" class=\"headerlink\" title=\"F5\"></a>F5</h3><p>F5是一家美国公司, 卖的F5设备可提供4-7层的解包和路由能力, 相比工作于网络层的Router其功能就更丰富了. 包括负载均衡，应用状态监控，高可用性保障，广域流量管理，链路控制；内容转换，高速缓存，SSL加速和卸载等能力等等.</p>\n<img src=\"./real_f5.png\" alt=\"image-20220122205509626\" style=\"zoom:60%;\" />\n\n<h2 id=\"真实组网案例\"><a href=\"#真实组网案例\" class=\"headerlink\" title=\"真实组网案例\"></a>真实组网案例</h2><h3 id=\"公共网络\"><a href=\"#公共网络\" class=\"headerlink\" title=\"公共网络\"></a>公共网络</h3><h3 id=\"家庭网络\"><a href=\"#家庭网络\" class=\"headerlink\" title=\"家庭网络\"></a>家庭网络</h3><h2 id=\"Glossary\"><a href=\"#Glossary\" class=\"headerlink\" title=\"Glossary:\"></a>Glossary:</h2><h3 id=\"Ethernet-以太网\"><a href=\"#Ethernet-以太网\" class=\"headerlink\" title=\"Ethernet 以太网\"></a>Ethernet 以太网</h3><p>以太网(Ethernet)是一种计算机局域网技术, 提出于1980s。IEEE组织的IEEE 802.3标准制定了以太网的技术标准, 后续延伸出了802.3~11标准，它规定了包括物理层的连线、电子信号和介质访问层协议的内容。以太网是当前应用最普遍的局域网技术，取代了其他局域网标准如令牌环、FDDI 和 ARCNET。</p>\n<h3 id=\"广播域-broadcast-domain\"><a href=\"#广播域-broadcast-domain\" class=\"headerlink\" title=\"广播域 broadcast domain\"></a>广播域 broadcast domain</h3><p>广播域（Broadcast domain）是计算机网络的一个逻辑划分。广播域中的任意一个节点可以在数据链路层通过广播的方式到达任意一个节点。广播域可以处于同一个局域网内,也可以被桥接到其他的局域网。</p>\n<p>根据目前的流行技术，任意连接到同一 repeater 或者 switch 的电脑属于同一个广播域，并且任意连接到同一个inter-connected的 repeater 或 switch 的集合的电脑也是属于同一个广播域的。而 Router 和其他high-level devices会在广播域间形成隔离。</p>\n<h3 id=\"冲突域-collision-domain\"><a href=\"#冲突域-collision-domain\" class=\"headerlink\" title=\"冲突域 collision domain\"></a>冲突域 collision domain</h3><p>与广播域相对的是冲突域。冲突域中所有节点都链接到同一个被集线器、交换机和学习型网桥划分的相互连接的中继器集合。冲突域一般来说小于或者包含在广播域中。 冲突域下的碰撞问题通过CSMA/CD (Carrier-sense multiple access)解决.</p>\n<h2 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h2><h3 id=\"traceroute实现\"><a href=\"#traceroute实现\" class=\"headerlink\" title=\"traceroute实现\"></a>traceroute实现</h3><p>向目标ip发送ICMP echo包或随机30000+大端口发送udp包,  通过TTL和ICMP结果返回报文判断路由点地址和通信时间.</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"分层模型-OSI-model\"><a href=\"#分层模型-OSI-model\" class=\"headerlink\" title=\"分层模型 OSI model\"></a>分层模型 OSI model</h2><p><strong>Open Systems Interconnection model</strong> (<strong>OSI model</strong>) 开放系统互联模型是一个概念性的参考模型, 不指定任何协议的具体实现. 核心思想在于不同网络层级间的解耦、接口独立, 任何一层协议可以升级替换后不影响整个网络功能, 在网络通信协议设计时起到一个指导作用.<br><img src=\"osi7.png\" alt=\"image-osi\" style=\"zoom:50%;\" /></p>\n<h3 id=\"Definitions\"><a href=\"#Definitions\" class=\"headerlink\" title=\"Definitions:\"></a>Definitions:</h3><ul>\n<li><p>通信协议(Communication protocols): 让处于同层的不同host实体可以相互交互.</p>\n</li>\n<li><p>Protocol data unit(PDU): 在每一层, 两个实体通过交换该层协议的PDU来进行交互, PDU包含payload(也称为<a href=\"https://en.wikipedia.org/wiki/Service_data_unit\">service data unit</a> ,SDU) 和 protocol-related headers or footers . </p>\n</li>\n<li><p> 数据通信流程: 从Layer highest开始, PDU向下层传递, 并作为下层的SDU; 重复向更下层传递直至Layer lowest; 接着,底层负责将PDU传递给对端底层; 然后,逐层向上传递,拆包解析出各层SDU.</p>\n</li>\n</ul>\n<img src=\"./osi_pdu_pass.png\" alt=\"image-20220119105145560\" style=\"zoom:40%;\" />\n\n<img src=\"osi_transfer_example.png\" alt=\"image-20220123111825642\" style=\"zoom:43%;\" />\n\n<h3 id=\"Layer-architecture\"><a href=\"#Layer-architecture\" class=\"headerlink\" title=\"Layer architecture\"></a>Layer architecture</h3><h4 id=\"Layer-1-Physical-layer\"><a href=\"#Layer-1-Physical-layer\" class=\"headerlink\" title=\"Layer 1: Physical layer\"></a>Layer 1: Physical layer</h4><p>物理层负责非结构化原始数据的传输和接收, between device和物理传输介质。它将raw digital bits转换成electrical电子,optical光学 或radio无线信号等. 物理层规范规格包含蓝牙、以太网和USB标准等.</p>\n<p>Examples: Ethernet family 802.3 PHY(千兆宽带, 百兆宽带), 802.11 LAN &amp; wireless(2.4Ghz, 5Ghz), BLE(Bluetooth Low Energy) PHY,   E1.</p>\n<h4 id=\"Layer-2-Data-link-layer\"><a href=\"#Layer-2-Data-link-layer\" class=\"headerlink\" title=\"Layer 2: Data link layer\"></a>Layer 2: Data link layer</h4><p>物理层的线路有传输介质与通信设备组成，比特流在传输介质上传输时肯定会存在误差错误的。这样就引入了数据链路层在物理层之上，采用差错检测、差错控制和流量控制等方法，向网络层提供高质量的数据传输服务。</p>\n<p>数据链路层从网络层接受数据包, 并在将其发送到物理层之前, 将这些数据包封装成帧frame. 之后在两个相邻节点间(node to node)的链路上传送帧，每一帧包括<strong>数据</strong>和必要的<strong>头尾信息</strong>（如同步信息、地址信息、差错信息等）. 如果帧太大(超过MTU)的话，数据链路层通常会将大帧拆分为一个个的小帧，小帧能够使传输控制和错误检测更加高效。</p>\n<h4 id=\"Layer-3-Network-layer\"><a href=\"#Layer-3-Network-layer\" class=\"headerlink\" title=\"Layer 3: Network layer\"></a>Layer 3: Network layer</h4><p>网络层的任务就是提供能在不同的网络间transfer packets的程序和方法. 网络中会有非常多的nodes, 每个node会拥有自己的访问地址, 网络层就是要提供一种节点间路由寻址方式能让packet准确的传递给destination. 网络层还会在packet在某些MTU较小链路层传输时, 对原包进行分片, 独立传输, 并在下一链路node重新装配.  网络层可以做数据错误校验, 可靠性保障的功能, 但并不necessary.</p>\n<h4 id=\"Layer-4-Transport-layer\"><a href=\"#Layer-4-Transport-layer\" class=\"headerlink\" title=\"Layer 4: Transport layer\"></a>Layer 4: Transport layer</h4><p>传输层负责将变长数据(variable-length data sequences)从源传输到目的地, 并提供保障QoS的方式. </p>\n<h4 id=\"Layer-5-Session-layer\"><a href=\"#Layer-5-Session-layer\" class=\"headerlink\" title=\"Layer 5: Session layer\"></a>Layer 5: Session layer</h4><p>会话层的主要功能是负责维护两个节点之间的传输联接，确保点到点传输不中断，以及管理数据交换等功能。会话层在应用进程中建立、管理和终止会话。</p>\n<h4 id=\"Layer-6-Presentation-layer\"><a href=\"#Layer-6-Presentation-layer\" class=\"headerlink\" title=\"Layer 6: Presentation layer\"></a>Layer 6: Presentation layer</h4><p>表示层的主要功能是处理在两个通信系统中交换信息的表示方式，主要包括数据格式变化、<a href=\"https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%8A%A0%E5%AF%86/11048982\">数据加密</a>与解密、<a href=\"https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%8E%8B%E7%BC%A9/5198909\">数据压缩</a>与解压等</p>\n<h4 id=\"Layer-7-Application-layer\"><a href=\"#Layer-7-Application-layer\" class=\"headerlink\" title=\"Layer 7: Application layer\"></a>Layer 7: Application layer</h4><p>该层直接面向用户，是OSI中的最高层。它的主要任务是为用户提供应用的接口，即提供不同计算机间的文件传送、访问与管理，电子邮件的内容处理，不同计算机通过网络交互访问的虚拟终端功能等.</p>\n<h3 id=\"Protocol-stack-examples\"><a href=\"#Protocol-stack-examples\" class=\"headerlink\" title=\"Protocol stack examples\"></a>Protocol stack examples</h3><h4 id=\"BLE-protocol-stack\"><a href=\"#BLE-protocol-stack\" class=\"headerlink\" title=\"BLE protocol stack\"></a>BLE protocol stack</h4><img src=\"./ble_osi.png\" alt=\"ble_osi\" style=\"zoom:80%;\" />\n\n<h2 id=\"分层模型——TCP-IP模型及协议族\"><a href=\"#分层模型——TCP-IP模型及协议族\" class=\"headerlink\" title=\"分层模型——TCP/IP模型及协议族\"></a>分层模型——TCP/IP模型及协议族</h2><p>TCP/IP 模型将网络分为四层(算上物理层就是五层)，它不关注底层物理介质，主要关注终端之间的逻辑数据流转发。<br>TCP/IP 模型的核心是<strong>网络层</strong>和<strong>传输层</strong>，网络层解决网络之间的逻辑转发问题，传输层保证源端到目的端之间的可靠传输。最上层的<strong>应用层</strong>通过各种协议向终端用户提供业务应用。</p>\n<h3 id=\"物理层\"><a href=\"#物理层\" class=\"headerlink\" title=\"物理层\"></a>物理层</h3><p>任何协议栈都逃不脱最终帮其传输数据的物理层. 物理层传递的都是bit flow, 而以太网使用的都是曼彻斯特编码信号. 曼彻斯特(Manchester)编码的编码方法是把每个码元分成两个相等的间隔。 如图,码元1是前一个间隔为高电压后一个间隔为低电压，即位周期中心向下跳变表示1；码元0正好相反，位周期中心向上跳变表示0。这样保证了在每一个 码元中间出现一次电压的转换，接收端就利用这种电压的转换方便地把位同步信号提取出来.</p>\n<img src=\"./manchester.png\" alt=\"image-20220125225252662\" style=\"zoom:45%;\" />\n\n<p>在链路层从物理层收到的bit流中提取数据时, 一个问题就是如何区分帧的开始.  Manchester + Preamble.</p>\n<img src=\"./preamble.png\" alt=\"image-20220125230003591\" style=\"zoom:40%;\" />\n\n<h3 id=\"数据链路层\"><a href=\"#数据链路层\" class=\"headerlink\" title=\"数据链路层\"></a>数据链路层</h3><p>数据链路层位于网络层之下, 这意味着它与网络层协议比如常用的IP协议是解耦的, 以<strong>以太网数据链路层帧</strong>为例, 在通信时, 其完全不关心payload中是IP协议报文或是其他协议报文, 而是完全通过帧首的源MAC、目标MAC地址进行寻址通信.</p>\n<p>IEEE 802 规范下数据链路层向下还可细分为 logical link control (LLC) 层和 medium access control (MAC) 层。</p>\n<img src=\"./datalinklayer_sublayers.png\" alt=\"dll_sublayes\" style=\"zoom:40%;\" />\n\n<p>LLC 层又叫做<code>逻辑控制链路</code>层，它主要用于数据传输，它充当网络层和数据链路层中的<code>媒体访问控制（MAC）</code>子层之间的接口。LLC 层的主要功能如下</p>\n<ul>\n<li>LLC 的主要功能是发送时在 MAC 层上多路复用协议，并在接收时同样地多路分解协议。</li>\n<li>LLC 提供跳到跳的流的差错控制，像是路由器和路由器之间这种相邻节点的数据传输称为 <code>一跳</code>。</li>\n<li>它允许通过计算机网络进行多点通信。</li>\n</ul>\n<p>MAC 层负责传输介质的流控制和多路复用，它的主要功能如下</p>\n<ul>\n<li>MAC 层为 LLC 和 OSI 网络的上层提供了物理层的抽象。</li>\n<li>MAC 层负责封装帧，以便通过物理介质进行传输。</li>\n<li>MAC 层负责解析源和目标地址。</li>\n<li>MAC 层还负责在冲突的情况下执行冲突解决并启动重传。</li>\n<li>MAC 层负责生成帧校验序列，从而有助于防止传输错误。</li>\n</ul>\n<p>在 MAC 层中，有一个关键概念是 <code>MAC 地址</code>。MAC 地址主要用于识别数据链路中互联的节点. MAC 地址长 6 bytes (48 bit)，在使用<code>网卡(NIC)</code> 的情况下，MAC 地址一般都会烧入 ROM 中。因此，任何一个网卡的 MAC 地址都是唯一的。</p>\n<img src=\"/Users/talentxiet/Desktop/我的学习文档/网络基础/mac_addr.png\" alt=\"mac_addr\" style=\"zoom:28%;\" />\n\n<p>链路层的差错控制通过增加差错编码来实现, 又可分为<strong>检错编码</strong>和<strong>纠错编码</strong>: 检错编码常见有奇偶校验码和循环冗余码; 纠错编码常见有海明码等.</p>\n<p>流量(阻塞)控制是控制链路上的帧的发送速率，使接收方有足够的缓冲空间来接收帧，主要方法有两种，停止-等待协议和滑动窗口协议. 停止-等待协议是一种特殊的滑动窗口协议，相当于发送窗口和接收窗口大小为1的滑动窗口协议。</p>\n<img src=\"./datalink_timewindow.png\" alt=\"image-20220121112137195\" style=\"zoom:40%;\" />\n\n<p>以太网上传输的链路层数据帧有两种格式：<strong>Ethernet_II 和 IEEE802.3</strong>。选择哪种格式由 TCP/IP 协议簇中的网络层决定。大多数的数据帧使用的是 Ethernet_II 格式. IEEE802.3 格式：Length字段值小于等于0x05DC. Ethernet_II 格式：Type 字段值大于等于0x0600. 以此来供链路层判断数据是哪种规范.</p>\n<img src=\"./data_link_layer_frame.png\" alt=\"image-20220119143457079\" style=\"zoom:45%;\" />\n\n<p>FCS: frame check sequence, 错误检查的.<br>LLC：Logical Link Control，逻辑链路控制由目的访问点 D.SAP （Destination Service Access Point）、源服务访问点 S.SAP（Source Service Access Point）和 Control 字段组成.<br>SNAP：Sub-network Access Protocol，子网访问协议由机构代码（Org Code）和类型（Type）字段组成。Org Code 三个字节都为 0 。Type 字段的含义与 Ethernet_II 帧中的 Type 字段相同.</p>\n<h3 id=\"网络层\"><a href=\"#网络层\" class=\"headerlink\" title=\"网络层\"></a>网络层</h3><h4 id=\"IP协议\"><a href=\"#IP协议\" class=\"headerlink\" title=\"IP协议\"></a><strong>IP协议</strong></h4><ul>\n<li>对于网络层，<strong>IP协议</strong>是其中一个非常重要的协议</li>\n<li>IP协议使得复杂的实际网络变为一个<strong>虚拟互联的网络</strong>（也就是我们只需要将终端设备连接到这个网络中去即可，并不需要关心里边实际的复杂网络）</li>\n<li>IP协议使得网络层可以<strong>屏蔽底层细节</strong>而专注网络层的<strong>数据转发</strong>（如果单从网络层去看，我们是不用关心<strong>数据包</strong>是通过海底电缆还是通过无线WiFi传输到目的计算机的）</li>\n<li>IP协议<strong>解决了在虚拟网络中数据报传输路径的问题</strong></li>\n</ul>\n<img src=\"./ip_nets.png\" alt=\"image-20220125231347009\" style=\"zoom:40%;\" />\n\n<p><strong>IP协议特点:</strong></p>\n<ul>\n<li>无状态, 是指IP通信双方不同步传输数据的状态信息，因此所有IP数据报的发送，传输，和接收都是相互独立的，没有山下文关系的。发送、传输和接收都是相互独立、没有上下文关系的。这种服务最大的缺点是无法处理乱序和重复的IP数据报。比如发送端发送出的第N个IP数据报可能比第N+1个IP数据报后到达接收端，而同一个IP数据报也可能经过不同的路径多次到达接收端。在这两种情况下，接收端的IP模块无法检测到乱序和重复，因为这些IP数据报之间没有任何上下文关系。接收端的IP模块只要收到了完整的IP数据报(如果是IP分片的话，IP 模块将先执行重组)，就将其数据部分(TCP报文段、UDP数据报或者ICMP报文)，上交给上层协议。那么从上层协议来看，这些数据就可能是乱序的、重复的。面向连接的协议，比如TCP协议，则能够自己处理乱序的、重复的报文段，它递交给上层协议的内容绝对是有序的、正确的。虽然IP数据报头部提供了一个标识字段(见后文)用以唯-标识-一个IP数据报，但它是被用来处理IP分片和重组的，而不是用来指示接收顺序的。无状态服务的优点也很明显:简单、高效。我们无须为保持通信的状态而分配一些内核资源，也无须每次传输数据时都携带状态信息。在网络协议中，无状态是很常见的，比如UDP协议和HTTP协议都是无状态协议。以HTTP协议为例，一个浏览器的连续两次网页请求之间没有任何关联，它们将被Web服务器独立地处理。</li>\n<li>无连接(connectionless), 是指IP通信双方都不长久地维持对方的任何信息。这样，上层协议每次发送数据的时候，都必须明确指定对方的IP地址。</li>\n<li>不可靠, 是指IP协议不能保证IP数据报准确地到达接收端，它只是承诺尽最大努力(best effort)。 很多种情况都能导致IP数据报发送失败。比如，某个中转路由器发现IP数据报在网络上存活的时间太长(根据IP数据报头部字段TTL判断，见后文)，那么它将丢弃之，并返回一个ICMP错误消息(超时错误)给发送端。又比如，接收端发现收到的IP数据报不正确(通过校验机制)，它也将丢弃之，并返回一个ICMP错误消息(IP 头部参数错误)给发送端。无论哪种情况，发送端的IP模块一旦检测到IP数据报发送失败，就通知上层协议发送失败，而不会试图重传。因此，使用IP服务的上层协议(比如TCP协议)需要自己实现数据确认、超时重传等机制以达到可靠传输的目的。</li>\n</ul>\n<p><strong>IP协议报文格式 :</strong></p>\n<img src=\"./ip_packet.png\" alt=\"image-20220125234059378\" style=\"zoom:40%;\" />\n\n<ul>\n<li><p><strong>版本</strong>：占4位，指的是IP协议的版本，通信双方的版本必须一致，即IPv4，也有IPv6</p>\n</li>\n<li><p><strong>首部长度</strong>：占4位，最大数值为15，表示的是IP首部的长度，单位是“32位字”（4个字节），也就是<strong>IP首部</strong>最大长度为60字节</p>\n</li>\n<li><p><strong>服务类型</strong>：服务登记, 比如VIP专线, 这个一般是不需要关心的</p>\n</li>\n<li><p><strong>总长度</strong>：占16位，最大数值为65535，表示的是<strong>IP数据报总长度</strong>（IP首部+IP数据） （在前边介绍数据链路层的时候，也提到过一个长度。对于数据链路层的长度，称之为<strong>MTU</strong>，一般为1500字节。而IP数据报的最大长度有65535个字节，比MTU要大。如果真正传输的时候，如果出现这种情况，数据链路层会对IP数据报进行<strong>分片</strong>，也就是将一个较长的IP数据报拆分成多个数据帧来进行传输）</p>\n</li>\n<li><p><strong>标识</strong>：占16位，计数器标示, 分片后的同组数据具备相同标示. 同一组的包根据标示重组.</p>\n</li>\n<li><p><strong>标记</strong>： 占3位，但目前只有2位有意义。<br> 标志字段中的最低位记为MF(More Fragment)。MF=1即表示后面“还有分片”的数据报,MF=0表示这已是若干数据报片中的最后一个<br> 标志字段中间的一位记为DF(Don’t Fragment)，意思是“不能分片”。只有当DF=0时才允许分片。</p>\n</li>\n<li><p><strong>片偏移</strong>：前边有提到，如果IP数据报的长度过长，会进行IP报文的分片，把一个IP报文拆分成多个数据帧进行数据链路层的传输(以<strong>8 Bytes</strong>的倍数分包)。因此，如果拆分的话，就需要使用<strong>片偏移</strong>来记录当前的数据帧，保存的<strong>第几个偏移的IP数据</strong></p>\n <img src=\"./ip_offset.png\" alt=\"image-20220129104929487\" style=\"zoom:45%;\" /></li>\n<li><p><strong>TTL</strong>：占8位，表明IP数据报文在网络中的<strong>寿命</strong>，每经过一个设备（不管是路由器还是计算机），TTL减一，当TTL=0时，网络设备必须<strong>丢弃</strong>该报文（它解决的就是，当网络报文找不到终点的时候，避免网络报文在网络中无限的传输，以消耗带宽）</p>\n</li>\n<li><p><strong>协议</strong>：占8位，表明IP数据所携带的具体数据是什么<strong>协议</strong>的（如TCP、UDP等，一些协议对应的值，可参考下图）</p>\n</li>\n<li><p><strong>校验和</strong>：占16位，校验IP首部是否有出错（接收方接收到IP首部之后也会进行校验，如果有错，则直接丢弃）</p>\n</li>\n<li><p><strong>源IP地址</strong>：<strong>发送</strong>IP数据报的网络设备的IP地址</p>\n</li>\n<li><p><strong>目的IP地址</strong>：IP数据报要<strong>到达</strong>的目的网络设备的IP地址</p>\n</li>\n</ul>\n<h4 id=\"ICMP协议\"><a href=\"#ICMP协议\" class=\"headerlink\" title=\"ICMP协议\"></a><strong>ICMP协议</strong></h4><img src=\"./icmp_kinds.png\" alt=\"image-20220126215905234\" style=\"zoom:50%;\" />\n\n<h4 id=\"路由选择协议\"><a href=\"#路由选择协议\" class=\"headerlink\" title=\"路由选择协议\"></a><strong>路由选择协议</strong></h4><p><strong>自治系统</strong>：autonomous system。在互联网中，一个自治系统(AS)是一个有权自主地决定在本系统中应采用各种<a href=\"https://baike.baidu.com/item/%E8%B7%AF%E7%94%B1%E5%8D%8F%E8%AE%AE/202634\">路由协议</a>的小型单位。这个网络单位可以是一个简单的网络也可以是一个由一个或多个普通的<a href=\"https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86%E5%91%98/595848\">网络管理员</a>来控制的网络群体，它是一个单独的可管理的<a href=\"https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E5%8D%95%E5%85%83/9928606\">网络单元</a>（例如一所大学，一个企业或者一个公司个体）。</p>\n<img src=\"./ip_routing_protocol.png\" alt=\"image-20220126220513526\" style=\"zoom:50%;\" />\n\n<p>内部网关协议:</p>\n<ul>\n<li>RIP, Routing Information Protocol: 优点, 算法简单; 缺点, 路由故障链路改变远端感知慢, 距离有限 max16, 大规模网络路由表可能过大.</li>\n</ul>\n<img src=\"./rip.png\" alt=\"image-20220126220918042\" style=\"zoom:50%;\" />\n\n<ul>\n<li><p>OSPF, Open Shortest Path First 开放的最短路径优先算法: </p>\n<p>与RIP三个区别:（1）向本<a href=\"https://baike.baidu.com/item/%E8%87%AA%E6%B2%BB%E7%B3%BB%E7%BB%9F\">自治系统</a>中所有路由器发送信息。（2）发送的信息就是与本<a href=\"https://baike.baidu.com/item/%E8%B7%AF%E7%94%B1%E5%99%A8\">路由器</a>相邻的所有路由器的链路状态，但这只是路由器所知道的部分信息。（3）只有在链路状态发生变化时，<a href=\"https://baike.baidu.com/item/%E8%B7%AF%E7%94%B1%E5%99%A8\">路由器</a>才向所有路由器用<a href=\"https://baike.baidu.com/item/%E6%B4%AA%E6%B3%9B\">洪泛</a>法发送此信息。</p>\n</li>\n</ul>\n<p>外部(边界)网关协议:</p>\n<p>BGP用于在不同的自治系统（AS）之间交换路由信息。当两个AS需要交换路由信息时，每个AS都必须指定一个运行BGP的节点，来代表AS与其他的AS交换路由信息。两个AS中利用BGP交换信息的路由器也被称为边界网关（Border Gateway）或边界路由器（Border Router）. </p>\n<img src=\"./BGP_speaker.png\" alt=\"image-20220126223533819\" style=\"zoom:50%;\" />\n\n<img src=\"./BGP_example.png\" alt=\"image-20220126223429235\" style=\"zoom:40%;\" />\n\n\n\n<h3 id=\"传输层\"><a href=\"#传输层\" class=\"headerlink\" title=\"传输层\"></a>传输层</h3><p>端口作用, 实现进程到进程的通信, 复用ip线路, 提供标准的的端口-&gt;进程的映射方式.</p>\n<img src=\"./transport_process.png\" alt=\"image-20220126230009234\" style=\"zoom:50%;\" />\n\n<h4 id=\"UDP\"><a href=\"#UDP\" class=\"headerlink\" title=\"UDP\"></a>UDP</h4><p>UDP, User Datagram Protocol用户数据报协议, 只在IP基础上多了复用分用和差错校验的功能.</p>\n<h5 id=\"特点\"><a href=\"#特点\" class=\"headerlink\" title=\"特点\"></a>特点</h5><ul>\n<li>无连接</li>\n<li>尽努力交付</li>\n<li>面向报文的</li>\n<li>无拥塞控制</li>\n<li>支持一对一、一对多、多对一、多对多</li>\n<li>首部开销小</li>\n</ul>\n<h5 id=\"协议格式\"><a href=\"#协议格式\" class=\"headerlink\" title=\"协议格式\"></a>协议格式</h5><img src=\"./udp_protocol.png\" alt=\"image-20220126233302042\" style=\"zoom:45%;\" />\n\n<h4 id=\"TCP\"><a href=\"#TCP\" class=\"headerlink\" title=\"TCP\"></a>TCP</h4><h5 id=\"特点-1\"><a href=\"#特点-1\" class=\"headerlink\" title=\"特点\"></a>特点</h5><ul>\n<li><p>面向连接</p>\n</li>\n<li><p>每条点对点(socket1, socket2)</p>\n</li>\n<li><p>可靠的</p>\n</li>\n<li><p>全双工</p>\n</li>\n<li><p>面向字节流的</p>\n</li>\n<li><p>为应用程序间提供逻辑通信链路</p>\n<img src=\"./tcp_bytes_stream.png\" alt=\"image-20220129001752910\" style=\"zoom:50%;\" /></li>\n</ul>\n<h5 id=\"协议格式-1\"><a href=\"#协议格式-1\" class=\"headerlink\" title=\"协议格式\"></a>协议格式</h5><img src=\"./tcp_protocol.png\" alt=\"image-20220127225910379\" style=\"zoom:50%;\" />\n\n<p><strong>16位源端口号</strong>：指发送端的端口号<br><strong>16位目的端口号</strong>：指目的端的端口号<br><strong>4位头部长度</strong>：同IP头部，表示TCP头部的大小，以4字节为单位。<br><strong>32位序列号</strong>：TCP通信过程中，通过序列号来保证传输过程中数据的有序性<br><strong>32位确认号</strong>：用以对接受到的报文进行确认<br><strong>保留6位</strong><br><strong>URG</strong>：表示紧急指针<br><strong>ACK</strong>：表示确认号<br><strong>PSH</strong>：通知对端立即从缓冲区取走数据<br><strong>RST</strong>: 通知当前连接出现问题, 要释放资源, 有需要则重新建立连接. 也可用于拒绝非法连接.<br><strong>SYN</strong>：表示请求建立连接<br><strong>FIN</strong>：标志要通知对端本端的数据发送要关闭<br><strong>16位窗口大小</strong>：TCP流量控制的手段，告诉发送方本端的接收端缓冲区还能接受多少数据, 单位字节.<br><strong>16位校验和</strong>：由发送方填充，接收端用以检查TCP报文在传输过程中是否有损坏</p>\n<h5 id=\"可靠性\"><a href=\"#可靠性\" class=\"headerlink\" title=\"可靠性\"></a>可靠性</h5><h6 id=\"滑动窗口\"><a href=\"#滑动窗口\" class=\"headerlink\" title=\"滑动窗口\"></a>滑动窗口</h6><p>A根据B TCP ack报文中的窗口大小发送滑动窗口大小以内的若干数据给B, 给回复按序抵达的最大包序号, 即31. B不应过度拖延回复ack的时间.</p>\n<img src=\"./tcp_window.png\" alt=\"image-20220128000255497\" style=\"zoom:50%;\" />\n\n<img src=\"./tcp_buffer.png\" alt=\"image-20220128000641845\" style=\"zoom:50%;\" />\n\n<p>需注意, tcp是全双工通信, 每端都有自己的发送和接受窗口及缓冲. </p>\n<h6 id=\"超时重传时间-Retransmision-Time-out\"><a href=\"#超时重传时间-Retransmision-Time-out\" class=\"headerlink\" title=\"超时重传时间 Retransmision Time out\"></a>超时重传时间 Retransmision Time out</h6><img src=\"./tcp_rto.png\" alt=\"image-20220128001439268\" style=\"zoom:40%;\" />\n\n<h6 id=\"选择确认ACK-Selective-ACK\"><a href=\"#选择确认ACK-Selective-ACK\" class=\"headerlink\" title=\"选择确认ACK Selective ACK\"></a>选择确认ACK Selective ACK</h6><p>SACK用于接收端向发送端报告部分未按序已收到的字节块, 从而避免重复传输. 需要tcp连接时 option增加SACK头, 双方确认支持SACK. 但是描述哪些数据已接受其实是比较复杂的, 尽管RFC2018有详细说明, 但使用还是较少, 大部分还是发送端重发所有未ack字节.</p>\n<img src=\"./tcp_sack.png\" alt=\"image-20220128002718253\" style=\"zoom:50%;\" />\n\n\n\n<h5 id=\"TCP流量控制\"><a href=\"#TCP流量控制\" class=\"headerlink\" title=\"TCP流量控制\"></a>TCP流量控制</h5><h6 id=\"可利用滑动窗口控制发送方流量\"><a href=\"#可利用滑动窗口控制发送方流量\" class=\"headerlink\" title=\"可利用滑动窗口控制发送方流量\"></a>可利用滑动窗口控制发送方流量</h6><h6 id=\"TCP传输效率\"><a href=\"#TCP传输效率\" class=\"headerlink\" title=\"TCP传输效率\"></a>TCP传输效率</h6><p>应用程序把发送数据给到TCP缓存就不管了, 由TCP负责控制发送时机将数据正确的发送出去. 这是一个比较复杂的问题.</p>\n<ul>\n<li><p><strong>Nagle算法</strong></p>\n<p>TCP/IP协议中，无论发送多少数据，总是要在数据前面加上协议头，同时，对方接收到数据，也需要发送ACK表示确认。为了尽可能的利用网络带宽，TCP总是希望尽可能的发送足够大的数据。（一个连接会设置MSS参数，因此，TCP/IP希望每次都能够以MSS尺寸的数据块来发送数据）。Nagle算法就是为了尽可能发送大块数据，避免网络中充斥着许多小数据块。</p>\n<p>Nagle算法的基本定义是<strong>任意时刻，最多只能有一个未被确认的小段</strong>。 所谓“小段”，指的是小于MSS尺寸的数据块，所谓“未被确认”，是指一个数据块发送出去后，没有收到对方发送的ACK确认该数据已收到。</p>\n<p>Nagle算法的规则（可参考tcp_output.c文件里tcp_nagle_check函数注释）：</p>\n<p>（1）如果包长度达到MSS，则允许发送；</p>\n<p>（2）如果该包含有FIN，则允许发送；</p>\n<p>（3）设置了TCP_NODELAY选项，则允许发送；</p>\n<p>（4）未设置TCP_CORK选项时，若所有发出去的小数据包（包长度小于MSS）均被确认，则允许发送；</p>\n<p>（5）上述条件都未满足，但发生了超时（一般为200ms），则立即发送。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> there is new data to send <span class=\"comment\">#有数据要发送</span></span><br><span class=\"line\">    <span class=\"comment\"># 发送窗口缓冲区和队列数据 &gt;=mss，队列数据（available data）为原有的队列数据加上新到来的数据</span></span><br><span class=\"line\">    <span class=\"comment\"># 也就是说缓冲区数据超过mss大小，nagle算法尽可能发送足够大的数据包</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> the window size &gt;= MSS and available data is &gt;= MSS </span><br><span class=\"line\">        send complete MSS segment now <span class=\"comment\"># 立即发送</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> there is unconfirmed data still <span class=\"keyword\">in</span> the pipe <span class=\"comment\"># 前一次发送的包没有收到ack</span></span><br><span class=\"line\">            <span class=\"comment\"># 将该包数据放入队列中，直到收到一个ack再发送缓冲区数据</span></span><br><span class=\"line\">            enqueue data <span class=\"keyword\">in</span> the buffer until an acknowledge is received </span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            send data immediately <span class=\"comment\"># 立即发送</span></span><br><span class=\"line\">        end <span class=\"keyword\">if</span></span><br><span class=\"line\">    end <span class=\"keyword\">if</span></span><br><span class=\"line\">end <span class=\"keyword\">if</span>　</span><br></pre></td></tr></table></figure>\n\n<p>Nagle算法只允许一个未被ACK的包存在于网络，它并不管包的大小，因此它事实上就是一个扩展的停-等协议，只不过它是基于包停-等的，而不是基于字节停-等的。</p>\n</li>\n<li><p><strong>TCP确认延迟机制</strong></p>\n<p>当Server端收到数据之后，它并不会马上向client端发送ACK，而是会将ACK的发送延迟一段时间（假设为t），它希望在t时间内server端会向client端发送应答数据，这样ACK就能够和应答数据一起发送，就像是应答数据<strong>捎带着ACK</strong>过去。初始化是40ms。</p>\n</li>\n<li><p><strong>TCP_NODELAY 选项</strong></p>\n<p>默认情况下，发送数据采用Nagle 算法。这样虽然提高了<a href=\"https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E5%90%9E%E5%90%90%E9%87%8F/646450\">网络吞吐量</a>，但是实时性却降低了，在一些交互性很强的应用程序来说是不允许的，使用TCP_NODELAY选项可以禁止Nagle 算法。</p>\n<p>此时，应用程序向内核递交的每个数据包都会立即发送出去。需要注意的是，虽然禁止了Nagle 算法，但网络的传输仍然受到TCP确认延迟机制的影响。</p>\n</li>\n<li><p><strong>TCP_CORK 选项</strong></p>\n<p>所谓的CORK就是塞子的意思，形象地理解就是用CORK将连接塞住，使得数据先不发出去，等到拔去塞子后再发出去。设置该选项后，内核会尽力把小数据包拼接成一个大的数据包（一个MTU）再发送出去，当然若一定时间后（一般为200ms，该值尚待确认），内核仍然没有组合成一个MTU时也必须发送现有的数据（不可能让数据一直等待吧）。</p>\n</li>\n</ul>\n<h5 id=\"TCP拥塞控制\"><a href=\"#TCP拥塞控制\" class=\"headerlink\" title=\"TCP拥塞控制\"></a>TCP拥塞控制</h5><ul>\n<li><p>拥塞控制：防止过多的数据注入到网络中，这样可以使网络中的路由器或链路不致过载。拥塞控制所要做的都有一个前提：网络能够承受现有的网络负荷。拥塞控制是一个全局性的过程，涉及到所有的主机、路由器，以及与降低网络传输性能有关的所有因素。</p>\n</li>\n<li><p>流量控制：指点对点通信量的控制，是端到端的问题。流量控制所要做的就是抑制发送端发送的速率，以便使接收端来得及接收。</p>\n</li>\n</ul>\n<p>解决拥塞问题一般是以下步骤: 1) 监测网络, 探测拥塞的位置与时间;  2) 将拥塞信息发送到能采取控制的地方; 3) 调整网络参数.</p>\n<p>常用方法: 慢开始( slow-start )、拥塞避免( congestion avoidance )、快重传( fast retransmit )和快恢复( fast recovery )。</p>\n<h6 id=\"慢开始\"><a href=\"#慢开始\" class=\"headerlink\" title=\"慢开始\"></a>慢开始</h6><p>发送方维持一个拥塞窗口 cwnd ( congestion window )的状态变量。拥塞窗口的大小取决于网络的拥塞程度，并且动态地在变化。发送方让自己的发送窗口等于拥塞窗口。发送方控制拥塞窗口的原则是：只要网络没有出现拥塞，拥塞窗口就再增大一些，以便把更多的分组发送出去。但只要网络出现拥塞，拥塞窗口就减小一些，以减少注入到网络中的分组数。</p>\n<p>慢开始算法：当主机开始发送数据时，如果立即所大量数据字节注入到网络，那么就有可能引起网络拥塞，因为现在并不清楚网络的负荷情况。因此，较好的方法是先探测一下，即由小到大逐渐增大发送窗口，也就是说，由小到大逐渐增大拥塞窗口数值。通常在刚刚开始发送报文段时，先把拥塞窗口 cwnd 设置为一个最大报文段MSS的数值。而在每收到一个对新的报文段的确认后，把拥塞窗口增加至多一个MSS的数值。用这样的方法逐步增大发送方的拥塞窗口 cwnd ，可以使分组注入到网络的速率更加合理。 cwnd = 1, 2, 4, 8 …</p>\n<p>为了防止拥塞窗口cwnd增长过大引起网络拥塞，还需要设置一个慢开始门限ssthresh状态变量。慢开始门限ssthresh的用法如下：</p>\n<p>　　当 cwnd &lt; ssthresh 时，使用上述的慢开始算法<br>　　当 cwnd &gt; ssthresh 时，停止使用慢开始算法而改用拥塞避免算法<br>　　当 cwnd = ssthresh 时，既可使用慢开始算法，也可使用拥塞控制避免算法</p>\n<h6 id=\"拥塞避免\"><a href=\"#拥塞避免\" class=\"headerlink\" title=\"拥塞避免\"></a>拥塞避免</h6><p>让拥塞窗口cwnd缓慢地增大，即每经过一个往返时间RTT就把发送方的拥塞窗口cwnd加1，而不是加倍。这样拥塞窗口cwnd按线性规律缓慢增长，比慢开始算法的拥塞窗口增长速率缓慢得多。</p>\n<p>无论在慢开始阶段还是在拥塞避免阶段，只要发送方判断网络出现拥塞（其根据就是没有收到确认），就要把慢开始门限ssthresh设置为出现拥塞时的发送方窗口值的一半（但不能小于2）。然后把拥塞窗口cwnd重新设置为1，执行慢开始算法。这样做的目的就是要迅速减少主机发送到网络中的分组数，使得发生拥塞的路由器有足够时间把队列中积压的分组处理完毕。</p>\n<img src=\"./tcp_slow_start.png\" alt=\"image-20220128190952845\" style=\"zoom:40%;\" />\n\n<h6 id=\"快重传和快恢复\"><a href=\"#快重传和快恢复\" class=\"headerlink\" title=\"快重传和快恢复\"></a>快重传和快恢复</h6><p>快重传算法首先要求接收方每收到一个报文段后(即便是后序)就立即发出重复确认（为的是使发送方及早知道有报文段没有到达对方），而不要等到自己发送数据时才进行捎带确认。当发送方连续收到三个重复确认，就执行“乘法减小”算法，把慢开始门限ssthresh减半。在采用快恢复算法时，慢开始算法只是在TCP连接建立时和网络出现超时时才使用。采用这样的拥塞控制方法使得TCP的性能有明显的改进。</p>\n<img src=\"./tcp_congest.png\" alt=\"image-20220128190034654\" style=\"zoom:50%;\" />\n\n<h5 id=\"TCP连接管理\"><a href=\"#TCP连接管理\" class=\"headerlink\" title=\"TCP连接管理\"></a>TCP连接管理</h5><h6 id=\"三次握手\"><a href=\"#三次握手\" class=\"headerlink\" title=\"三次握手\"></a>三次握手</h6><p>三次握手是为了建立连接, 双方确认对方的存在,并协商一些参数,如窗口大小 , 初始化一下缓冲队列资源等. 为了确认双方存在, 头两次sync, sync+ack是 省不了的, 那第三次ack是为了做什么呢? 是为了避免已失效的sync请求又抵达B, 又消耗B的资源. 有了第三次ack, 当无效的syn被server sync+ack后, client不会回复ack, 超时后server也就会再销毁掉对应资源.</p>\n<img src=\"./tcp_handshake.png\" alt=\"image-20220129000032602\" style=\"zoom:50%;\" />\n\n<h6 id=\"四次挥手\"><a href=\"#四次挥手\" class=\"headerlink\" title=\"四次挥手\"></a>四次挥手</h6><img src=\"./tcp_bye_handshake.png\" alt=\"image-20220129002627713\" style=\"zoom:50%;\" />\n\n<p><strong>MSL</strong>: Max Segment lifetime, 报文端最大寿命. </p>\n<p>为什么A收到 FIN 后要等两个MSL呢? </p>\n<ol>\n<li>确保能回复FIN的ack, 如果B没收到ack, 会重新发送FIN+ACK. 这时如果A已经断了, B就只能自己特殊处理到CLOSED状态.</li>\n<li>尽量让本次连接 网络中的网络包都传输完, 不会在新连接中收到旧连接报文.</li>\n</ol>\n<h5 id=\"TCP有限状态机\"><a href=\"#TCP有限状态机\" class=\"headerlink\" title=\"TCP有限状态机\"></a>TCP有限状态机</h5><img src=\"./tcp_state.png\" alt=\"image-20220129152318656\" style=\"zoom:50%;\" />\n\n\n\n<h4 id=\"应用层\"><a href=\"#应用层\" class=\"headerlink\" title=\"应用层\"></a>应用层</h4><h2 id=\"应用层常用协议\"><a href=\"#应用层常用协议\" class=\"headerlink\" title=\"应用层常用协议\"></a>应用层常用协议</h2><h3 id=\"DNS\"><a href=\"#DNS\" class=\"headerlink\" title=\"DNS\"></a>DNS</h3><p>基于UDP, <strong>53</strong>端口:  query请求(src port: 12868 , dst port: 53 ) + response响应(src port: 53, dst port: 12868 )</p>\n<p>迭代查询 or 递归查询 + 缓存. </p>\n<p><strong>解析顺序</strong>: 浏览器缓存, 系统缓存, 路由器DNS缓存 , ISP DNS 缓存, 根域名服务器, 顶级域名服务器, 主域名服务器, 保存结果至缓存.</p>\n<img src=\"./dns.png\" alt=\"image-20220129165409193\" style=\"zoom:40%;\" />\n\n<h3 id=\"HTTP\"><a href=\"#HTTP\" class=\"headerlink\" title=\"HTTP\"></a>HTTP</h3><p>HTTP协议发展历程:</p>\n<p>![image-20220127112311050](/Users/talentxiet/Library/Application Support/typora-user-images/image-20220127112311050.png)</p>\n<p>协议格式:</p>\n<img src=\"./http_protocol.png\" alt=\"image-20220130002354946\" style=\"zoom:50%;\" />\n\n<h3 id=\"SMTP\"><a href=\"#SMTP\" class=\"headerlink\" title=\"SMTP\"></a>SMTP</h3><img src=\"./smtp.png\" alt=\"image-20220130002634963\" style=\"zoom:45%;\" />\n\n<h3 id=\"DHCP\"><a href=\"#DHCP\" class=\"headerlink\" title=\"DHCP\"></a>DHCP</h3><img src=\"./dhcp.png\" alt=\"image-20220130221121647\" style=\"zoom:50%;\" />\n\n<h2 id=\"应用程序间通信过程\"><a href=\"#应用程序间通信过程\" class=\"headerlink\" title=\"应用程序间通信过程\"></a>应用程序间通信过程</h2><h3 id=\"系统调用-amp-socket套接字\"><a href=\"#系统调用-amp-socket套接字\" class=\"headerlink\" title=\"系统调用&amp;socket套接字\"></a>系统调用&amp;socket套接字</h3><img src=\"./syscall.png\" alt=\"image-20220130221429374\" style=\"zoom:50%;\" />\n\n<img src=\"./socket2.png\" alt=\"image-20220130224749539\" style=\"zoom:50%;\" />\n\n\n\n<h2 id=\"网络安全\"><a href=\"#网络安全\" class=\"headerlink\" title=\"网络安全\"></a>网络安全</h2><p>四个目标:</p>\n<ul>\n<li>保密性</li>\n<li>端点鉴别</li>\n<li>信息完整性</li>\n<li>运行安全性 访问控制</li>\n</ul>\n<img src=\"./net_sec_key.png\" alt=\"image-20220205185347484\" style=\"zoom:50%;\" />\n\n<h3 id=\"DES-AES\"><a href=\"#DES-AES\" class=\"headerlink\" title=\"DES AES\"></a>DES AES</h3><p>data encryption standard,  advanced encrytion standard, 对称加密、</p>\n<h3 id=\"公钥密码体制\"><a href=\"#公钥密码体制\" class=\"headerlink\" title=\"公钥密码体制\"></a>公钥密码体制</h3><p>任何加解密算法的安全性都取决于密钥长度,以及攻破密文的计算量</p>\n<h3 id=\"数字签名\"><a href=\"#数字签名\" class=\"headerlink\" title=\"数字签名\"></a>数字签名</h3><p>目标:</p>\n<ul>\n<li>接收者能核实发送者对报文的数字签名, 即是发送者发的</li>\n<li>收到的数据是完整的</li>\n<li>发送者事后不可抵赖数字签名</li>\n</ul>\n<img src=\"./signature.png\" alt=\"image-20220205191312308\" style=\"zoom:50%;\" />\n\n<h3 id=\"报文鉴别\"><a href=\"#报文鉴别\" class=\"headerlink\" title=\"报文鉴别\"></a>报文鉴别</h3><p>加解密算法可以实现报文鉴别,但是消耗cpu, 所以常用密码散列算法保护数据完整性. MD5 (message digest 第五代)和 SHA-1,2,3(secure hash algorithm).</p>\n<img src=\"./sec_mac.png\" alt=\"image-20220205193055077\" style=\"zoom:50%;\" />\n\n<p>MAC: message authentication code,</p>\n<h3 id=\"密钥分配\"><a href=\"#密钥分配\" class=\"headerlink\" title=\"密钥分配\"></a>密钥分配</h3><h4 id=\"对称密钥分配\"><a href=\"#对称密钥分配\" class=\"headerlink\" title=\"对称密钥分配\"></a>对称密钥分配</h4><p>对称密钥是一对一的, 任意双方通信都要有唯一的key, 通常由KDC动态随机分配</p>\n<img src=\"./对称密钥分配.png\" alt=\"image-20220205195510847\" style=\"zoom:50%;\" />\n\n<h4 id=\"公钥分配\"><a href=\"#公钥分配\" class=\"headerlink\" title=\"公钥分配\"></a>公钥分配</h4><p>由受信任的机构维护公钥和实体的关系, 通常是政府机构, 称之为CA (certification authority), 每个实体会被颁布 证书(certificate), 证书中包含拥有者标示, 公钥, 且此证书被CA进行了数字签名. 公众可以从机构公开信息中获取到机构的公钥, 对签名和 证书信息进行验证.</p>\n<p>为了使CA拥有统一格式, IETF接受了ITU制定的X.509规范.</p>\n<h3 id=\"互联网中的安全协议\"><a href=\"#互联网中的安全协议\" class=\"headerlink\" title=\"互联网中的安全协议\"></a>互联网中的安全协议</h3><h4 id=\"网络层-1\"><a href=\"#网络层-1\" class=\"headerlink\" title=\"网络层\"></a>网络层</h4><h5 id=\"IPsec\"><a href=\"#IPsec\" class=\"headerlink\" title=\"IPsec\"></a>IPsec</h5><img src=\"./ipsec.png\" alt=\"image-20220206000051358\" style=\"zoom:50%;\" />\n\n<h4 id=\"传输层-1\"><a href=\"#传输层-1\" class=\"headerlink\" title=\"传输层\"></a>传输层</h4><h5 id=\"SSL\"><a href=\"#SSL\" class=\"headerlink\" title=\"SSL\"></a>SSL</h5><p>Secure Socket Layer, Netscape开发, 95年交给IETF</p>\n<img src=\"./ssl.png\" alt=\"image-20220206001829432\" style=\"zoom:50%;\" />\n\n<img src=\"./ssl_procedure.png\" alt=\"image-20220206002408083\" style=\"zoom:50%;\" />\n\n<h5 id=\"TLS\"><a href=\"#TLS\" class=\"headerlink\" title=\"TLS\"></a>TLS</h5><p>Transport Layer Security, 基于SSL3.0设计. </p>\n<h3 id=\"防火墙\"><a href=\"#防火墙\" class=\"headerlink\" title=\"防火墙\"></a>防火墙</h3><p>是一种访问控制技术, 通常是特殊编程的路由器, 进行访问策略控制. </p>\n<ul>\n<li>分组过滤路由器: 根据 源/目的 IP/端口 协议类型进行分组过滤控制.</li>\n<li>应用网关: 应用层网关, 根据应用层报文鉴权转发</li>\n</ul>\n<h2 id=\"实时音视频相关协议\"><a href=\"#实时音视频相关协议\" class=\"headerlink\" title=\"实时音视频相关协议\"></a>实时音视频相关协议</h2><img src=\"./av_protocols.png\" alt=\"image-20220206165809797\" style=\"zoom:50%;\" />\n\n<h3 id=\"RTP\"><a href=\"#RTP\" class=\"headerlink\" title=\"RTP\"></a>RTP</h3><img src=\"./rtp_protocol.png\" alt=\"image-20220206165710831\" style=\"zoom:50%;\" />\n\n<h3 id=\"RTCP\"><a href=\"#RTCP\" class=\"headerlink\" title=\"RTCP\"></a>RTCP</h3><img src=\"./rtcp.png\" alt=\"image-20220206172316751\" style=\"zoom:50%;\" />\n\n<h2 id=\"常见网络设备\"><a href=\"#常见网络设备\" class=\"headerlink\" title=\"常见网络设备\"></a>常见网络设备</h2><h3 id=\"Repeater中继器\"><a href=\"#Repeater中继器\" class=\"headerlink\" title=\"Repeater中继器\"></a>Repeater中继器</h3><p>中继器是一个将输入信号增强放大的设备, 把信号送得更远，以延展网络长度. 与具体信号形式无关,比如卫星雷达, 以太网集线器; 属于物理层</p>\n<h3 id=\"Hub集线器\"><a href=\"#Hub集线器\" class=\"headerlink\" title=\"Hub集线器\"></a>Hub集线器</h3><p>集线器（Ethernet hub）是指将多条以太网双绞线或光纤集合连接在同一段物理介质下的设备。集线器运作在OSI模型中的物理层，可以让其链接的设备工作在同一网段。集线器上有多个I/O端口，信号从任意一个端口进入后，会从其他端口出现. </p>\n<p>由于集线器会把收到的任何数字信号，从集线器的所有端口提交，这会造成信号之间碰撞的机会很大，而且信号也可能被窃听，并且这代表所有连到集线器的设备，都是属于同一个冲突网域以及广播网域(hub间组网所有hub都属于同一广播域), 冲突和泛洪严重，因此大部分Hub已被Switch代替.</p>\n<img src=\"./hub_pic.png\" alt=\"image-20220121154139634\" style=\"zoom:35%;\" />\n\n<h3 id=\"Bridge网桥\"><a href=\"#Bridge网桥\" class=\"headerlink\" title=\"Bridge网桥\"></a>Bridge网桥</h3><p>网桥工作在第二层数据链路层, 可以解析出链路层数据包, 并在Bridge内维护每个端口和连接着的设备MAC地址映射关系, 从而可以动态判断是否要转发收到的物理帧, 从而在一定程度上解决hub间的泛洪问题.</p>\n<img src=\"/Users/talentxiet/Desktop/我的学习文档/网络基础/bridge_pic.png\" alt=\"image-20220121155228284\" style=\"zoom:50%;\" />\n\n<h3 id=\"Switch交换机\"><a href=\"#Switch交换机\" class=\"headerlink\" title=\"Switch交换机\"></a>Switch交换机</h3><p>二层交换机: 二层交换机工作在数据链路层, 相比Hub, 它可以解析物理帧中的链路层frame信息,并基于frame中的mac地址与交换机端口进行缓存映射, 从而高效的解决Hub的冲突, 泛洪等问题. 此外交换机通常还支持划分VLAN的功能, VLAN可以创建相互隔离的子LAN, 从而缩小广播域大小. </p>\n<img src=\"./switch_pic.png\" alt=\"image-20220121160921808\" style=\"zoom:55%;\" />\n\n<p>交换机组网示例:</p>\n<img src=\"./switch_net.png\" alt=\"image-20220122201304858\" style=\"zoom:50%;\" />\n\n<p>三层交换机: 三层交换机在交换机的基础之上加了网络层协议的解析能力, 以及一些简单的三层路由功能. 不过它的主要功能还是交换机的，同时它的价格比路由器价格偏低，实用性更高。</p>\n<p>一个真实的交换机图片如下所示:</p>\n<img src=\"./real_switch.png\" alt=\"image-20220122202630798\" style=\"zoom:38%;\" />\n\n<h3 id=\"Router路由器-网关\"><a href=\"#Router路由器-网关\" class=\"headerlink\" title=\"Router路由器 (网关)\"></a>Router路由器 (网关)</h3><p>讲到路由器,我们要先讲一下IP子网和网关(Gateway), IP地址+掩码标示了IP网段, 不同网段间的网络相互隔离. 而网关, 顾名思义, 就是不同网络间连接的关口, 在网络层上实现网络连通. 网关概念也可延伸到应用服务网关, 这里我们讨论的均指TCP/IP协议下网关.</p>\n<p>在TCP/IP协议的系统内核层, 会在网络层向链路层封包时, 检测目标IP与源IP是否在同一子网, 如果在同一子网, 封包时的对端MAC地址通过ARP协议获取; 而当不在同一子网时, 会使用网关的MAC作为目标MAC地址. 可以用下图思考一下, 不同子网间通信时的隔离性到底是如何实现的? </p>\n<img src=\"./ip_group_question.png\" alt=\"image-20220122220139210\" style=\"zoom:40%;\" />\n\n<p>不同的IP网段可以设置不同的网关地址, 从而细粒度的控制流量出口. 一个默认macos下的路由表配置如下, 该机器ip为192.168.0.108, default网关为192.168.0.1, 访问127.0.0.1时会loopback到自己网卡, 访问192.168.0/24网段时会在en0网卡所处的进行链路层进行二层数据通信. </p>\n<img src=\"./routing_table.png\" alt=\"image-20220122215006525\" style=\"zoom:50%;\" />\n\n<p>路由器实现了网关的功能, 它工作的三层网络层, 可以实现三层协议的解包路由等功能. 当然路由器还有很多其他功能, 比如NAT等. </p>\n<p>路由器上会有很多网口, 可以按用处分为WAN口和LAN口, WAN口指的是接入其他Wide Area Network广域网的网口, LAN口指的是接入路由器内部Local Area Network局域网的网口. 往往内部LAN还支持Wifi的接入, 成为Wireless LAN (WLAN).  每个WAN口均可以提供三层能力, 即可配置独立的MAC及IP地址(独立网卡); LAN口则往往只具备二层传输能力, 提供交换机的功能. 具备三层能力的LAN口可以通过路由器配置作为WAN口服务.</p>\n<img src=\"/Users/talentxiet/Desktop/我的学习文档/网络基础/router_wan_lan.png\" alt=\"router_wan_lan\" style=\"zoom:40%;\" />\n\n<p>当路由器要串联多组子网时, 若想要子网间按期望进行通信的话, 就需要正确配置Router的路由表了. 路由表比较核心的三个配置属性是Destination, Gateway 和 Interface. </p>\n<p>Destination可以是网段, Host或者default (均不匹配时), 路由器网卡收到frame并解出目标IP后, 会逐一进行匹配, 匹配到对应记录后, 会按路由表配置, 将frame的目标MAC地址转换为所配网关的MAC地址, 并通过指定配置的Interface发送出去. 当没配置网关时, 会在Interface广播域对目标IP进行广播寻址.</p>\n<img src=\"/Users/talentxiet/Desktop/我的学习文档/网络基础/router_trans.png\" alt=\"router_transfer\" style=\"zoom:36%;\" />\n\n<img src=\"./router_trans2.png\" alt=\"image-20220124222512944\" style=\"zoom:50%;\" />\n\n<p>一个真实企业级路由器的图片如下: </p>\n<img src=\"/Users/talentxiet/Desktop/我的学习文档/网络基础/real_router.png\" alt=\"image-20220122203856676\" style=\"zoom:45%;\" />\n\n<h3 id=\"F5\"><a href=\"#F5\" class=\"headerlink\" title=\"F5\"></a>F5</h3><p>F5是一家美国公司, 卖的F5设备可提供4-7层的解包和路由能力, 相比工作于网络层的Router其功能就更丰富了. 包括负载均衡，应用状态监控，高可用性保障，广域流量管理，链路控制；内容转换，高速缓存，SSL加速和卸载等能力等等.</p>\n<img src=\"./real_f5.png\" alt=\"image-20220122205509626\" style=\"zoom:60%;\" />\n\n<h2 id=\"真实组网案例\"><a href=\"#真实组网案例\" class=\"headerlink\" title=\"真实组网案例\"></a>真实组网案例</h2><h3 id=\"公共网络\"><a href=\"#公共网络\" class=\"headerlink\" title=\"公共网络\"></a>公共网络</h3><h3 id=\"家庭网络\"><a href=\"#家庭网络\" class=\"headerlink\" title=\"家庭网络\"></a>家庭网络</h3><h2 id=\"Glossary\"><a href=\"#Glossary\" class=\"headerlink\" title=\"Glossary:\"></a>Glossary:</h2><h3 id=\"Ethernet-以太网\"><a href=\"#Ethernet-以太网\" class=\"headerlink\" title=\"Ethernet 以太网\"></a>Ethernet 以太网</h3><p>以太网(Ethernet)是一种计算机局域网技术, 提出于1980s。IEEE组织的IEEE 802.3标准制定了以太网的技术标准, 后续延伸出了802.3~11标准，它规定了包括物理层的连线、电子信号和介质访问层协议的内容。以太网是当前应用最普遍的局域网技术，取代了其他局域网标准如令牌环、FDDI 和 ARCNET。</p>\n<h3 id=\"广播域-broadcast-domain\"><a href=\"#广播域-broadcast-domain\" class=\"headerlink\" title=\"广播域 broadcast domain\"></a>广播域 broadcast domain</h3><p>广播域（Broadcast domain）是计算机网络的一个逻辑划分。广播域中的任意一个节点可以在数据链路层通过广播的方式到达任意一个节点。广播域可以处于同一个局域网内,也可以被桥接到其他的局域网。</p>\n<p>根据目前的流行技术，任意连接到同一 repeater 或者 switch 的电脑属于同一个广播域，并且任意连接到同一个inter-connected的 repeater 或 switch 的集合的电脑也是属于同一个广播域的。而 Router 和其他high-level devices会在广播域间形成隔离。</p>\n<h3 id=\"冲突域-collision-domain\"><a href=\"#冲突域-collision-domain\" class=\"headerlink\" title=\"冲突域 collision domain\"></a>冲突域 collision domain</h3><p>与广播域相对的是冲突域。冲突域中所有节点都链接到同一个被集线器、交换机和学习型网桥划分的相互连接的中继器集合。冲突域一般来说小于或者包含在广播域中。 冲突域下的碰撞问题通过CSMA/CD (Carrier-sense multiple access)解决.</p>\n<h2 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h2><h3 id=\"traceroute实现\"><a href=\"#traceroute实现\" class=\"headerlink\" title=\"traceroute实现\"></a>traceroute实现</h3><p>向目标ip发送ICMP echo包或随机30000+大端口发送udp包,  通过TTL和ICMP结果返回报文判断路由点地址和通信时间.</p>\n"},{"title":"编程规范","_content":"\n## 目录\n\n+ Git分支管理规范\n  + 常用分支说明\n  + 操作流程实例\n\n+ 设计规范\n  + 前言\n  + 阿里设计规约\n\n  + 本组UML图示例\n\n+ 阿里巴巴Java开发规范解读\n\n## Git分支管理规范\n\n### 常用分支说明\n\n#### master分支:\n\n+ 线上版本分支, 对应线上的每一个版本, 用tag标记\n+ 保护分支, 不允许在该分支直接提代码\n+ 稳定长期存在\n\n#### develop分支:\n\n+ 开发分支, 包含所有最新功能和代码, 所有开发基于此分支进行\n+ 保护分支, 不允许直接在该分支提代码\n+ 开发新功能时, 基于最新的develop分支切出自己的feature分支进行\n+ 稳定长期存在\n\n#### feature & fix分支:\n\n+ 新功能分支,  或修复BUG分支, 通常对应Sprint中的一个特定任务\n+ 分支命名用 feature-xxx 或 fix-xxx 开头,且有意义的词汇构成\n+ comment 包含Sprint中对应任务id 及此分支功能描述\n+ 开发完成后, 提交PR(pull request) 到 origin develop分支,  PR merge到develop分支后并删除此分支\n\n#### release分支:\n\n+ 发布分支, 准备上线版本时 使用的分支. \n+ 准备发布新版本时，从develop 切出一个 release 分支，来做发布前的准备\n+ 在修复线上紧急BUG时, 从 master 切出一个 release(hotfix)分支, 来做发布前的准备\n+ release分支 测试发现的bug直接在 release分支进行修复, 上线后 合并至 master 分支 和 develop分支\n+ 上线发布完成后, 可以选择删除release分支\n\n### 操作流程示例\n\n+ 两个长期分支:  master 和 develop.  日常开发中, 逐渐丰富develop分支功能 \n\n<img src=\"./git-0.png\" alt=\"image-20220316161954036\" style=\"zoom:42%;\" />\n\n+ 多人协作开发时,  提交PR前先在本地 pull并rebase最新的远端develop分支,   git pull origin develop --rebase;\n\n<img src=\"./git-1-1.png\" alt=\"image-20220318105311716\" style=\"zoom:35%;\" />\n\n+ 开发过程中准备一些新功能上线. 首先, 团队一起挑选出要上线的commit点\n\n<img src=\"./git-1.png\" alt=\"image-20220316160232302\" style=\"zoom:50%;\" />\n\n+ 从该commit切出release分支 , 发布到UAT环境 并交给测试和业务同事验证功能, 如符合预期 则使用该版本应用包上线. 上线完成后合并至 master 分支.\n\n<img src=\"./git-miss.png\" alt=\"image-20220316160610988\" style=\"zoom:50%;\" />\n\n+ 若该release分支测试时出了问题, 则直接在该分支修复问题. 知道符合预期后 发布生产, 并将新改动合并至master和develop分支.\n\n<img src=\"./git-3.png\" alt=\"image-20220316160903903\" style=\"zoom:50%;\" />\n\n+ 若从develop分支切release分支时, 有不想跟随本次上线的commit, 使用git cherry-pick精确选择要上线的commit, 从而产出符合预期的release分支.\n\n<img src=\"./git-4.png\" alt=\"image-20220316161230112\" style=\"zoom:50%;\" />\n\n+ 当生产环境出现要紧急修复的BUG时, 从线上对应的master分支commit 切出release分支, 修复bug后上线发布, 完成后合并至master和develop.\n\n<img src=\"./git-5.png\" alt=\"image-20220316161359901\" style=\"zoom:50%;\" />\n\n## 设计规范\n\n### 前言\n\n此处谈不上是规范, 希望大家一起探讨,总结出工作中必要的一些设计及文档产出. \n\n+ 比较复杂的需求开始前, 往往需要提前进行方案设计和评审, 那我们要评审些什么?  评审产出什么样的结果?\n  + 评估需求实现的技术方案&细节&可行性 -> 如何描述技术方案?  \n  + 方案带来的改动点 -> 参与方对改动内容达成一致\n  + 不同方案的优缺点&成本 -> 拍板确定实施方案\n  + 优雅的设计细节 -> 保证复用性和拓展性\n  + ...\n+ 代码或项目开发完成后,  如何验证符合预期?  -> 遵循文档约定\n\n### 阿里设计规约\n\n![image-20220318111434810](./design-1.png)\n\n### 本组UML图示例\n\n我们组开发的一个电话系统\n\n#### 1. 一通电话生命周期的状态图:\n\n![image-20220318112715504](./design1.png)\n\n#### 2. 通话发起到接听的时序图\n\n![image-20220318112918395](./design2.png)\n\n#### 3. 与协作方外部系统交互的 活动图\n\n<img src=\"./design3.png\" alt=\"image-20220318113905621\" style=\"zoom:55%;\" />\n\n#### 4. UAT测试环境各个服务间的部署图\n\n![image-20220318113430160](./design4.png)\n\n## 阿里巴巴 Java开发手册解读\n\n手册下载链接: https://github.com/alibaba/p3c\n\n### 难点解读:\n\n示例代码源码:  https://github.com/RobbieXie/p3c_guideline_code_demo\n\n##### 命名规约-9: 【强制】POJO 类中的任何布尔类型的变量，都不要加 is 前缀，否则部分框架解析会引起序列化错误。\n\n```java\npublic class NameGuideline9 {\n\n    public static void main(String[] args) throws JsonProcessingException {\n        Record record = Record.builder()\n                .isDeleted(true)\n                .build();\n\n        ObjectMapper objectMapper = new ObjectMapper();\n        Gson gson = new Gson();\n\n        // jackson默认输出 {\"deleted\":true}\n        System.out.println(objectMapper.writeValueAsString(record));\n        // gson默认输出 {\"isDeleted\":true}\n        System.out.println(gson.toJson(record));\n    }\n\n    @Data\n    @Builder\n    public static class Record {\n        private boolean isDeleted;\n    }\n}\n```\n\n##### 集合规约-2: 【强制】判断所有集合内部的元素是否为空，使用 isEmpty() 方法，而不是 size() == 0 的方式。\n\n```java\n// 在某些集合中，前者的时间复杂度为 O(1)，而且可读性更好。\n// 比如 ConcurrentLinkedQueue\n\n    // size()方法\n    public int size() {\n        int count = 0;\n        for (Node<E> p = first(); p != null; p = succ(p))\n            if (p.item != null)\n                // Collection.size() spec says to max out\n                if (++count == Integer.MAX_VALUE)\n                    break;\n        return count;\n    }\n    \n    // isEmpty()方法\n    public boolean isEmpty() {\n        return peekFirst() == null;\n    }\n```\n\n##### 集合规约-3&4: 【强制】在使用 java.util.stream.Collectors 类的 toMap() 方法转为 Map 集合时，一定要使用参数类型 为 BinaryOperator，参数名为 mergeFunction 的方法，否则当出现相同 key 时会抛出 IllegalStateException 异常。【强制】在使用 java.util.stream.Collectors 类的 toMap() 方法转为 Map 集合时，一定要注意当 value 为 null 时会抛 NPE 异常。\n\n```java\npublic class CollectionGuideline4 {\n\n    public static void main(String[] args) {\n        ArrayList<User> users = Lists.newArrayList(\n                new User(\"xietiandi\", \"male\"),\n                new User(\"xietiandi\", \"male\"),\n                new User(\"xtd\", null)\n        );\n\n        // 因为有重复key value， 会抛出IllegalStateException异常\n        users.stream().collect(Collectors.toMap(User::getName, User::getSex));\n\n        // 因为有value为null的元素， 会抛出NPE\n        users.stream().collect(Collectors.toMap(User::getName, User::getSex, (v1, v2) -> v2));\n\n        // 有重复元素且允许value为null时的正确写法\n        users.stream().collect(HashMap::new,\n                (hashMap, user) -> hashMap.put(user.getName(), user.getSex()),\n                HashMap::putAll).forEach((key, value) -> System.out.println(key + \":\" + value));\n    }\n\n    @AllArgsConstructor\n    @Getter\n    public static class User {\n        private String name;\n        private String sex;\n    }\n}\n```\n\n##### 集合规约-12:  【强制】泛型通配符<? extends T>来接收返回的数据，此写法的泛型集合不能使用 add 方 而<? super T>不能使用 get 方法，两者在接口调用赋值的场景中容易出错。\n\n```java\npublic class CollectionGuideline12 {\n\n    public static void main(String[] args) {\n        List<Animal> animals = new ArrayList<>();\n        List<Dog> dogs = new ArrayList<>();\n        List<Husky> huskies = Lists.newArrayList(new Husky(), new Husky());\n        List<Corgi> corgis = Lists.newArrayList(new Corgi(), new Corgi());\n\n        // addAll 可以将Dog任意子类加入到List<Dog>中\n        addAll(dogs, huskies);\n        addAll(dogs, corgis);\n\n        // addAll 也可以将Dog任意子类加入到List<Animal>中\n        addAll(animals, huskies);\n        addAll(animals, corgis);\n    }\n\n    /**\n     * 将 任何Dog或其子类的List对象 添加到 任何 Dog或其父类的List中\n     *\n     * @param dest\n     * @param src\n     */\n    public static void addAll(List<? super Dog> dest, List<? extends Dog> src) {\n        dest.addAll(src);\n    }\n\n    private static class Animal {}\n    private static class Dog extends Animal {}\n    private static class Husky extends Dog {}\n    private static class Corgi extends Dog {}\n\n}\n```\n\n##### 并发规约-6: 【强制】必须回收自定义的 ThreadLocal 变量，尤其在线程池场景下，线程经常会被复用，如果不清理 自定义的 ThreadLocal 变量，可能会影响后续业务逻辑和造成内存泄露等问题。尽量在代理中使用 try-finally 块进行回收。\n\n+ 注意设置java启动参数 -Xms15m -Xmx15m 限制堆大小15M;\n\n```java\npublic class ConcurrentGuideline6 {\n\n    /**\n     * supplier supplies 5MB buffer\n     */\n    private static final ThreadLocal<ByteBuffer> BYTE_BUFFER_THREAD_LOCAL =\n            ThreadLocal.withInitial(() -> ByteBuffer.allocate(5 * 1024 * 1024));\n\n    private static final ThreadLocal<ByteBuffer> BYTE_BUFFER_THREAD_LOCAL_2 =\n            ThreadLocal.withInitial(() -> ByteBuffer.allocate(5 * 1024 * 1024));\n\n    private static final ThreadLocal<ByteBuffer> BYTE_BUFFER_THREAD_LOCAL_3 =\n            ThreadLocal.withInitial(() -> ByteBuffer.allocate(5 * 1024 * 1024));\n\n    public static void main(String[] args) {\n        System.out.println(\"main-thread...\");\n\n        /**\n         * Runnable1逻辑：\n         * 1. 获取5mb的ThreadLocal1对象值\n         * 2. 打印日志\n         * 3. 线程强制waiting 2秒\n         * 4. 手动清除ThreadLocal\n         */\n        Runnable runnable = () -> {\n            BYTE_BUFFER_THREAD_LOCAL.get();\n            System.out.println(Thread.currentThread().getName() + \"get ByteBuffer 1\");\n            LockSupport.parkNanos(Duration.ofSeconds(2).toNanos());\n            BYTE_BUFFER_THREAD_LOCAL.remove();\n        };\n\n        // Runnable2 获取其他ThreadLocal对象：ThreadLocal2\n        Runnable runnable2 = () -> {\n            BYTE_BUFFER_THREAD_LOCAL_2.get();\n            System.out.println(Thread.currentThread().getName() + \"get ByteBuffer 2\");\n            LockSupport.parkNanos(Duration.ofSeconds(2).toNanos());\n            BYTE_BUFFER_THREAD_LOCAL_2.remove();\n        };\n\n        // Runnable3 获取其他ThreadLocal对象：ThreadLocal3\n        Runnable runnable3 = () -> {\n            BYTE_BUFFER_THREAD_LOCAL_3.get();\n            System.out.println(Thread.currentThread().getName() + \"get ByteBuffer 3\");\n            LockSupport.parkNanos(Duration.ofSeconds(2).toNanos());\n            BYTE_BUFFER_THREAD_LOCAL_3.remove();\n        };\n\n        // 单线程线程池\n        ThreadPoolExecutor threadPoolExecutor =\n                new ThreadPoolExecutor(1, 1, 0L, TimeUnit.SECONDS,\n                        new LinkedBlockingDeque<>(10), Executors.defaultThreadFactory());\n\n        // 在限制heapSize是15M的情况下，如不remove ThreadLocal, 会OOM\n        threadPoolExecutor.execute(runnable);\n        threadPoolExecutor.execute(runnable2);\n        threadPoolExecutor.execute(runnable3);\n    }\n}\n```\n\n","source":"_posts/coding-guidelines.md","raw":"---\ntitle: 编程规范\n---\n\n## 目录\n\n+ Git分支管理规范\n  + 常用分支说明\n  + 操作流程实例\n\n+ 设计规范\n  + 前言\n  + 阿里设计规约\n\n  + 本组UML图示例\n\n+ 阿里巴巴Java开发规范解读\n\n## Git分支管理规范\n\n### 常用分支说明\n\n#### master分支:\n\n+ 线上版本分支, 对应线上的每一个版本, 用tag标记\n+ 保护分支, 不允许在该分支直接提代码\n+ 稳定长期存在\n\n#### develop分支:\n\n+ 开发分支, 包含所有最新功能和代码, 所有开发基于此分支进行\n+ 保护分支, 不允许直接在该分支提代码\n+ 开发新功能时, 基于最新的develop分支切出自己的feature分支进行\n+ 稳定长期存在\n\n#### feature & fix分支:\n\n+ 新功能分支,  或修复BUG分支, 通常对应Sprint中的一个特定任务\n+ 分支命名用 feature-xxx 或 fix-xxx 开头,且有意义的词汇构成\n+ comment 包含Sprint中对应任务id 及此分支功能描述\n+ 开发完成后, 提交PR(pull request) 到 origin develop分支,  PR merge到develop分支后并删除此分支\n\n#### release分支:\n\n+ 发布分支, 准备上线版本时 使用的分支. \n+ 准备发布新版本时，从develop 切出一个 release 分支，来做发布前的准备\n+ 在修复线上紧急BUG时, 从 master 切出一个 release(hotfix)分支, 来做发布前的准备\n+ release分支 测试发现的bug直接在 release分支进行修复, 上线后 合并至 master 分支 和 develop分支\n+ 上线发布完成后, 可以选择删除release分支\n\n### 操作流程示例\n\n+ 两个长期分支:  master 和 develop.  日常开发中, 逐渐丰富develop分支功能 \n\n<img src=\"./git-0.png\" alt=\"image-20220316161954036\" style=\"zoom:42%;\" />\n\n+ 多人协作开发时,  提交PR前先在本地 pull并rebase最新的远端develop分支,   git pull origin develop --rebase;\n\n<img src=\"./git-1-1.png\" alt=\"image-20220318105311716\" style=\"zoom:35%;\" />\n\n+ 开发过程中准备一些新功能上线. 首先, 团队一起挑选出要上线的commit点\n\n<img src=\"./git-1.png\" alt=\"image-20220316160232302\" style=\"zoom:50%;\" />\n\n+ 从该commit切出release分支 , 发布到UAT环境 并交给测试和业务同事验证功能, 如符合预期 则使用该版本应用包上线. 上线完成后合并至 master 分支.\n\n<img src=\"./git-miss.png\" alt=\"image-20220316160610988\" style=\"zoom:50%;\" />\n\n+ 若该release分支测试时出了问题, 则直接在该分支修复问题. 知道符合预期后 发布生产, 并将新改动合并至master和develop分支.\n\n<img src=\"./git-3.png\" alt=\"image-20220316160903903\" style=\"zoom:50%;\" />\n\n+ 若从develop分支切release分支时, 有不想跟随本次上线的commit, 使用git cherry-pick精确选择要上线的commit, 从而产出符合预期的release分支.\n\n<img src=\"./git-4.png\" alt=\"image-20220316161230112\" style=\"zoom:50%;\" />\n\n+ 当生产环境出现要紧急修复的BUG时, 从线上对应的master分支commit 切出release分支, 修复bug后上线发布, 完成后合并至master和develop.\n\n<img src=\"./git-5.png\" alt=\"image-20220316161359901\" style=\"zoom:50%;\" />\n\n## 设计规范\n\n### 前言\n\n此处谈不上是规范, 希望大家一起探讨,总结出工作中必要的一些设计及文档产出. \n\n+ 比较复杂的需求开始前, 往往需要提前进行方案设计和评审, 那我们要评审些什么?  评审产出什么样的结果?\n  + 评估需求实现的技术方案&细节&可行性 -> 如何描述技术方案?  \n  + 方案带来的改动点 -> 参与方对改动内容达成一致\n  + 不同方案的优缺点&成本 -> 拍板确定实施方案\n  + 优雅的设计细节 -> 保证复用性和拓展性\n  + ...\n+ 代码或项目开发完成后,  如何验证符合预期?  -> 遵循文档约定\n\n### 阿里设计规约\n\n![image-20220318111434810](./design-1.png)\n\n### 本组UML图示例\n\n我们组开发的一个电话系统\n\n#### 1. 一通电话生命周期的状态图:\n\n![image-20220318112715504](./design1.png)\n\n#### 2. 通话发起到接听的时序图\n\n![image-20220318112918395](./design2.png)\n\n#### 3. 与协作方外部系统交互的 活动图\n\n<img src=\"./design3.png\" alt=\"image-20220318113905621\" style=\"zoom:55%;\" />\n\n#### 4. UAT测试环境各个服务间的部署图\n\n![image-20220318113430160](./design4.png)\n\n## 阿里巴巴 Java开发手册解读\n\n手册下载链接: https://github.com/alibaba/p3c\n\n### 难点解读:\n\n示例代码源码:  https://github.com/RobbieXie/p3c_guideline_code_demo\n\n##### 命名规约-9: 【强制】POJO 类中的任何布尔类型的变量，都不要加 is 前缀，否则部分框架解析会引起序列化错误。\n\n```java\npublic class NameGuideline9 {\n\n    public static void main(String[] args) throws JsonProcessingException {\n        Record record = Record.builder()\n                .isDeleted(true)\n                .build();\n\n        ObjectMapper objectMapper = new ObjectMapper();\n        Gson gson = new Gson();\n\n        // jackson默认输出 {\"deleted\":true}\n        System.out.println(objectMapper.writeValueAsString(record));\n        // gson默认输出 {\"isDeleted\":true}\n        System.out.println(gson.toJson(record));\n    }\n\n    @Data\n    @Builder\n    public static class Record {\n        private boolean isDeleted;\n    }\n}\n```\n\n##### 集合规约-2: 【强制】判断所有集合内部的元素是否为空，使用 isEmpty() 方法，而不是 size() == 0 的方式。\n\n```java\n// 在某些集合中，前者的时间复杂度为 O(1)，而且可读性更好。\n// 比如 ConcurrentLinkedQueue\n\n    // size()方法\n    public int size() {\n        int count = 0;\n        for (Node<E> p = first(); p != null; p = succ(p))\n            if (p.item != null)\n                // Collection.size() spec says to max out\n                if (++count == Integer.MAX_VALUE)\n                    break;\n        return count;\n    }\n    \n    // isEmpty()方法\n    public boolean isEmpty() {\n        return peekFirst() == null;\n    }\n```\n\n##### 集合规约-3&4: 【强制】在使用 java.util.stream.Collectors 类的 toMap() 方法转为 Map 集合时，一定要使用参数类型 为 BinaryOperator，参数名为 mergeFunction 的方法，否则当出现相同 key 时会抛出 IllegalStateException 异常。【强制】在使用 java.util.stream.Collectors 类的 toMap() 方法转为 Map 集合时，一定要注意当 value 为 null 时会抛 NPE 异常。\n\n```java\npublic class CollectionGuideline4 {\n\n    public static void main(String[] args) {\n        ArrayList<User> users = Lists.newArrayList(\n                new User(\"xietiandi\", \"male\"),\n                new User(\"xietiandi\", \"male\"),\n                new User(\"xtd\", null)\n        );\n\n        // 因为有重复key value， 会抛出IllegalStateException异常\n        users.stream().collect(Collectors.toMap(User::getName, User::getSex));\n\n        // 因为有value为null的元素， 会抛出NPE\n        users.stream().collect(Collectors.toMap(User::getName, User::getSex, (v1, v2) -> v2));\n\n        // 有重复元素且允许value为null时的正确写法\n        users.stream().collect(HashMap::new,\n                (hashMap, user) -> hashMap.put(user.getName(), user.getSex()),\n                HashMap::putAll).forEach((key, value) -> System.out.println(key + \":\" + value));\n    }\n\n    @AllArgsConstructor\n    @Getter\n    public static class User {\n        private String name;\n        private String sex;\n    }\n}\n```\n\n##### 集合规约-12:  【强制】泛型通配符<? extends T>来接收返回的数据，此写法的泛型集合不能使用 add 方 而<? super T>不能使用 get 方法，两者在接口调用赋值的场景中容易出错。\n\n```java\npublic class CollectionGuideline12 {\n\n    public static void main(String[] args) {\n        List<Animal> animals = new ArrayList<>();\n        List<Dog> dogs = new ArrayList<>();\n        List<Husky> huskies = Lists.newArrayList(new Husky(), new Husky());\n        List<Corgi> corgis = Lists.newArrayList(new Corgi(), new Corgi());\n\n        // addAll 可以将Dog任意子类加入到List<Dog>中\n        addAll(dogs, huskies);\n        addAll(dogs, corgis);\n\n        // addAll 也可以将Dog任意子类加入到List<Animal>中\n        addAll(animals, huskies);\n        addAll(animals, corgis);\n    }\n\n    /**\n     * 将 任何Dog或其子类的List对象 添加到 任何 Dog或其父类的List中\n     *\n     * @param dest\n     * @param src\n     */\n    public static void addAll(List<? super Dog> dest, List<? extends Dog> src) {\n        dest.addAll(src);\n    }\n\n    private static class Animal {}\n    private static class Dog extends Animal {}\n    private static class Husky extends Dog {}\n    private static class Corgi extends Dog {}\n\n}\n```\n\n##### 并发规约-6: 【强制】必须回收自定义的 ThreadLocal 变量，尤其在线程池场景下，线程经常会被复用，如果不清理 自定义的 ThreadLocal 变量，可能会影响后续业务逻辑和造成内存泄露等问题。尽量在代理中使用 try-finally 块进行回收。\n\n+ 注意设置java启动参数 -Xms15m -Xmx15m 限制堆大小15M;\n\n```java\npublic class ConcurrentGuideline6 {\n\n    /**\n     * supplier supplies 5MB buffer\n     */\n    private static final ThreadLocal<ByteBuffer> BYTE_BUFFER_THREAD_LOCAL =\n            ThreadLocal.withInitial(() -> ByteBuffer.allocate(5 * 1024 * 1024));\n\n    private static final ThreadLocal<ByteBuffer> BYTE_BUFFER_THREAD_LOCAL_2 =\n            ThreadLocal.withInitial(() -> ByteBuffer.allocate(5 * 1024 * 1024));\n\n    private static final ThreadLocal<ByteBuffer> BYTE_BUFFER_THREAD_LOCAL_3 =\n            ThreadLocal.withInitial(() -> ByteBuffer.allocate(5 * 1024 * 1024));\n\n    public static void main(String[] args) {\n        System.out.println(\"main-thread...\");\n\n        /**\n         * Runnable1逻辑：\n         * 1. 获取5mb的ThreadLocal1对象值\n         * 2. 打印日志\n         * 3. 线程强制waiting 2秒\n         * 4. 手动清除ThreadLocal\n         */\n        Runnable runnable = () -> {\n            BYTE_BUFFER_THREAD_LOCAL.get();\n            System.out.println(Thread.currentThread().getName() + \"get ByteBuffer 1\");\n            LockSupport.parkNanos(Duration.ofSeconds(2).toNanos());\n            BYTE_BUFFER_THREAD_LOCAL.remove();\n        };\n\n        // Runnable2 获取其他ThreadLocal对象：ThreadLocal2\n        Runnable runnable2 = () -> {\n            BYTE_BUFFER_THREAD_LOCAL_2.get();\n            System.out.println(Thread.currentThread().getName() + \"get ByteBuffer 2\");\n            LockSupport.parkNanos(Duration.ofSeconds(2).toNanos());\n            BYTE_BUFFER_THREAD_LOCAL_2.remove();\n        };\n\n        // Runnable3 获取其他ThreadLocal对象：ThreadLocal3\n        Runnable runnable3 = () -> {\n            BYTE_BUFFER_THREAD_LOCAL_3.get();\n            System.out.println(Thread.currentThread().getName() + \"get ByteBuffer 3\");\n            LockSupport.parkNanos(Duration.ofSeconds(2).toNanos());\n            BYTE_BUFFER_THREAD_LOCAL_3.remove();\n        };\n\n        // 单线程线程池\n        ThreadPoolExecutor threadPoolExecutor =\n                new ThreadPoolExecutor(1, 1, 0L, TimeUnit.SECONDS,\n                        new LinkedBlockingDeque<>(10), Executors.defaultThreadFactory());\n\n        // 在限制heapSize是15M的情况下，如不remove ThreadLocal, 会OOM\n        threadPoolExecutor.execute(runnable);\n        threadPoolExecutor.execute(runnable2);\n        threadPoolExecutor.execute(runnable3);\n    }\n}\n```\n\n","slug":"coding-guidelines","published":1,"date":"2022-03-18T08:51:43.524Z","updated":"2022-03-18T10:33:29.790Z","_id":"cl0vwgxjj0000m79rcb58hdw1","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><ul>\n<li><p>Git分支管理规范</p>\n<ul>\n<li>常用分支说明</li>\n<li>操作流程实例</li>\n</ul>\n</li>\n<li><p>设计规范</p>\n<ul>\n<li><p>前言</p>\n</li>\n<li><p>阿里设计规约</p>\n</li>\n<li><p>本组UML图示例</p>\n</li>\n</ul>\n</li>\n<li><p>阿里巴巴Java开发规范解读</p>\n</li>\n</ul>\n<h2 id=\"Git分支管理规范\"><a href=\"#Git分支管理规范\" class=\"headerlink\" title=\"Git分支管理规范\"></a>Git分支管理规范</h2><h3 id=\"常用分支说明\"><a href=\"#常用分支说明\" class=\"headerlink\" title=\"常用分支说明\"></a>常用分支说明</h3><h4 id=\"master分支\"><a href=\"#master分支\" class=\"headerlink\" title=\"master分支:\"></a>master分支:</h4><ul>\n<li>线上版本分支, 对应线上的每一个版本, 用tag标记</li>\n<li>保护分支, 不允许在该分支直接提代码</li>\n<li>稳定长期存在</li>\n</ul>\n<h4 id=\"develop分支\"><a href=\"#develop分支\" class=\"headerlink\" title=\"develop分支:\"></a>develop分支:</h4><ul>\n<li>开发分支, 包含所有最新功能和代码, 所有开发基于此分支进行</li>\n<li>保护分支, 不允许直接在该分支提代码</li>\n<li>开发新功能时, 基于最新的develop分支切出自己的feature分支进行</li>\n<li>稳定长期存在</li>\n</ul>\n<h4 id=\"feature-amp-fix分支\"><a href=\"#feature-amp-fix分支\" class=\"headerlink\" title=\"feature &amp; fix分支:\"></a>feature &amp; fix分支:</h4><ul>\n<li>新功能分支,  或修复BUG分支, 通常对应Sprint中的一个特定任务</li>\n<li>分支命名用 feature-xxx 或 fix-xxx 开头,且有意义的词汇构成</li>\n<li>comment 包含Sprint中对应任务id 及此分支功能描述</li>\n<li>开发完成后, 提交PR(pull request) 到 origin develop分支,  PR merge到develop分支后并删除此分支</li>\n</ul>\n<h4 id=\"release分支\"><a href=\"#release分支\" class=\"headerlink\" title=\"release分支:\"></a>release分支:</h4><ul>\n<li>发布分支, 准备上线版本时 使用的分支. </li>\n<li>准备发布新版本时，从develop 切出一个 release 分支，来做发布前的准备</li>\n<li>在修复线上紧急BUG时, 从 master 切出一个 release(hotfix)分支, 来做发布前的准备</li>\n<li>release分支 测试发现的bug直接在 release分支进行修复, 上线后 合并至 master 分支 和 develop分支</li>\n<li>上线发布完成后, 可以选择删除release分支</li>\n</ul>\n<h3 id=\"操作流程示例\"><a href=\"#操作流程示例\" class=\"headerlink\" title=\"操作流程示例\"></a>操作流程示例</h3><ul>\n<li>两个长期分支:  master 和 develop.  日常开发中, 逐渐丰富develop分支功能 </li>\n</ul>\n<img src=\"./git-0.png\" alt=\"image-20220316161954036\" style=\"zoom:42%;\" />\n\n<ul>\n<li>多人协作开发时,  提交PR前先在本地 pull并rebase最新的远端develop分支,   git pull origin develop –rebase;</li>\n</ul>\n<img src=\"./git-1-1.png\" alt=\"image-20220318105311716\" style=\"zoom:35%;\" />\n\n<ul>\n<li>开发过程中准备一些新功能上线. 首先, 团队一起挑选出要上线的commit点</li>\n</ul>\n<img src=\"./git-1.png\" alt=\"image-20220316160232302\" style=\"zoom:50%;\" />\n\n<ul>\n<li>从该commit切出release分支 , 发布到UAT环境 并交给测试和业务同事验证功能, 如符合预期 则使用该版本应用包上线. 上线完成后合并至 master 分支.</li>\n</ul>\n<img src=\"./git-miss.png\" alt=\"image-20220316160610988\" style=\"zoom:50%;\" />\n\n<ul>\n<li>若该release分支测试时出了问题, 则直接在该分支修复问题. 知道符合预期后 发布生产, 并将新改动合并至master和develop分支.</li>\n</ul>\n<img src=\"./git-3.png\" alt=\"image-20220316160903903\" style=\"zoom:50%;\" />\n\n<ul>\n<li>若从develop分支切release分支时, 有不想跟随本次上线的commit, 使用git cherry-pick精确选择要上线的commit, 从而产出符合预期的release分支.</li>\n</ul>\n<img src=\"./git-4.png\" alt=\"image-20220316161230112\" style=\"zoom:50%;\" />\n\n<ul>\n<li>当生产环境出现要紧急修复的BUG时, 从线上对应的master分支commit 切出release分支, 修复bug后上线发布, 完成后合并至master和develop.</li>\n</ul>\n<img src=\"./git-5.png\" alt=\"image-20220316161359901\" style=\"zoom:50%;\" />\n\n<h2 id=\"设计规范\"><a href=\"#设计规范\" class=\"headerlink\" title=\"设计规范\"></a>设计规范</h2><h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>此处谈不上是规范, 希望大家一起探讨,总结出工作中必要的一些设计及文档产出. </p>\n<ul>\n<li>比较复杂的需求开始前, 往往需要提前进行方案设计和评审, 那我们要评审些什么?  评审产出什么样的结果?<ul>\n<li>评估需求实现的技术方案&amp;细节&amp;可行性 -&gt; 如何描述技术方案?  </li>\n<li>方案带来的改动点 -&gt; 参与方对改动内容达成一致</li>\n<li>不同方案的优缺点&amp;成本 -&gt; 拍板确定实施方案</li>\n<li>优雅的设计细节 -&gt; 保证复用性和拓展性</li>\n<li>…</li>\n</ul>\n</li>\n<li>代码或项目开发完成后,  如何验证符合预期?  -&gt; 遵循文档约定</li>\n</ul>\n<h3 id=\"阿里设计规约\"><a href=\"#阿里设计规约\" class=\"headerlink\" title=\"阿里设计规约\"></a>阿里设计规约</h3><img src=\"/2022/03/18/coding-guidelines/design-1.png\" class=\"\" title=\"image-20220318111434810\">\n\n<h3 id=\"本组UML图示例\"><a href=\"#本组UML图示例\" class=\"headerlink\" title=\"本组UML图示例\"></a>本组UML图示例</h3><p>我们组开发的一个电话系统</p>\n<h4 id=\"1-一通电话生命周期的状态图\"><a href=\"#1-一通电话生命周期的状态图\" class=\"headerlink\" title=\"1. 一通电话生命周期的状态图:\"></a>1. 一通电话生命周期的状态图:</h4><img src=\"/2022/03/18/coding-guidelines/design1.png\" class=\"\" title=\"image-20220318112715504\">\n\n<h4 id=\"2-通话发起到接听的时序图\"><a href=\"#2-通话发起到接听的时序图\" class=\"headerlink\" title=\"2. 通话发起到接听的时序图\"></a>2. 通话发起到接听的时序图</h4><img src=\"/2022/03/18/coding-guidelines/design2.png\" class=\"\" title=\"image-20220318112918395\">\n\n<h4 id=\"3-与协作方外部系统交互的-活动图\"><a href=\"#3-与协作方外部系统交互的-活动图\" class=\"headerlink\" title=\"3. 与协作方外部系统交互的 活动图\"></a>3. 与协作方外部系统交互的 活动图</h4><img src=\"./design3.png\" alt=\"image-20220318113905621\" style=\"zoom:55%;\" />\n\n<h4 id=\"4-UAT测试环境各个服务间的部署图\"><a href=\"#4-UAT测试环境各个服务间的部署图\" class=\"headerlink\" title=\"4. UAT测试环境各个服务间的部署图\"></a>4. UAT测试环境各个服务间的部署图</h4><img src=\"/2022/03/18/coding-guidelines/design4.png\" class=\"\" title=\"image-20220318113430160\">\n\n<h2 id=\"阿里巴巴-Java开发手册解读\"><a href=\"#阿里巴巴-Java开发手册解读\" class=\"headerlink\" title=\"阿里巴巴 Java开发手册解读\"></a>阿里巴巴 Java开发手册解读</h2><p>手册下载链接: <a href=\"https://github.com/alibaba/p3c\">https://github.com/alibaba/p3c</a></p>\n<h3 id=\"难点解读\"><a href=\"#难点解读\" class=\"headerlink\" title=\"难点解读:\"></a>难点解读:</h3><p>示例代码源码:  <a href=\"https://github.com/RobbieXie/p3c_guideline_code_demo\">https://github.com/RobbieXie/p3c_guideline_code_demo</a></p>\n<h5 id=\"命名规约-9-【强制】POJO-类中的任何布尔类型的变量，都不要加-is-前缀，否则部分框架解析会引起序列化错误。\"><a href=\"#命名规约-9-【强制】POJO-类中的任何布尔类型的变量，都不要加-is-前缀，否则部分框架解析会引起序列化错误。\" class=\"headerlink\" title=\"命名规约-9: 【强制】POJO 类中的任何布尔类型的变量，都不要加 is 前缀，否则部分框架解析会引起序列化错误。\"></a>命名规约-9: 【强制】POJO 类中的任何布尔类型的变量，都不要加 is 前缀，否则部分框架解析会引起序列化错误。</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">NameGuideline9</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> JsonProcessingException &#123;</span><br><span class=\"line\">        <span class=\"type\">Record</span> <span class=\"variable\">record</span> <span class=\"operator\">=</span> Record.builder()</span><br><span class=\"line\">                .isDeleted(<span class=\"literal\">true</span>)</span><br><span class=\"line\">                .build();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">ObjectMapper</span> <span class=\"variable\">objectMapper</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ObjectMapper</span>();</span><br><span class=\"line\">        <span class=\"type\">Gson</span> <span class=\"variable\">gson</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Gson</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// jackson默认输出 &#123;&quot;deleted&quot;:true&#125;</span></span><br><span class=\"line\">        System.out.println(objectMapper.writeValueAsString(record));</span><br><span class=\"line\">        <span class=\"comment\">// gson默认输出 &#123;&quot;isDeleted&quot;:true&#125;</span></span><br><span class=\"line\">        System.out.println(gson.toJson(record));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Data</span></span><br><span class=\"line\">    <span class=\"meta\">@Builder</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Record</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"type\">boolean</span> isDeleted;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"集合规约-2-【强制】判断所有集合内部的元素是否为空，使用-isEmpty-方法，而不是-size-0-的方式。\"><a href=\"#集合规约-2-【强制】判断所有集合内部的元素是否为空，使用-isEmpty-方法，而不是-size-0-的方式。\" class=\"headerlink\" title=\"集合规约-2: 【强制】判断所有集合内部的元素是否为空，使用 isEmpty() 方法，而不是 size() == 0 的方式。\"></a>集合规约-2: 【强制】判断所有集合内部的元素是否为空，使用 isEmpty() 方法，而不是 size() == 0 的方式。</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 在某些集合中，前者的时间复杂度为 O(1)，而且可读性更好。</span></span><br><span class=\"line\"><span class=\"comment\">// 比如 ConcurrentLinkedQueue</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// size()方法</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">size</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">count</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Node&lt;E&gt; p = first(); p != <span class=\"literal\">null</span>; p = succ(p))</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (p.item != <span class=\"literal\">null</span>)</span><br><span class=\"line\">                <span class=\"comment\">// Collection.size() spec says to max out</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (++count == Integer.MAX_VALUE)</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> count;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// isEmpty()方法</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isEmpty</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> peekFirst() == <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"集合规约-3-amp-4-【强制】在使用-java-util-stream-Collectors-类的-toMap-方法转为-Map-集合时，一定要使用参数类型-为-BinaryOperator，参数名为-mergeFunction-的方法，否则当出现相同-key-时会抛出-IllegalStateException-异常。【强制】在使用-java-util-stream-Collectors-类的-toMap-方法转为-Map-集合时，一定要注意当-value-为-null-时会抛-NPE-异常。\"><a href=\"#集合规约-3-amp-4-【强制】在使用-java-util-stream-Collectors-类的-toMap-方法转为-Map-集合时，一定要使用参数类型-为-BinaryOperator，参数名为-mergeFunction-的方法，否则当出现相同-key-时会抛出-IllegalStateException-异常。【强制】在使用-java-util-stream-Collectors-类的-toMap-方法转为-Map-集合时，一定要注意当-value-为-null-时会抛-NPE-异常。\" class=\"headerlink\" title=\"集合规约-3&amp;4: 【强制】在使用 java.util.stream.Collectors 类的 toMap() 方法转为 Map 集合时，一定要使用参数类型 为 BinaryOperator，参数名为 mergeFunction 的方法，否则当出现相同 key 时会抛出 IllegalStateException 异常。【强制】在使用 java.util.stream.Collectors 类的 toMap() 方法转为 Map 集合时，一定要注意当 value 为 null 时会抛 NPE 异常。\"></a>集合规约-3&amp;4: 【强制】在使用 java.util.stream.Collectors 类的 toMap() 方法转为 Map 集合时，一定要使用参数类型 为 BinaryOperator，参数名为 mergeFunction 的方法，否则当出现相同 key 时会抛出 IllegalStateException 异常。【强制】在使用 java.util.stream.Collectors 类的 toMap() 方法转为 Map 集合时，一定要注意当 value 为 null 时会抛 NPE 异常。</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">CollectionGuideline4</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        ArrayList&lt;User&gt; users = Lists.newArrayList(</span><br><span class=\"line\">                <span class=\"keyword\">new</span> <span class=\"title class_\">User</span>(<span class=\"string\">&quot;xietiandi&quot;</span>, <span class=\"string\">&quot;male&quot;</span>),</span><br><span class=\"line\">                <span class=\"keyword\">new</span> <span class=\"title class_\">User</span>(<span class=\"string\">&quot;xietiandi&quot;</span>, <span class=\"string\">&quot;male&quot;</span>),</span><br><span class=\"line\">                <span class=\"keyword\">new</span> <span class=\"title class_\">User</span>(<span class=\"string\">&quot;xtd&quot;</span>, <span class=\"literal\">null</span>)</span><br><span class=\"line\">        );</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 因为有重复key value， 会抛出IllegalStateException异常</span></span><br><span class=\"line\">        users.stream().collect(Collectors.toMap(User::getName, User::getSex));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 因为有value为null的元素， 会抛出NPE</span></span><br><span class=\"line\">        users.stream().collect(Collectors.toMap(User::getName, User::getSex, (v1, v2) -&gt; v2));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 有重复元素且允许value为null时的正确写法</span></span><br><span class=\"line\">        users.stream().collect(HashMap::<span class=\"keyword\">new</span>,</span><br><span class=\"line\">                (hashMap, user) -&gt; hashMap.put(user.getName(), user.getSex()),</span><br><span class=\"line\">                HashMap::putAll).forEach((key, value) -&gt; System.out.println(key + <span class=\"string\">&quot;:&quot;</span> + value));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@AllArgsConstructor</span></span><br><span class=\"line\">    <span class=\"meta\">@Getter</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">User</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> String sex;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"集合规约-12-【强制】泛型通配符-lt-extends-T-gt-来接收返回的数据，此写法的泛型集合不能使用-add-方-而-lt-super-T-gt-不能使用-get-方法，两者在接口调用赋值的场景中容易出错。\"><a href=\"#集合规约-12-【强制】泛型通配符-lt-extends-T-gt-来接收返回的数据，此写法的泛型集合不能使用-add-方-而-lt-super-T-gt-不能使用-get-方法，两者在接口调用赋值的场景中容易出错。\" class=\"headerlink\" title=\"集合规约-12:  【强制】泛型通配符&lt;? extends T&gt;来接收返回的数据，此写法的泛型集合不能使用 add 方 而&lt;? super T&gt;不能使用 get 方法，两者在接口调用赋值的场景中容易出错。\"></a>集合规约-12:  【强制】泛型通配符&lt;? extends T&gt;来接收返回的数据，此写法的泛型集合不能使用 add 方 而&lt;? super T&gt;不能使用 get 方法，两者在接口调用赋值的场景中容易出错。</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">CollectionGuideline12</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        List&lt;Animal&gt; animals = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">        List&lt;Dog&gt; dogs = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">        List&lt;Husky&gt; huskies = Lists.newArrayList(<span class=\"keyword\">new</span> <span class=\"title class_\">Husky</span>(), <span class=\"keyword\">new</span> <span class=\"title class_\">Husky</span>());</span><br><span class=\"line\">        List&lt;Corgi&gt; corgis = Lists.newArrayList(<span class=\"keyword\">new</span> <span class=\"title class_\">Corgi</span>(), <span class=\"keyword\">new</span> <span class=\"title class_\">Corgi</span>());</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// addAll 可以将Dog任意子类加入到List&lt;Dog&gt;中</span></span><br><span class=\"line\">        addAll(dogs, huskies);</span><br><span class=\"line\">        addAll(dogs, corgis);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// addAll 也可以将Dog任意子类加入到List&lt;Animal&gt;中</span></span><br><span class=\"line\">        addAll(animals, huskies);</span><br><span class=\"line\">        addAll(animals, corgis);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 将 任何Dog或其子类的List对象 添加到 任何 Dog或其父类的List中</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> dest</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> src</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">addAll</span><span class=\"params\">(List&lt;? <span class=\"built_in\">super</span> Dog&gt; dest, List&lt;? extends Dog&gt; src)</span> &#123;</span><br><span class=\"line\">        dest.addAll(src);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Animal</span> &#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Dog</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Animal</span> &#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Husky</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Dog</span> &#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Corgi</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Dog</span> &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"并发规约-6-【强制】必须回收自定义的-ThreadLocal-变量，尤其在线程池场景下，线程经常会被复用，如果不清理-自定义的-ThreadLocal-变量，可能会影响后续业务逻辑和造成内存泄露等问题。尽量在代理中使用-try-finally-块进行回收。\"><a href=\"#并发规约-6-【强制】必须回收自定义的-ThreadLocal-变量，尤其在线程池场景下，线程经常会被复用，如果不清理-自定义的-ThreadLocal-变量，可能会影响后续业务逻辑和造成内存泄露等问题。尽量在代理中使用-try-finally-块进行回收。\" class=\"headerlink\" title=\"并发规约-6: 【强制】必须回收自定义的 ThreadLocal 变量，尤其在线程池场景下，线程经常会被复用，如果不清理 自定义的 ThreadLocal 变量，可能会影响后续业务逻辑和造成内存泄露等问题。尽量在代理中使用 try-finally 块进行回收。\"></a>并发规约-6: 【强制】必须回收自定义的 ThreadLocal 变量，尤其在线程池场景下，线程经常会被复用，如果不清理 自定义的 ThreadLocal 变量，可能会影响后续业务逻辑和造成内存泄露等问题。尽量在代理中使用 try-finally 块进行回收。</h5><ul>\n<li>注意设置java启动参数 -Xms15m -Xmx15m 限制堆大小15M;</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ConcurrentGuideline6</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * supplier supplies 5MB buffer</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> ThreadLocal&lt;ByteBuffer&gt; BYTE_BUFFER_THREAD_LOCAL =</span><br><span class=\"line\">            ThreadLocal.withInitial(() -&gt; ByteBuffer.allocate(<span class=\"number\">5</span> * <span class=\"number\">1024</span> * <span class=\"number\">1024</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> ThreadLocal&lt;ByteBuffer&gt; BYTE_BUFFER_THREAD_LOCAL_2 =</span><br><span class=\"line\">            ThreadLocal.withInitial(() -&gt; ByteBuffer.allocate(<span class=\"number\">5</span> * <span class=\"number\">1024</span> * <span class=\"number\">1024</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> ThreadLocal&lt;ByteBuffer&gt; BYTE_BUFFER_THREAD_LOCAL_3 =</span><br><span class=\"line\">            ThreadLocal.withInitial(() -&gt; ByteBuffer.allocate(<span class=\"number\">5</span> * <span class=\"number\">1024</span> * <span class=\"number\">1024</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;main-thread...&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * Runnable1逻辑：</span></span><br><span class=\"line\"><span class=\"comment\">         * 1. 获取5mb的ThreadLocal1对象值</span></span><br><span class=\"line\"><span class=\"comment\">         * 2. 打印日志</span></span><br><span class=\"line\"><span class=\"comment\">         * 3. 线程强制waiting 2秒</span></span><br><span class=\"line\"><span class=\"comment\">         * 4. 手动清除ThreadLocal</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        <span class=\"type\">Runnable</span> <span class=\"variable\">runnable</span> <span class=\"operator\">=</span> () -&gt; &#123;</span><br><span class=\"line\">            BYTE_BUFFER_THREAD_LOCAL.get();</span><br><span class=\"line\">            System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot;get ByteBuffer 1&quot;</span>);</span><br><span class=\"line\">            LockSupport.parkNanos(Duration.ofSeconds(<span class=\"number\">2</span>).toNanos());</span><br><span class=\"line\">            BYTE_BUFFER_THREAD_LOCAL.remove();</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// Runnable2 获取其他ThreadLocal对象：ThreadLocal2</span></span><br><span class=\"line\">        <span class=\"type\">Runnable</span> <span class=\"variable\">runnable2</span> <span class=\"operator\">=</span> () -&gt; &#123;</span><br><span class=\"line\">            BYTE_BUFFER_THREAD_LOCAL_2.get();</span><br><span class=\"line\">            System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot;get ByteBuffer 2&quot;</span>);</span><br><span class=\"line\">            LockSupport.parkNanos(Duration.ofSeconds(<span class=\"number\">2</span>).toNanos());</span><br><span class=\"line\">            BYTE_BUFFER_THREAD_LOCAL_2.remove();</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// Runnable3 获取其他ThreadLocal对象：ThreadLocal3</span></span><br><span class=\"line\">        <span class=\"type\">Runnable</span> <span class=\"variable\">runnable3</span> <span class=\"operator\">=</span> () -&gt; &#123;</span><br><span class=\"line\">            BYTE_BUFFER_THREAD_LOCAL_3.get();</span><br><span class=\"line\">            System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot;get ByteBuffer 3&quot;</span>);</span><br><span class=\"line\">            LockSupport.parkNanos(Duration.ofSeconds(<span class=\"number\">2</span>).toNanos());</span><br><span class=\"line\">            BYTE_BUFFER_THREAD_LOCAL_3.remove();</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 单线程线程池</span></span><br><span class=\"line\">        <span class=\"type\">ThreadPoolExecutor</span> <span class=\"variable\">threadPoolExecutor</span> <span class=\"operator\">=</span></span><br><span class=\"line\">                <span class=\"keyword\">new</span> <span class=\"title class_\">ThreadPoolExecutor</span>(<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">0L</span>, TimeUnit.SECONDS,</span><br><span class=\"line\">                        <span class=\"keyword\">new</span> <span class=\"title class_\">LinkedBlockingDeque</span>&lt;&gt;(<span class=\"number\">10</span>), Executors.defaultThreadFactory());</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 在限制heapSize是15M的情况下，如不remove ThreadLocal, 会OOM</span></span><br><span class=\"line\">        threadPoolExecutor.execute(runnable);</span><br><span class=\"line\">        threadPoolExecutor.execute(runnable2);</span><br><span class=\"line\">        threadPoolExecutor.execute(runnable3);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><ul>\n<li><p>Git分支管理规范</p>\n<ul>\n<li>常用分支说明</li>\n<li>操作流程实例</li>\n</ul>\n</li>\n<li><p>设计规范</p>\n<ul>\n<li><p>前言</p>\n</li>\n<li><p>阿里设计规约</p>\n</li>\n<li><p>本组UML图示例</p>\n</li>\n</ul>\n</li>\n<li><p>阿里巴巴Java开发规范解读</p>\n</li>\n</ul>\n<h2 id=\"Git分支管理规范\"><a href=\"#Git分支管理规范\" class=\"headerlink\" title=\"Git分支管理规范\"></a>Git分支管理规范</h2><h3 id=\"常用分支说明\"><a href=\"#常用分支说明\" class=\"headerlink\" title=\"常用分支说明\"></a>常用分支说明</h3><h4 id=\"master分支\"><a href=\"#master分支\" class=\"headerlink\" title=\"master分支:\"></a>master分支:</h4><ul>\n<li>线上版本分支, 对应线上的每一个版本, 用tag标记</li>\n<li>保护分支, 不允许在该分支直接提代码</li>\n<li>稳定长期存在</li>\n</ul>\n<h4 id=\"develop分支\"><a href=\"#develop分支\" class=\"headerlink\" title=\"develop分支:\"></a>develop分支:</h4><ul>\n<li>开发分支, 包含所有最新功能和代码, 所有开发基于此分支进行</li>\n<li>保护分支, 不允许直接在该分支提代码</li>\n<li>开发新功能时, 基于最新的develop分支切出自己的feature分支进行</li>\n<li>稳定长期存在</li>\n</ul>\n<h4 id=\"feature-amp-fix分支\"><a href=\"#feature-amp-fix分支\" class=\"headerlink\" title=\"feature &amp; fix分支:\"></a>feature &amp; fix分支:</h4><ul>\n<li>新功能分支,  或修复BUG分支, 通常对应Sprint中的一个特定任务</li>\n<li>分支命名用 feature-xxx 或 fix-xxx 开头,且有意义的词汇构成</li>\n<li>comment 包含Sprint中对应任务id 及此分支功能描述</li>\n<li>开发完成后, 提交PR(pull request) 到 origin develop分支,  PR merge到develop分支后并删除此分支</li>\n</ul>\n<h4 id=\"release分支\"><a href=\"#release分支\" class=\"headerlink\" title=\"release分支:\"></a>release分支:</h4><ul>\n<li>发布分支, 准备上线版本时 使用的分支. </li>\n<li>准备发布新版本时，从develop 切出一个 release 分支，来做发布前的准备</li>\n<li>在修复线上紧急BUG时, 从 master 切出一个 release(hotfix)分支, 来做发布前的准备</li>\n<li>release分支 测试发现的bug直接在 release分支进行修复, 上线后 合并至 master 分支 和 develop分支</li>\n<li>上线发布完成后, 可以选择删除release分支</li>\n</ul>\n<h3 id=\"操作流程示例\"><a href=\"#操作流程示例\" class=\"headerlink\" title=\"操作流程示例\"></a>操作流程示例</h3><ul>\n<li>两个长期分支:  master 和 develop.  日常开发中, 逐渐丰富develop分支功能 </li>\n</ul>\n<img src=\"./git-0.png\" alt=\"image-20220316161954036\" style=\"zoom:42%;\" />\n\n<ul>\n<li>多人协作开发时,  提交PR前先在本地 pull并rebase最新的远端develop分支,   git pull origin develop –rebase;</li>\n</ul>\n<img src=\"./git-1-1.png\" alt=\"image-20220318105311716\" style=\"zoom:35%;\" />\n\n<ul>\n<li>开发过程中准备一些新功能上线. 首先, 团队一起挑选出要上线的commit点</li>\n</ul>\n<img src=\"./git-1.png\" alt=\"image-20220316160232302\" style=\"zoom:50%;\" />\n\n<ul>\n<li>从该commit切出release分支 , 发布到UAT环境 并交给测试和业务同事验证功能, 如符合预期 则使用该版本应用包上线. 上线完成后合并至 master 分支.</li>\n</ul>\n<img src=\"./git-miss.png\" alt=\"image-20220316160610988\" style=\"zoom:50%;\" />\n\n<ul>\n<li>若该release分支测试时出了问题, 则直接在该分支修复问题. 知道符合预期后 发布生产, 并将新改动合并至master和develop分支.</li>\n</ul>\n<img src=\"./git-3.png\" alt=\"image-20220316160903903\" style=\"zoom:50%;\" />\n\n<ul>\n<li>若从develop分支切release分支时, 有不想跟随本次上线的commit, 使用git cherry-pick精确选择要上线的commit, 从而产出符合预期的release分支.</li>\n</ul>\n<img src=\"./git-4.png\" alt=\"image-20220316161230112\" style=\"zoom:50%;\" />\n\n<ul>\n<li>当生产环境出现要紧急修复的BUG时, 从线上对应的master分支commit 切出release分支, 修复bug后上线发布, 完成后合并至master和develop.</li>\n</ul>\n<img src=\"./git-5.png\" alt=\"image-20220316161359901\" style=\"zoom:50%;\" />\n\n<h2 id=\"设计规范\"><a href=\"#设计规范\" class=\"headerlink\" title=\"设计规范\"></a>设计规范</h2><h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>此处谈不上是规范, 希望大家一起探讨,总结出工作中必要的一些设计及文档产出. </p>\n<ul>\n<li>比较复杂的需求开始前, 往往需要提前进行方案设计和评审, 那我们要评审些什么?  评审产出什么样的结果?<ul>\n<li>评估需求实现的技术方案&amp;细节&amp;可行性 -&gt; 如何描述技术方案?  </li>\n<li>方案带来的改动点 -&gt; 参与方对改动内容达成一致</li>\n<li>不同方案的优缺点&amp;成本 -&gt; 拍板确定实施方案</li>\n<li>优雅的设计细节 -&gt; 保证复用性和拓展性</li>\n<li>…</li>\n</ul>\n</li>\n<li>代码或项目开发完成后,  如何验证符合预期?  -&gt; 遵循文档约定</li>\n</ul>\n<h3 id=\"阿里设计规约\"><a href=\"#阿里设计规约\" class=\"headerlink\" title=\"阿里设计规约\"></a>阿里设计规约</h3><img src=\"/2022/03/18/coding-guidelines/design-1.png\" class=\"\" title=\"image-20220318111434810\">\n\n<h3 id=\"本组UML图示例\"><a href=\"#本组UML图示例\" class=\"headerlink\" title=\"本组UML图示例\"></a>本组UML图示例</h3><p>我们组开发的一个电话系统</p>\n<h4 id=\"1-一通电话生命周期的状态图\"><a href=\"#1-一通电话生命周期的状态图\" class=\"headerlink\" title=\"1. 一通电话生命周期的状态图:\"></a>1. 一通电话生命周期的状态图:</h4><img src=\"/2022/03/18/coding-guidelines/design1.png\" class=\"\" title=\"image-20220318112715504\">\n\n<h4 id=\"2-通话发起到接听的时序图\"><a href=\"#2-通话发起到接听的时序图\" class=\"headerlink\" title=\"2. 通话发起到接听的时序图\"></a>2. 通话发起到接听的时序图</h4><img src=\"/2022/03/18/coding-guidelines/design2.png\" class=\"\" title=\"image-20220318112918395\">\n\n<h4 id=\"3-与协作方外部系统交互的-活动图\"><a href=\"#3-与协作方外部系统交互的-活动图\" class=\"headerlink\" title=\"3. 与协作方外部系统交互的 活动图\"></a>3. 与协作方外部系统交互的 活动图</h4><img src=\"./design3.png\" alt=\"image-20220318113905621\" style=\"zoom:55%;\" />\n\n<h4 id=\"4-UAT测试环境各个服务间的部署图\"><a href=\"#4-UAT测试环境各个服务间的部署图\" class=\"headerlink\" title=\"4. UAT测试环境各个服务间的部署图\"></a>4. UAT测试环境各个服务间的部署图</h4><img src=\"/2022/03/18/coding-guidelines/design4.png\" class=\"\" title=\"image-20220318113430160\">\n\n<h2 id=\"阿里巴巴-Java开发手册解读\"><a href=\"#阿里巴巴-Java开发手册解读\" class=\"headerlink\" title=\"阿里巴巴 Java开发手册解读\"></a>阿里巴巴 Java开发手册解读</h2><p>手册下载链接: <a href=\"https://github.com/alibaba/p3c\">https://github.com/alibaba/p3c</a></p>\n<h3 id=\"难点解读\"><a href=\"#难点解读\" class=\"headerlink\" title=\"难点解读:\"></a>难点解读:</h3><p>示例代码源码:  <a href=\"https://github.com/RobbieXie/p3c_guideline_code_demo\">https://github.com/RobbieXie/p3c_guideline_code_demo</a></p>\n<h5 id=\"命名规约-9-【强制】POJO-类中的任何布尔类型的变量，都不要加-is-前缀，否则部分框架解析会引起序列化错误。\"><a href=\"#命名规约-9-【强制】POJO-类中的任何布尔类型的变量，都不要加-is-前缀，否则部分框架解析会引起序列化错误。\" class=\"headerlink\" title=\"命名规约-9: 【强制】POJO 类中的任何布尔类型的变量，都不要加 is 前缀，否则部分框架解析会引起序列化错误。\"></a>命名规约-9: 【强制】POJO 类中的任何布尔类型的变量，都不要加 is 前缀，否则部分框架解析会引起序列化错误。</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">NameGuideline9</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> JsonProcessingException &#123;</span><br><span class=\"line\">        <span class=\"type\">Record</span> <span class=\"variable\">record</span> <span class=\"operator\">=</span> Record.builder()</span><br><span class=\"line\">                .isDeleted(<span class=\"literal\">true</span>)</span><br><span class=\"line\">                .build();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">ObjectMapper</span> <span class=\"variable\">objectMapper</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ObjectMapper</span>();</span><br><span class=\"line\">        <span class=\"type\">Gson</span> <span class=\"variable\">gson</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Gson</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// jackson默认输出 &#123;&quot;deleted&quot;:true&#125;</span></span><br><span class=\"line\">        System.out.println(objectMapper.writeValueAsString(record));</span><br><span class=\"line\">        <span class=\"comment\">// gson默认输出 &#123;&quot;isDeleted&quot;:true&#125;</span></span><br><span class=\"line\">        System.out.println(gson.toJson(record));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Data</span></span><br><span class=\"line\">    <span class=\"meta\">@Builder</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Record</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"type\">boolean</span> isDeleted;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"集合规约-2-【强制】判断所有集合内部的元素是否为空，使用-isEmpty-方法，而不是-size-0-的方式。\"><a href=\"#集合规约-2-【强制】判断所有集合内部的元素是否为空，使用-isEmpty-方法，而不是-size-0-的方式。\" class=\"headerlink\" title=\"集合规约-2: 【强制】判断所有集合内部的元素是否为空，使用 isEmpty() 方法，而不是 size() == 0 的方式。\"></a>集合规约-2: 【强制】判断所有集合内部的元素是否为空，使用 isEmpty() 方法，而不是 size() == 0 的方式。</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 在某些集合中，前者的时间复杂度为 O(1)，而且可读性更好。</span></span><br><span class=\"line\"><span class=\"comment\">// 比如 ConcurrentLinkedQueue</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// size()方法</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">size</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">count</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Node&lt;E&gt; p = first(); p != <span class=\"literal\">null</span>; p = succ(p))</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (p.item != <span class=\"literal\">null</span>)</span><br><span class=\"line\">                <span class=\"comment\">// Collection.size() spec says to max out</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (++count == Integer.MAX_VALUE)</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> count;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// isEmpty()方法</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isEmpty</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> peekFirst() == <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"集合规约-3-amp-4-【强制】在使用-java-util-stream-Collectors-类的-toMap-方法转为-Map-集合时，一定要使用参数类型-为-BinaryOperator，参数名为-mergeFunction-的方法，否则当出现相同-key-时会抛出-IllegalStateException-异常。【强制】在使用-java-util-stream-Collectors-类的-toMap-方法转为-Map-集合时，一定要注意当-value-为-null-时会抛-NPE-异常。\"><a href=\"#集合规约-3-amp-4-【强制】在使用-java-util-stream-Collectors-类的-toMap-方法转为-Map-集合时，一定要使用参数类型-为-BinaryOperator，参数名为-mergeFunction-的方法，否则当出现相同-key-时会抛出-IllegalStateException-异常。【强制】在使用-java-util-stream-Collectors-类的-toMap-方法转为-Map-集合时，一定要注意当-value-为-null-时会抛-NPE-异常。\" class=\"headerlink\" title=\"集合规约-3&amp;4: 【强制】在使用 java.util.stream.Collectors 类的 toMap() 方法转为 Map 集合时，一定要使用参数类型 为 BinaryOperator，参数名为 mergeFunction 的方法，否则当出现相同 key 时会抛出 IllegalStateException 异常。【强制】在使用 java.util.stream.Collectors 类的 toMap() 方法转为 Map 集合时，一定要注意当 value 为 null 时会抛 NPE 异常。\"></a>集合规约-3&amp;4: 【强制】在使用 java.util.stream.Collectors 类的 toMap() 方法转为 Map 集合时，一定要使用参数类型 为 BinaryOperator，参数名为 mergeFunction 的方法，否则当出现相同 key 时会抛出 IllegalStateException 异常。【强制】在使用 java.util.stream.Collectors 类的 toMap() 方法转为 Map 集合时，一定要注意当 value 为 null 时会抛 NPE 异常。</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">CollectionGuideline4</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        ArrayList&lt;User&gt; users = Lists.newArrayList(</span><br><span class=\"line\">                <span class=\"keyword\">new</span> <span class=\"title class_\">User</span>(<span class=\"string\">&quot;xietiandi&quot;</span>, <span class=\"string\">&quot;male&quot;</span>),</span><br><span class=\"line\">                <span class=\"keyword\">new</span> <span class=\"title class_\">User</span>(<span class=\"string\">&quot;xietiandi&quot;</span>, <span class=\"string\">&quot;male&quot;</span>),</span><br><span class=\"line\">                <span class=\"keyword\">new</span> <span class=\"title class_\">User</span>(<span class=\"string\">&quot;xtd&quot;</span>, <span class=\"literal\">null</span>)</span><br><span class=\"line\">        );</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 因为有重复key value， 会抛出IllegalStateException异常</span></span><br><span class=\"line\">        users.stream().collect(Collectors.toMap(User::getName, User::getSex));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 因为有value为null的元素， 会抛出NPE</span></span><br><span class=\"line\">        users.stream().collect(Collectors.toMap(User::getName, User::getSex, (v1, v2) -&gt; v2));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 有重复元素且允许value为null时的正确写法</span></span><br><span class=\"line\">        users.stream().collect(HashMap::<span class=\"keyword\">new</span>,</span><br><span class=\"line\">                (hashMap, user) -&gt; hashMap.put(user.getName(), user.getSex()),</span><br><span class=\"line\">                HashMap::putAll).forEach((key, value) -&gt; System.out.println(key + <span class=\"string\">&quot;:&quot;</span> + value));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@AllArgsConstructor</span></span><br><span class=\"line\">    <span class=\"meta\">@Getter</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">User</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> String sex;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"集合规约-12-【强制】泛型通配符-lt-extends-T-gt-来接收返回的数据，此写法的泛型集合不能使用-add-方-而-lt-super-T-gt-不能使用-get-方法，两者在接口调用赋值的场景中容易出错。\"><a href=\"#集合规约-12-【强制】泛型通配符-lt-extends-T-gt-来接收返回的数据，此写法的泛型集合不能使用-add-方-而-lt-super-T-gt-不能使用-get-方法，两者在接口调用赋值的场景中容易出错。\" class=\"headerlink\" title=\"集合规约-12:  【强制】泛型通配符&lt;? extends T&gt;来接收返回的数据，此写法的泛型集合不能使用 add 方 而&lt;? super T&gt;不能使用 get 方法，两者在接口调用赋值的场景中容易出错。\"></a>集合规约-12:  【强制】泛型通配符&lt;? extends T&gt;来接收返回的数据，此写法的泛型集合不能使用 add 方 而&lt;? super T&gt;不能使用 get 方法，两者在接口调用赋值的场景中容易出错。</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">CollectionGuideline12</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        List&lt;Animal&gt; animals = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">        List&lt;Dog&gt; dogs = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">        List&lt;Husky&gt; huskies = Lists.newArrayList(<span class=\"keyword\">new</span> <span class=\"title class_\">Husky</span>(), <span class=\"keyword\">new</span> <span class=\"title class_\">Husky</span>());</span><br><span class=\"line\">        List&lt;Corgi&gt; corgis = Lists.newArrayList(<span class=\"keyword\">new</span> <span class=\"title class_\">Corgi</span>(), <span class=\"keyword\">new</span> <span class=\"title class_\">Corgi</span>());</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// addAll 可以将Dog任意子类加入到List&lt;Dog&gt;中</span></span><br><span class=\"line\">        addAll(dogs, huskies);</span><br><span class=\"line\">        addAll(dogs, corgis);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// addAll 也可以将Dog任意子类加入到List&lt;Animal&gt;中</span></span><br><span class=\"line\">        addAll(animals, huskies);</span><br><span class=\"line\">        addAll(animals, corgis);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 将 任何Dog或其子类的List对象 添加到 任何 Dog或其父类的List中</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> dest</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> src</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">addAll</span><span class=\"params\">(List&lt;? <span class=\"built_in\">super</span> Dog&gt; dest, List&lt;? extends Dog&gt; src)</span> &#123;</span><br><span class=\"line\">        dest.addAll(src);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Animal</span> &#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Dog</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Animal</span> &#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Husky</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Dog</span> &#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Corgi</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Dog</span> &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"并发规约-6-【强制】必须回收自定义的-ThreadLocal-变量，尤其在线程池场景下，线程经常会被复用，如果不清理-自定义的-ThreadLocal-变量，可能会影响后续业务逻辑和造成内存泄露等问题。尽量在代理中使用-try-finally-块进行回收。\"><a href=\"#并发规约-6-【强制】必须回收自定义的-ThreadLocal-变量，尤其在线程池场景下，线程经常会被复用，如果不清理-自定义的-ThreadLocal-变量，可能会影响后续业务逻辑和造成内存泄露等问题。尽量在代理中使用-try-finally-块进行回收。\" class=\"headerlink\" title=\"并发规约-6: 【强制】必须回收自定义的 ThreadLocal 变量，尤其在线程池场景下，线程经常会被复用，如果不清理 自定义的 ThreadLocal 变量，可能会影响后续业务逻辑和造成内存泄露等问题。尽量在代理中使用 try-finally 块进行回收。\"></a>并发规约-6: 【强制】必须回收自定义的 ThreadLocal 变量，尤其在线程池场景下，线程经常会被复用，如果不清理 自定义的 ThreadLocal 变量，可能会影响后续业务逻辑和造成内存泄露等问题。尽量在代理中使用 try-finally 块进行回收。</h5><ul>\n<li>注意设置java启动参数 -Xms15m -Xmx15m 限制堆大小15M;</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ConcurrentGuideline6</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * supplier supplies 5MB buffer</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> ThreadLocal&lt;ByteBuffer&gt; BYTE_BUFFER_THREAD_LOCAL =</span><br><span class=\"line\">            ThreadLocal.withInitial(() -&gt; ByteBuffer.allocate(<span class=\"number\">5</span> * <span class=\"number\">1024</span> * <span class=\"number\">1024</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> ThreadLocal&lt;ByteBuffer&gt; BYTE_BUFFER_THREAD_LOCAL_2 =</span><br><span class=\"line\">            ThreadLocal.withInitial(() -&gt; ByteBuffer.allocate(<span class=\"number\">5</span> * <span class=\"number\">1024</span> * <span class=\"number\">1024</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> ThreadLocal&lt;ByteBuffer&gt; BYTE_BUFFER_THREAD_LOCAL_3 =</span><br><span class=\"line\">            ThreadLocal.withInitial(() -&gt; ByteBuffer.allocate(<span class=\"number\">5</span> * <span class=\"number\">1024</span> * <span class=\"number\">1024</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;main-thread...&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * Runnable1逻辑：</span></span><br><span class=\"line\"><span class=\"comment\">         * 1. 获取5mb的ThreadLocal1对象值</span></span><br><span class=\"line\"><span class=\"comment\">         * 2. 打印日志</span></span><br><span class=\"line\"><span class=\"comment\">         * 3. 线程强制waiting 2秒</span></span><br><span class=\"line\"><span class=\"comment\">         * 4. 手动清除ThreadLocal</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        <span class=\"type\">Runnable</span> <span class=\"variable\">runnable</span> <span class=\"operator\">=</span> () -&gt; &#123;</span><br><span class=\"line\">            BYTE_BUFFER_THREAD_LOCAL.get();</span><br><span class=\"line\">            System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot;get ByteBuffer 1&quot;</span>);</span><br><span class=\"line\">            LockSupport.parkNanos(Duration.ofSeconds(<span class=\"number\">2</span>).toNanos());</span><br><span class=\"line\">            BYTE_BUFFER_THREAD_LOCAL.remove();</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// Runnable2 获取其他ThreadLocal对象：ThreadLocal2</span></span><br><span class=\"line\">        <span class=\"type\">Runnable</span> <span class=\"variable\">runnable2</span> <span class=\"operator\">=</span> () -&gt; &#123;</span><br><span class=\"line\">            BYTE_BUFFER_THREAD_LOCAL_2.get();</span><br><span class=\"line\">            System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot;get ByteBuffer 2&quot;</span>);</span><br><span class=\"line\">            LockSupport.parkNanos(Duration.ofSeconds(<span class=\"number\">2</span>).toNanos());</span><br><span class=\"line\">            BYTE_BUFFER_THREAD_LOCAL_2.remove();</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// Runnable3 获取其他ThreadLocal对象：ThreadLocal3</span></span><br><span class=\"line\">        <span class=\"type\">Runnable</span> <span class=\"variable\">runnable3</span> <span class=\"operator\">=</span> () -&gt; &#123;</span><br><span class=\"line\">            BYTE_BUFFER_THREAD_LOCAL_3.get();</span><br><span class=\"line\">            System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot;get ByteBuffer 3&quot;</span>);</span><br><span class=\"line\">            LockSupport.parkNanos(Duration.ofSeconds(<span class=\"number\">2</span>).toNanos());</span><br><span class=\"line\">            BYTE_BUFFER_THREAD_LOCAL_3.remove();</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 单线程线程池</span></span><br><span class=\"line\">        <span class=\"type\">ThreadPoolExecutor</span> <span class=\"variable\">threadPoolExecutor</span> <span class=\"operator\">=</span></span><br><span class=\"line\">                <span class=\"keyword\">new</span> <span class=\"title class_\">ThreadPoolExecutor</span>(<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">0L</span>, TimeUnit.SECONDS,</span><br><span class=\"line\">                        <span class=\"keyword\">new</span> <span class=\"title class_\">LinkedBlockingDeque</span>&lt;&gt;(<span class=\"number\">10</span>), Executors.defaultThreadFactory());</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 在限制heapSize是15M的情况下，如不remove ThreadLocal, 会OOM</span></span><br><span class=\"line\">        threadPoolExecutor.execute(runnable);</span><br><span class=\"line\">        threadPoolExecutor.execute(runnable2);</span><br><span class=\"line\">        threadPoolExecutor.execute(runnable3);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n"},{"title":"shardingsphere","date":"2022-03-19T13:35:45.000Z","_content":"\n# JDBC API及其上层生态\n\nJDBC API是JDK提供的, Java程序访问数据库的统一接口. 我们实际开发中使用的数据库连接池、ORM/持久层框架、分库分表等也无一例外是基于JDBC API的上层拓展与实现. 本文我们从底层出发, 逐个了解上层的封装细节.\n\n## JDBC API基本介绍\n\n### Oracle官方定义: \n\n*The Java Database Connectivity (JDBC) API provides universal data access from the Java programming language. Using the JDBC API, you can access virtually any data source, from relational databases to spreadsheets and flat files.* \n\n简单来说, JDBC是JDK提供的Java程序访问数据库资源的上层统一接口.  当Java程序要访问数据库时，Java代码可直接调用 JDBC接口，而JDBC接口底层通过Java SPI机制找到数据库厂商的JDBC驱动来实现对数据库的读写操作。\n\n<img src=\"./jdbc-level.png\" alt=\"image-20220331212519941\" style=\"zoom:47%;\" />\n\n### JDBC API基础使用方法:\n\nJDBC API包含两个包: java.sql 和 javax.sql , 其核心类和基本用法如下:\n\n<img src=\"./jdbc-package.png\" alt=\"jdbc-package\" style=\"zoom:43%;\" />\n\n+ 通过DriverManager.getConnection()获取数据库驱动连接\n\n```java\npublic class DriverManager {\n\n    // List of registered JDBC drivers\n    private final static CopyOnWriteArrayList<DriverInfo> registeredDrivers = new CopyOnWriteArrayList<>();\n    \n    static {\n        // 通过java SPI 注册声明的Driver实现到 registeredDrivers\n        loadInitialDrivers();\n        println(\"JDBC DriverManager initialized\");\n    }\n    // ... 略\n    public static synchronized void registerDriver(java.sql.Driver driver,\n            DriverAction da)\n        throws SQLException {\n\n        /* Register the driver if it has not already been added to our list */\n        if(driver != null) {\n            registeredDrivers.addIfAbsent(new DriverInfo(driver, da));\n        } else {\n            // This is for compatibility with the original DriverManager\n            throw new NullPointerException();\n        }\n\n        println(\"registerDriver: \" + driver);\n    }\n    // ... 略\n    // 获取连接时最终遍历registeredDriver并connect\n    public static Connection getConnection(String url,\n        java.util.Properties info) throws SQLException {\n\n        return (getConnection(url, info, Reflection.getCallerClass()));\n    }\n}\n```\n\n+ 查询数据\n\n```java\nString JDBC_URL = \"jdbc:mysql://localhost:3306/test\";\nString JDBC_USER = \"root\";\nString JDBC_PASSWORD = \"password\";\n\ntry (Connection conn = DriverManager.getConnection(JDBC_URL, JDBC_USER, JDBC_PASSWORD)) {\n    try (PreparedStatement ps = conn.prepareStatement(\"SELECT id, grade, name, gender FROM students WHERE gender=? AND grade=?\")) {\n        ps.setObject(1, \"M\"); // 注意：索引从1开始\n        ps.setObject(2, 3);\n        try (ResultSet rs = ps.executeQuery()) {\n            while (rs.next()) {\n                long id = rs.getLong(\"id\");\n                long grade = rs.getLong(\"grade\");\n                String name = rs.getString(\"name\");\n                String gender = rs.getString(\"gender\");\n            }\n        }\n    }\n}\n```\n\n+ 插入、更新、删除数据\n\n```java\n// insert and get genrated key\ntry (Connection conn = DriverManager.getConnection(JDBC_URL, JDBC_USER, JDBC_PASSWORD)) {\n    try (PreparedStatement ps = conn.prepareStatement(\n            \"INSERT INTO students (grade, name, gender) VALUES (?,?,?)\",\n            Statement.RETURN_GENERATED_KEYS)) {\n        ps.setObject(1, 1); // grade\n        ps.setObject(2, \"Bob\"); // name\n        ps.setObject(3, \"M\"); // gender\n        int n = ps.executeUpdate(); // 1\n        try (ResultSet rs = ps.getGeneratedKeys()) {\n            if (rs.next()) {\n                long id = rs.getLong(1); // 注意：索引从1开始\n            }\n        }\n    }\n}\n\n// update\ntry (Connection conn = DriverManager.getConnection(JDBC_URL, JDBC_USER, JDBC_PASSWORD)) {\n    try (PreparedStatement ps = conn.prepareStatement(\"UPDATE students SET name=? WHERE id=?\")) {\n        ps.setObject(1, \"Bob\"); // 注意：索引从1开始\n        ps.setObject(2, 999);\n        int n = ps.executeUpdate(); // 返回更新的行数\n    }\n}\n\n// delete\ntry (Connection conn = DriverManager.getConnection(JDBC_URL, JDBC_USER, JDBC_PASSWORD)) {\n    try (PreparedStatement ps = conn.prepareStatement(\"DELETE FROM students WHERE id=?\")) {\n        ps.setObject(1, 999); // 注意：索引从1开始\n        int n = ps.executeUpdate(); // 删除的行数\n    }\n}\n```\n\n+ 事务操作,  默认每条sql语句都会在一个独立的事务中并被自动提交,  控制事务就是取消自动提交、执行多条sql并手动提交\n\n```java\nConnection conn = openConnection();\n// 设定隔离级别为READ COMMITTED, 不设置使用mysql默认隔离级别\nconn.setTransactionIsolation(Connection.TRANSACTION_READ_COMMITTED);\ntry {\n    // 关闭自动提交:\n    conn.setAutoCommit(false);\n    // 执行多条SQL语句:\n    insert(); \n    update();\n    delete();\n    // 提交事务:\n    conn.commit();\n} catch (SQLException e) {\n    // 回滚事务:\n    conn.rollback();\n} finally {\n    conn.setAutoCommit(true);\n    conn.close();\n}\n```\n\n### DataSource接口:\n\n官方javadoc:  \n\n **A factory for connections** to the physical data source that this DataSource object represents. An **alternative to the DriverManager** facility, a DataSource object is **the preferred means of getting a connection**. (总结)\n\n<img src=\"/Users/talentxiet/Library/Application Support/typora-user-images/image-20220401190952211.png\" alt=\"image-20220401190952211\" style=\"zoom:50%;\" />\n\nDataSource一般有三种实现:\n\n1. Basic 实现:  内部就是调用DriverManager中的数据库驱动获取连接. 例如Spring JDBC的DriverManagerDataSource.\n2. Connection pooling实现: 用池化技术复用连接. 例如Hikari的HikariDataSource.\n3. Distributed 实现: 可以产出能执行分布式SQL的Connection. 例如Sharding JDBC的ShardingDataSource.\n\n<img src=\"./datasource-impl.png\" alt=\"image-20220401191629549\" style=\"zoom:50%;\" />\n\n## 生态一: 数据库连接池\n\n每次读写访问都通过数据库驱动新建和销毁tcp连接的开销是昂贵的,  我们通常用连接池来初始化并复用已经创建好的连接. 连接池的开源实现非常多, 比如hikari, druid, tomcat-jdbc pool等. 不同实现模型和细节各有不同, 其优势也各有不同, 我们这里不一一展开了, 大家可以自行查看其benchmark相关文章.\n\n<img src=\"./datasource-pool.png\" alt=\"image-20220401193526994\" style=\"zoom: 45%;\" />\n\n连接池的大体模型都如上图所示: 数据库驱动连接的借用、归还、以及创建和销毁. 我们这里列出一些较通用的连接池配置点, 在实际使用过程中大家注意根据实际需要正确的配置即可. 下边示例是hikari的参数配置项.\n\n```sh\nconnectionTimeout: 请求连接的超时时间\nidleTimeout: 空闲连接回收时间\nmaxLifetime: 连接最大存活时间\nconnectionTestQuery: borrow到连接后测试连接有效的query语句\nminimumIdle: 连接池中最小的闲置连接数, 总数不超过maximux的前提下hikari尽可能保证此参数数量\nmaximumPoolSize: 连接池中最大的连接数\n```\n\n此类数据库连接池通常也会产出详细的监控指标信息, 收集这类指标可以很好的辅助我们排障和了解线上资源使用情况, 常见指标(hikari为例)如下: \n\n```\nidleConnections: 当前闲置连接数\nactiveConnections: 当前活跃连接数\ntotalConnections: activeConnection + idleConnections\npendingThreads: 当前等待连接的线程数\nmaxConnections: 历史最大连接数\nminConnections: 历史最小连接数\nusageTime: 本次连接使用时间\nacquireTime: 本次连接请求时间\n```\n\n## 生态二: spring-jdbc\n\nspring-jdbc是Spring framework中的模块之一, 提供了Spring对原生JDBC API的实现和上层封装,其主要包含以下四个包:\n\n+ **core**: 提供Spring封装后的核心功能接口及实现, 如 *JdbcOperations*, *JdbcTemplate*, *NamedParameterJdbcTemplate*\n+ **datasource**: 提供DataSource的实现及上层功能封装, 如 *DriverManagerDataSource*和 *DataSourceTransactionManager*\n+ **object**: 提供面向对象的SQL Query和Result返回结果封装\n+ **support**: 提供上面包的一些通用support类\n\nspring-jdbc (包括其依赖的spring-tx) 可以帮我们简化一些开发流程: \n\n+ 原始: 获取数据库连接、处理事务autocommit、声明SQL、预编译并执行、映射ResultSet结果集到期望对象、处理异常和事务、释放连接资源等一系列操作.\n+  spring-jdbc:  配置DataSource和JdbcTemplate, 声明SQL和结果映射方式、调用JdbcTemplate接口执行, 获取对象结果.\n\n简单使用示例如下:\n\n+ 配置DataSource和JdbcTemplate\n\n```java\n@Configuration\n@PropertySource(\"jdbc.properties\")\npublic class AppConfig {\n\n    @Value(\"${jdbc.url}\")\n    String jdbcUrl;\n    @Value(\"${jdbc.username}\")\n    String jdbcUsername;\n    @Value(\"${jdbc.password}\")\n    String jdbcPassword;\n\n    @Bean\n    DataSource createDataSource() {\n        HikariConfig config = new HikariConfig();\n        config.setJdbcUrl(jdbcUrl);\n        config.setUsername(jdbcUsername);\n        config.setPassword(jdbcPassword);\n        config.addDataSourceProperty(\"autoCommit\", \"true\");\n        config.addDataSourceProperty(\"connectionTimeout\", \"5\");\n        config.addDataSourceProperty(\"idleTimeout\", \"60\");\n        return new HikariDataSource(config);\n    }\n\n    @Bean\n    JdbcTemplate createJdbcTemplate(@Autowired DataSource dataSource) {\n        return new JdbcTemplate(dataSource);\n    }\n}\n```\n\n+ 使用JdbcTemplate最为Dao层返回结果\n\n```java\npublic List<User> getUsers(int pageIndex, int pageSize) {\n    int limit = pageSize;\n    int offset = limit * (pageIndex - 1);\n    return jdbcTemplate.query(\"SELECT * FROM users LIMIT ? OFFSET ?\", new Object[] { limit, offset },\n            new BeanPropertyRowMapper<>(User.class));\n}\n```\n\nJdbcTemplate只是jdbc api的一些简单封装, 在实际开发中, 大多还是使用MyBatis、Hibernate此类的ORM框架, 更好的对底层操作进行封闭.  \n\n但spring-jdbc依赖的spring-tx包中对事务进行了抽象, 给我们提供了简单的 @Transactional 注解来为代码逻辑进行AOP事务增强.  其中增强逻辑的实现全部依靠 DataSourceTransactionManager 类来完成, 包括当前事务上下文判断、从DataSource中获取Connection、设置隔离级别并关闭auto commit、设置线程共享的ThreadLocal存储dataSource获取到的Connection、以及最终的Connection commit or rollback.\n\n理解事务本质 以及 Spring对事务的封装:\n\n从原生JDBC API我们知道, 一个事务和一个Connection是强绑定的. 默认一个Connection的autoCommit会设置成true, 也就是每条执行的SQL默认都在一个事务里,并在执行完成后自动提交了. 若我们想让代码实现多个SQL在一个事务里执行, 本质上就是让这些SQL在一个autoCommit设置为false的Connection中执行, 并最终手动commit. DataSourceTransactionManager本质上也就是做了这个工作, 在@Transactional 注解的方法开始前, 获取到新的Connection, 设置隔离级别与autoCommit, 执行若干代码逻辑, 最终提交或回滚.  当遇到传播级别为REQUIRES_NEW的增强方法或想另起一个新事务执行一些SQL时, 就需再从DataSource获取一个新的Connection来进行.\n\n``` java\nprotected Object invokeWithinTransaction(Method method, Class<?> targetClass, final InvocationCallback invocation)\n\t\t\tthrows Throwable {\n\n\t\tfinal TransactionAttribute txAttr = getTransactionAttributeSource().getTransactionAttribute(method, targetClass);\n    // 获取DataSourceTransactionManager\n\t\tfinal PlatformTransactionManager tm = determineTransactionManager(txAttr);\n\t\tfinal String joinpointIdentification = methodIdentification(method, targetClass, txAttr);\n\t\t\n      // TransactionManager判断是否需要创建新事务, 即获取Connection\n\t\t\tTransactionInfo txInfo = createTransactionIfNecessary(tm, txAttr, joinpointIdentification);\n\t\t\tObject retVal = null;\n\t\t\ttry {\n\t\t\t\t// AOP 增强的原始方法\n\t\t\t\tretVal = invocation.proceedWithInvocation();\n\t\t\t}\n\t\t\tcatch (Throwable ex) {\n\t\t\t\t// 遇到异常选择性回滚事务\n\t\t\t\tcompleteTransactionAfterThrowing(txInfo, ex);\n\t\t\t\tthrow ex;\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\tcleanupTransactionInfo(txInfo);\n\t\t\t}\n      // 正常执行提交事务\n\t\t\tcommitTransactionAfterReturning(txInfo);\n\t\t\treturn retVal;\n}\n```\n\n## 生态三: ORM/持久层框架-MyBatis\n\n> 本节我们挑重点讲解, 详细源码分析可参考此文章:  [mybatis design concept](https://learn.lianglianglee.com/%E4%B8%93%E6%A0%8F/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90%20MyBatis%20%E6%A0%B8%E5%BF%83%E5%8E%9F%E7%90%86-%E5%AE%8C/03%20%20MyBatis%20%E6%BA%90%E7%A0%81%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E5%8F%8A%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84%E8%A7%A3%E6%9E%90.md)\n\nMyBatis官方Introduction: \n\nMyBatis 是一款优秀的持久层框架，它支持自定义 SQL、存储过程以及高级映射。**MyBatis 免除了几乎所有的 JDBC 代码以及设置参数和获取结果集的工作**。MyBatis 可以通过简单的 XML 或注解来配置和映射原始类型、Map、集合等接口和 Java POJO为数据库中的记录。\n\nMyBatis 分为三层架构，分别是**基础支撑层、核心处理层**和**接口层**，如下图所示：\n\n<img src=\"./mybatis-arch.png\" alt=\"image-20220405125449569\" style=\"zoom:30%;\" />\n\n+ 基础支撑层是整个 MyBatis 框架的地基，为整个 MyBatis 框架提供了底层基础的功能，其中每个模块都提供了一个内聚的、单一的能力;\t\n+ 核心处理层是 MyBatis 核心实现所在，其中涉及 MyBatis 的初始化以及执行一条 SQL 语句的全流程。\n+ 接口层是 MyBatis 暴露给调用的接口集合，这些接口都是使用 MyBatis 时最常用的一些接口，例如，SqlSession 接口、SqlSessionFactory 接口等。\n\nMyBatis执行过程以及对JDBC API的封装:\n\n<img src=\"./mybatis-execute.png\" alt=\"image-20220405132244101\" style=\"zoom:35%;\" />\n\nMyBatis与Spring的集成:\n\n我们在Spring框架内使用mybatis的时候, 要引入mybatis和mybatis-spring两个依赖, 前者是mybatis的所有核心逻辑的代码, 而后者负责整合spring框架能力, 其又引入了spring-jdbc以及spring-tx. \n\n<img src=\"./mybatis-package.png\" alt=\"image-20220419141734725\" style=\"zoom:50%;\" />\n\n一个 Transaction 的例子, 多个Dao在一个事务中执行的过程:\n\n```java\n    @Transactional\n    public void createOrder(Long userId, Long productId, Integer count) {\n        // 1. 创建订单\n        orderDao.insertOrder(Order.builder()\n                .userId(userId)\n                .productId(productId)\n                .count(count)\n                .build());\n\n        // 2. 减少商品库存\n        productDao.minusCount(productId, count);\n\n        // 3. 增加用户积分\n        userDao.addPoint(userId, count);\n    }\n```\n\nMyBatis框架的SQL执行是交给Executor负责的, Executor每次新建的时候会传入一个Transaction对象, 在与Spring整合的过程中, 会将MyBatis Configuration中的 TransactionFactory指定为 SpringManagedTransactionFactory, 其最终目标呢, 就是创建出 SpringManagedTransaction给 Executor使用. \n\nSpringManagedTransaction有什么特别的呢? \n\n``` java\n// SpringManagedTransaction 中的获取连接\nprivate void openConnection() throws SQLException {\n    // 通过Spring-jdbc暴露的 DataSourceUtils 获取Connection, 该Util会从当前线程上下文中判断是否存在事务, 并获取由之前Spring事务切面存入的 Connection\n    this.connection = DataSourceUtils.getConnection(this.dataSource);\n    this.autoCommit = this.connection.getAutoCommit();\n    this.isConnectionTransactional = DataSourceUtils.isConnectionTransactional(this.connection, this.dataSource);\n    // ...\n}\n\n// DataSourceUtils.getConnection方法内部逻辑\npublic static Connection getConnection(DataSource dataSource) {\n    // 从全局的TreadLocal中获取当前线程是否已有事务Connection\n    ConnectionHolder conHolder = TransactionSynchronizationManager.getResource(dataSource);\n\t\t// 有的话直接使用同一个Connection\n    if (conHolder != null && (conHolder.hasConnection() || conHolder.isSynchronizedWithTransaction())) {\n\t\t\tconHolder.requested();\n\t\t\tif (!conHolder.hasConnection()) {\n\t\t\t\tlogger.debug(\"Fetching resumed JDBC Connection from DataSource\");\n\t\t\t\tconHolder.setConnection(fetchConnection(dataSource));\n\t\t\t}\n\t\t\treturn conHolder.getConnection();\n\t\t}\n    // 线程上下文中没有事务连接, 新获取Connection执行后续SQL\n    Connection con = fetchConnection(dataSource);\n    // ...\n    return con;\n}\n```\n\n## 生态四: 分库分表\n\n### Sharding-JDBC (ShardingSphere-JDBC)\n\n官方介绍:\n\n定位为轻量级 Java 框架，在 Java 的 JDBC 层提供的额外服务。 它使用客户端直连数据库，以 jar 包形式提供服务，无需额外部署和依赖，可理解为增强版的 JDBC 驱动，完全兼容 JDBC 和各种 ORM 框架。\n\n- 适用于任何基于 JDBC 的 ORM 框架，如：JPA, Hibernate, Mybatis, Spring JDBC Template 或直接使用 JDBC；\n- 支持任何第三方的数据库连接池，如：DBCP, C3P0, BoneCP, HikariCP 等；\n- 支持任意实现 JDBC 规范的数据库，目前支持 MySQL，PostgreSQL，Oracle，SQLServer 以及任何可使用 JDBC 访问的数据库。\n\n![image-20220319220206599](./sharding-jdbc.png)\n\n故名思义, Sharding-JDBC, 叫这个名字, 那它一定是基于JDBC API进行的能力拓展. 我们可以看下其core包下结构便一目了然了:\n\n<img src=\"./sharding-core-package.png\" alt=\"image-20220418225313643\" style=\"zoom:50%;\" />\n\n为什么Sharding-JDBC能支持所有的ORM框架呢?  也正因为它直接在JDBC层进行的封装, 以 MyBatis 和 Sharding JDBC为例: \n\n<img src=\"./mybatis-sharding-jdbc.png\" alt=\"image-20220419152546734\" style=\"zoom:50%;\" />\n\nSharding-JDBC 为 JDBC DataSource接口实现了 ShardingDataSource, 其内部管理了多个数据源, 而上层使用时对多数据源完全无感. 在PrepareStatement阶段, Sharding-JDBC会根据要执行的SQL以及配置的分库分表Rule,  解析并路由出若干条执行单元, 并分别从对应连接池中获取连接, 并执行改写后的SQL. \n\n<img src=\"./sharding-jdbc-sequence.png\" alt=\"image-20220419153403836\" style=\"zoom: 25%;\" />\n\n分库分表配置示例:\n\n``` xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!--\n  ~ Licensed to the Apache Software Foundation (ASF) under one or more\n  ~ contributor license agreements.  See the NOTICE file distributed with\n  ~ this work for additional information regarding copyright ownership.\n  ~ The ASF licenses this file to You under the Apache License, Version 2.0\n  ~ (the \"License\"); you may not use this file except in compliance with\n  ~ the License.  You may obtain a copy of the License at\n  ~\n  ~     http://www.apache.org/licenses/LICENSE-2.0\n  ~\n  ~ Unless required by applicable law or agreed to in writing, software\n  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  ~ See the License for the specific language governing permissions and\n  ~ limitations under the License.\n  -->\n\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xmlns:context=\"http://www.springframework.org/schema/context\"\n       xmlns:tx=\"http://www.springframework.org/schema/tx\"\n       xmlns:sharding=\"http://shardingsphere.apache.org/schema/shardingsphere/sharding\"\n       xmlns:bean=\"http://www.springframework.org/schema/util\"\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n                        http://www.springframework.org/schema/beans/spring-beans.xsd \n                        http://www.springframework.org/schema/tx \n                        http://www.springframework.org/schema/tx/spring-tx.xsd\n                        http://www.springframework.org/schema/context \n                        http://www.springframework.org/schema/context/spring-context.xsd\n                        http://shardingsphere.apache.org/schema/shardingsphere/sharding\n                        http://shardingsphere.apache.org/schema/shardingsphere/sharding/sharding.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd\">\n    <context:component-scan base-package=\"org.apache.shardingsphere.example.core.mybatis\" />\n    \n    <bean id=\"demo_ds_0\" class=\"com.zaxxer.hikari.HikariDataSource\" destroy-method=\"close\">\n        <property name=\"driverClassName\" value=\"com.mysql.jdbc.Driver\"/>\n        <property name=\"jdbcUrl\" value=\"jdbc:mysql://localhost:3306/demo_ds_0?useSSL=false&amp;useUnicode=true&amp;characterEncoding=UTF-8\"/>\n        <property name=\"username\" value=\"root\"/>\n        <property name=\"password\" value=\"\"/>\n    </bean>\n    \n    <bean id=\"demo_ds_1\" class=\"com.zaxxer.hikari.HikariDataSource\" destroy-method=\"close\">\n        <property name=\"driverClassName\" value=\"com.mysql.jdbc.Driver\"/>\n        <property name=\"jdbcUrl\" value=\"jdbc:mysql://localhost:3306/demo_ds_1?useSSL=false&amp;useUnicode=true&amp;characterEncoding=UTF-8\"/>\n        <property name=\"username\" value=\"root\"/>\n        <property name=\"password\" value=\"\"/>\n    </bean>\n    \n    <sharding:inline-strategy id=\"databaseStrategy\" sharding-column=\"user_id\" algorithm-expression=\"demo_ds_${user_id % 2}\" />\n    <sharding:inline-strategy id=\"orderTableStrategy\" sharding-column=\"order_id\" algorithm-expression=\"t_order_${order_id % 2}\" />\n    <sharding:inline-strategy id=\"orderItemTableStrategy\" sharding-column=\"order_id\" algorithm-expression=\"t_order_item_${order_id % 2}\" />\n    \n    <bean:properties id=\"properties\">\n        <prop key=\"worker.id\">123</prop>\n    </bean:properties>\n    \n    <sharding:key-generator id=\"orderKeyGenerator\" type=\"SNOWFLAKE\" column=\"order_id\" props-ref=\"properties\" />\n    <sharding:key-generator id=\"itemKeyGenerator\" type=\"SNOWFLAKE\" column=\"order_item_id\" props-ref=\"properties\" />\n    \n    <sharding:data-source id=\"shardingDataSource\">\n        <sharding:sharding-rule data-source-names=\"demo_ds_0, demo_ds_1\">\n            <sharding:table-rules>\n                <sharding:table-rule logic-table=\"t_order\" actual-data-nodes=\"demo_ds_${0..1}.t_order_${0..1}\" database-strategy-ref=\"databaseStrategy\" table-strategy-ref=\"orderTableStrategy\" key-generator-ref=\"orderKeyGenerator\" />\n                <sharding:table-rule logic-table=\"t_order_item\" actual-data-nodes=\"demo_ds_${0..1}.t_order_item_${0..1}\" database-strategy-ref=\"databaseStrategy\" table-strategy-ref=\"orderItemTableStrategy\" key-generator-ref=\"itemKeyGenerator\" />\n            </sharding:table-rules>\n            <sharding:binding-table-rules>\n                <sharding:binding-table-rule logic-tables=\"t_order,t_order_item\"/>\n            </sharding:binding-table-rules>\n            <sharding:broadcast-table-rules>\n                <sharding:broadcast-table-rule table=\"t_address\"/>\n            </sharding:broadcast-table-rules>\n        </sharding:sharding-rule>\n        <sharding:props>\n            <prop key=\"sql.show\">false</prop>\n        </sharding:props>\n    </sharding:data-source>\n    \n    <bean id=\"transactionManager\" class=\"org.springframework.jdbc.datasource.DataSourceTransactionManager\">\n        <property name=\"dataSource\" ref=\"shardingDataSource\" />\n    </bean>\n    <tx:annotation-driven />\n    \n    <bean id=\"sqlSessionFactory\" class=\"org.mybatis.spring.SqlSessionFactoryBean\">\n        <property name=\"dataSource\" ref=\"shardingDataSource\"/>\n        <property name=\"mapperLocations\" value=\"classpath*:META-INF/mappers/*.xml\"/>\n    </bean>\n    \n    <bean class=\"org.mybatis.spring.mapper.MapperScannerConfigurer\">\n        <property name=\"basePackage\" value=\"org.apache.shardingsphere.example.core.mybatis.repository\"/>\n        <property name=\"sqlSessionFactoryBeanName\" value=\"sqlSessionFactory\"/>\n    </bean>\n</beans>\n\n```\n\n思考: 跨数据源事务一致性问题?\n\n## 生态五:  分布式事务... 待完成\n","source":"_posts/shardingsphere.md","raw":"---\ntitle: shardingsphere\ndate: 2022-03-19 21:35:45\ntags: sharding, jdbc\n---\n\n# JDBC API及其上层生态\n\nJDBC API是JDK提供的, Java程序访问数据库的统一接口. 我们实际开发中使用的数据库连接池、ORM/持久层框架、分库分表等也无一例外是基于JDBC API的上层拓展与实现. 本文我们从底层出发, 逐个了解上层的封装细节.\n\n## JDBC API基本介绍\n\n### Oracle官方定义: \n\n*The Java Database Connectivity (JDBC) API provides universal data access from the Java programming language. Using the JDBC API, you can access virtually any data source, from relational databases to spreadsheets and flat files.* \n\n简单来说, JDBC是JDK提供的Java程序访问数据库资源的上层统一接口.  当Java程序要访问数据库时，Java代码可直接调用 JDBC接口，而JDBC接口底层通过Java SPI机制找到数据库厂商的JDBC驱动来实现对数据库的读写操作。\n\n<img src=\"./jdbc-level.png\" alt=\"image-20220331212519941\" style=\"zoom:47%;\" />\n\n### JDBC API基础使用方法:\n\nJDBC API包含两个包: java.sql 和 javax.sql , 其核心类和基本用法如下:\n\n<img src=\"./jdbc-package.png\" alt=\"jdbc-package\" style=\"zoom:43%;\" />\n\n+ 通过DriverManager.getConnection()获取数据库驱动连接\n\n```java\npublic class DriverManager {\n\n    // List of registered JDBC drivers\n    private final static CopyOnWriteArrayList<DriverInfo> registeredDrivers = new CopyOnWriteArrayList<>();\n    \n    static {\n        // 通过java SPI 注册声明的Driver实现到 registeredDrivers\n        loadInitialDrivers();\n        println(\"JDBC DriverManager initialized\");\n    }\n    // ... 略\n    public static synchronized void registerDriver(java.sql.Driver driver,\n            DriverAction da)\n        throws SQLException {\n\n        /* Register the driver if it has not already been added to our list */\n        if(driver != null) {\n            registeredDrivers.addIfAbsent(new DriverInfo(driver, da));\n        } else {\n            // This is for compatibility with the original DriverManager\n            throw new NullPointerException();\n        }\n\n        println(\"registerDriver: \" + driver);\n    }\n    // ... 略\n    // 获取连接时最终遍历registeredDriver并connect\n    public static Connection getConnection(String url,\n        java.util.Properties info) throws SQLException {\n\n        return (getConnection(url, info, Reflection.getCallerClass()));\n    }\n}\n```\n\n+ 查询数据\n\n```java\nString JDBC_URL = \"jdbc:mysql://localhost:3306/test\";\nString JDBC_USER = \"root\";\nString JDBC_PASSWORD = \"password\";\n\ntry (Connection conn = DriverManager.getConnection(JDBC_URL, JDBC_USER, JDBC_PASSWORD)) {\n    try (PreparedStatement ps = conn.prepareStatement(\"SELECT id, grade, name, gender FROM students WHERE gender=? AND grade=?\")) {\n        ps.setObject(1, \"M\"); // 注意：索引从1开始\n        ps.setObject(2, 3);\n        try (ResultSet rs = ps.executeQuery()) {\n            while (rs.next()) {\n                long id = rs.getLong(\"id\");\n                long grade = rs.getLong(\"grade\");\n                String name = rs.getString(\"name\");\n                String gender = rs.getString(\"gender\");\n            }\n        }\n    }\n}\n```\n\n+ 插入、更新、删除数据\n\n```java\n// insert and get genrated key\ntry (Connection conn = DriverManager.getConnection(JDBC_URL, JDBC_USER, JDBC_PASSWORD)) {\n    try (PreparedStatement ps = conn.prepareStatement(\n            \"INSERT INTO students (grade, name, gender) VALUES (?,?,?)\",\n            Statement.RETURN_GENERATED_KEYS)) {\n        ps.setObject(1, 1); // grade\n        ps.setObject(2, \"Bob\"); // name\n        ps.setObject(3, \"M\"); // gender\n        int n = ps.executeUpdate(); // 1\n        try (ResultSet rs = ps.getGeneratedKeys()) {\n            if (rs.next()) {\n                long id = rs.getLong(1); // 注意：索引从1开始\n            }\n        }\n    }\n}\n\n// update\ntry (Connection conn = DriverManager.getConnection(JDBC_URL, JDBC_USER, JDBC_PASSWORD)) {\n    try (PreparedStatement ps = conn.prepareStatement(\"UPDATE students SET name=? WHERE id=?\")) {\n        ps.setObject(1, \"Bob\"); // 注意：索引从1开始\n        ps.setObject(2, 999);\n        int n = ps.executeUpdate(); // 返回更新的行数\n    }\n}\n\n// delete\ntry (Connection conn = DriverManager.getConnection(JDBC_URL, JDBC_USER, JDBC_PASSWORD)) {\n    try (PreparedStatement ps = conn.prepareStatement(\"DELETE FROM students WHERE id=?\")) {\n        ps.setObject(1, 999); // 注意：索引从1开始\n        int n = ps.executeUpdate(); // 删除的行数\n    }\n}\n```\n\n+ 事务操作,  默认每条sql语句都会在一个独立的事务中并被自动提交,  控制事务就是取消自动提交、执行多条sql并手动提交\n\n```java\nConnection conn = openConnection();\n// 设定隔离级别为READ COMMITTED, 不设置使用mysql默认隔离级别\nconn.setTransactionIsolation(Connection.TRANSACTION_READ_COMMITTED);\ntry {\n    // 关闭自动提交:\n    conn.setAutoCommit(false);\n    // 执行多条SQL语句:\n    insert(); \n    update();\n    delete();\n    // 提交事务:\n    conn.commit();\n} catch (SQLException e) {\n    // 回滚事务:\n    conn.rollback();\n} finally {\n    conn.setAutoCommit(true);\n    conn.close();\n}\n```\n\n### DataSource接口:\n\n官方javadoc:  \n\n **A factory for connections** to the physical data source that this DataSource object represents. An **alternative to the DriverManager** facility, a DataSource object is **the preferred means of getting a connection**. (总结)\n\n<img src=\"/Users/talentxiet/Library/Application Support/typora-user-images/image-20220401190952211.png\" alt=\"image-20220401190952211\" style=\"zoom:50%;\" />\n\nDataSource一般有三种实现:\n\n1. Basic 实现:  内部就是调用DriverManager中的数据库驱动获取连接. 例如Spring JDBC的DriverManagerDataSource.\n2. Connection pooling实现: 用池化技术复用连接. 例如Hikari的HikariDataSource.\n3. Distributed 实现: 可以产出能执行分布式SQL的Connection. 例如Sharding JDBC的ShardingDataSource.\n\n<img src=\"./datasource-impl.png\" alt=\"image-20220401191629549\" style=\"zoom:50%;\" />\n\n## 生态一: 数据库连接池\n\n每次读写访问都通过数据库驱动新建和销毁tcp连接的开销是昂贵的,  我们通常用连接池来初始化并复用已经创建好的连接. 连接池的开源实现非常多, 比如hikari, druid, tomcat-jdbc pool等. 不同实现模型和细节各有不同, 其优势也各有不同, 我们这里不一一展开了, 大家可以自行查看其benchmark相关文章.\n\n<img src=\"./datasource-pool.png\" alt=\"image-20220401193526994\" style=\"zoom: 45%;\" />\n\n连接池的大体模型都如上图所示: 数据库驱动连接的借用、归还、以及创建和销毁. 我们这里列出一些较通用的连接池配置点, 在实际使用过程中大家注意根据实际需要正确的配置即可. 下边示例是hikari的参数配置项.\n\n```sh\nconnectionTimeout: 请求连接的超时时间\nidleTimeout: 空闲连接回收时间\nmaxLifetime: 连接最大存活时间\nconnectionTestQuery: borrow到连接后测试连接有效的query语句\nminimumIdle: 连接池中最小的闲置连接数, 总数不超过maximux的前提下hikari尽可能保证此参数数量\nmaximumPoolSize: 连接池中最大的连接数\n```\n\n此类数据库连接池通常也会产出详细的监控指标信息, 收集这类指标可以很好的辅助我们排障和了解线上资源使用情况, 常见指标(hikari为例)如下: \n\n```\nidleConnections: 当前闲置连接数\nactiveConnections: 当前活跃连接数\ntotalConnections: activeConnection + idleConnections\npendingThreads: 当前等待连接的线程数\nmaxConnections: 历史最大连接数\nminConnections: 历史最小连接数\nusageTime: 本次连接使用时间\nacquireTime: 本次连接请求时间\n```\n\n## 生态二: spring-jdbc\n\nspring-jdbc是Spring framework中的模块之一, 提供了Spring对原生JDBC API的实现和上层封装,其主要包含以下四个包:\n\n+ **core**: 提供Spring封装后的核心功能接口及实现, 如 *JdbcOperations*, *JdbcTemplate*, *NamedParameterJdbcTemplate*\n+ **datasource**: 提供DataSource的实现及上层功能封装, 如 *DriverManagerDataSource*和 *DataSourceTransactionManager*\n+ **object**: 提供面向对象的SQL Query和Result返回结果封装\n+ **support**: 提供上面包的一些通用support类\n\nspring-jdbc (包括其依赖的spring-tx) 可以帮我们简化一些开发流程: \n\n+ 原始: 获取数据库连接、处理事务autocommit、声明SQL、预编译并执行、映射ResultSet结果集到期望对象、处理异常和事务、释放连接资源等一系列操作.\n+  spring-jdbc:  配置DataSource和JdbcTemplate, 声明SQL和结果映射方式、调用JdbcTemplate接口执行, 获取对象结果.\n\n简单使用示例如下:\n\n+ 配置DataSource和JdbcTemplate\n\n```java\n@Configuration\n@PropertySource(\"jdbc.properties\")\npublic class AppConfig {\n\n    @Value(\"${jdbc.url}\")\n    String jdbcUrl;\n    @Value(\"${jdbc.username}\")\n    String jdbcUsername;\n    @Value(\"${jdbc.password}\")\n    String jdbcPassword;\n\n    @Bean\n    DataSource createDataSource() {\n        HikariConfig config = new HikariConfig();\n        config.setJdbcUrl(jdbcUrl);\n        config.setUsername(jdbcUsername);\n        config.setPassword(jdbcPassword);\n        config.addDataSourceProperty(\"autoCommit\", \"true\");\n        config.addDataSourceProperty(\"connectionTimeout\", \"5\");\n        config.addDataSourceProperty(\"idleTimeout\", \"60\");\n        return new HikariDataSource(config);\n    }\n\n    @Bean\n    JdbcTemplate createJdbcTemplate(@Autowired DataSource dataSource) {\n        return new JdbcTemplate(dataSource);\n    }\n}\n```\n\n+ 使用JdbcTemplate最为Dao层返回结果\n\n```java\npublic List<User> getUsers(int pageIndex, int pageSize) {\n    int limit = pageSize;\n    int offset = limit * (pageIndex - 1);\n    return jdbcTemplate.query(\"SELECT * FROM users LIMIT ? OFFSET ?\", new Object[] { limit, offset },\n            new BeanPropertyRowMapper<>(User.class));\n}\n```\n\nJdbcTemplate只是jdbc api的一些简单封装, 在实际开发中, 大多还是使用MyBatis、Hibernate此类的ORM框架, 更好的对底层操作进行封闭.  \n\n但spring-jdbc依赖的spring-tx包中对事务进行了抽象, 给我们提供了简单的 @Transactional 注解来为代码逻辑进行AOP事务增强.  其中增强逻辑的实现全部依靠 DataSourceTransactionManager 类来完成, 包括当前事务上下文判断、从DataSource中获取Connection、设置隔离级别并关闭auto commit、设置线程共享的ThreadLocal存储dataSource获取到的Connection、以及最终的Connection commit or rollback.\n\n理解事务本质 以及 Spring对事务的封装:\n\n从原生JDBC API我们知道, 一个事务和一个Connection是强绑定的. 默认一个Connection的autoCommit会设置成true, 也就是每条执行的SQL默认都在一个事务里,并在执行完成后自动提交了. 若我们想让代码实现多个SQL在一个事务里执行, 本质上就是让这些SQL在一个autoCommit设置为false的Connection中执行, 并最终手动commit. DataSourceTransactionManager本质上也就是做了这个工作, 在@Transactional 注解的方法开始前, 获取到新的Connection, 设置隔离级别与autoCommit, 执行若干代码逻辑, 最终提交或回滚.  当遇到传播级别为REQUIRES_NEW的增强方法或想另起一个新事务执行一些SQL时, 就需再从DataSource获取一个新的Connection来进行.\n\n``` java\nprotected Object invokeWithinTransaction(Method method, Class<?> targetClass, final InvocationCallback invocation)\n\t\t\tthrows Throwable {\n\n\t\tfinal TransactionAttribute txAttr = getTransactionAttributeSource().getTransactionAttribute(method, targetClass);\n    // 获取DataSourceTransactionManager\n\t\tfinal PlatformTransactionManager tm = determineTransactionManager(txAttr);\n\t\tfinal String joinpointIdentification = methodIdentification(method, targetClass, txAttr);\n\t\t\n      // TransactionManager判断是否需要创建新事务, 即获取Connection\n\t\t\tTransactionInfo txInfo = createTransactionIfNecessary(tm, txAttr, joinpointIdentification);\n\t\t\tObject retVal = null;\n\t\t\ttry {\n\t\t\t\t// AOP 增强的原始方法\n\t\t\t\tretVal = invocation.proceedWithInvocation();\n\t\t\t}\n\t\t\tcatch (Throwable ex) {\n\t\t\t\t// 遇到异常选择性回滚事务\n\t\t\t\tcompleteTransactionAfterThrowing(txInfo, ex);\n\t\t\t\tthrow ex;\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\tcleanupTransactionInfo(txInfo);\n\t\t\t}\n      // 正常执行提交事务\n\t\t\tcommitTransactionAfterReturning(txInfo);\n\t\t\treturn retVal;\n}\n```\n\n## 生态三: ORM/持久层框架-MyBatis\n\n> 本节我们挑重点讲解, 详细源码分析可参考此文章:  [mybatis design concept](https://learn.lianglianglee.com/%E4%B8%93%E6%A0%8F/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90%20MyBatis%20%E6%A0%B8%E5%BF%83%E5%8E%9F%E7%90%86-%E5%AE%8C/03%20%20MyBatis%20%E6%BA%90%E7%A0%81%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E5%8F%8A%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84%E8%A7%A3%E6%9E%90.md)\n\nMyBatis官方Introduction: \n\nMyBatis 是一款优秀的持久层框架，它支持自定义 SQL、存储过程以及高级映射。**MyBatis 免除了几乎所有的 JDBC 代码以及设置参数和获取结果集的工作**。MyBatis 可以通过简单的 XML 或注解来配置和映射原始类型、Map、集合等接口和 Java POJO为数据库中的记录。\n\nMyBatis 分为三层架构，分别是**基础支撑层、核心处理层**和**接口层**，如下图所示：\n\n<img src=\"./mybatis-arch.png\" alt=\"image-20220405125449569\" style=\"zoom:30%;\" />\n\n+ 基础支撑层是整个 MyBatis 框架的地基，为整个 MyBatis 框架提供了底层基础的功能，其中每个模块都提供了一个内聚的、单一的能力;\t\n+ 核心处理层是 MyBatis 核心实现所在，其中涉及 MyBatis 的初始化以及执行一条 SQL 语句的全流程。\n+ 接口层是 MyBatis 暴露给调用的接口集合，这些接口都是使用 MyBatis 时最常用的一些接口，例如，SqlSession 接口、SqlSessionFactory 接口等。\n\nMyBatis执行过程以及对JDBC API的封装:\n\n<img src=\"./mybatis-execute.png\" alt=\"image-20220405132244101\" style=\"zoom:35%;\" />\n\nMyBatis与Spring的集成:\n\n我们在Spring框架内使用mybatis的时候, 要引入mybatis和mybatis-spring两个依赖, 前者是mybatis的所有核心逻辑的代码, 而后者负责整合spring框架能力, 其又引入了spring-jdbc以及spring-tx. \n\n<img src=\"./mybatis-package.png\" alt=\"image-20220419141734725\" style=\"zoom:50%;\" />\n\n一个 Transaction 的例子, 多个Dao在一个事务中执行的过程:\n\n```java\n    @Transactional\n    public void createOrder(Long userId, Long productId, Integer count) {\n        // 1. 创建订单\n        orderDao.insertOrder(Order.builder()\n                .userId(userId)\n                .productId(productId)\n                .count(count)\n                .build());\n\n        // 2. 减少商品库存\n        productDao.minusCount(productId, count);\n\n        // 3. 增加用户积分\n        userDao.addPoint(userId, count);\n    }\n```\n\nMyBatis框架的SQL执行是交给Executor负责的, Executor每次新建的时候会传入一个Transaction对象, 在与Spring整合的过程中, 会将MyBatis Configuration中的 TransactionFactory指定为 SpringManagedTransactionFactory, 其最终目标呢, 就是创建出 SpringManagedTransaction给 Executor使用. \n\nSpringManagedTransaction有什么特别的呢? \n\n``` java\n// SpringManagedTransaction 中的获取连接\nprivate void openConnection() throws SQLException {\n    // 通过Spring-jdbc暴露的 DataSourceUtils 获取Connection, 该Util会从当前线程上下文中判断是否存在事务, 并获取由之前Spring事务切面存入的 Connection\n    this.connection = DataSourceUtils.getConnection(this.dataSource);\n    this.autoCommit = this.connection.getAutoCommit();\n    this.isConnectionTransactional = DataSourceUtils.isConnectionTransactional(this.connection, this.dataSource);\n    // ...\n}\n\n// DataSourceUtils.getConnection方法内部逻辑\npublic static Connection getConnection(DataSource dataSource) {\n    // 从全局的TreadLocal中获取当前线程是否已有事务Connection\n    ConnectionHolder conHolder = TransactionSynchronizationManager.getResource(dataSource);\n\t\t// 有的话直接使用同一个Connection\n    if (conHolder != null && (conHolder.hasConnection() || conHolder.isSynchronizedWithTransaction())) {\n\t\t\tconHolder.requested();\n\t\t\tif (!conHolder.hasConnection()) {\n\t\t\t\tlogger.debug(\"Fetching resumed JDBC Connection from DataSource\");\n\t\t\t\tconHolder.setConnection(fetchConnection(dataSource));\n\t\t\t}\n\t\t\treturn conHolder.getConnection();\n\t\t}\n    // 线程上下文中没有事务连接, 新获取Connection执行后续SQL\n    Connection con = fetchConnection(dataSource);\n    // ...\n    return con;\n}\n```\n\n## 生态四: 分库分表\n\n### Sharding-JDBC (ShardingSphere-JDBC)\n\n官方介绍:\n\n定位为轻量级 Java 框架，在 Java 的 JDBC 层提供的额外服务。 它使用客户端直连数据库，以 jar 包形式提供服务，无需额外部署和依赖，可理解为增强版的 JDBC 驱动，完全兼容 JDBC 和各种 ORM 框架。\n\n- 适用于任何基于 JDBC 的 ORM 框架，如：JPA, Hibernate, Mybatis, Spring JDBC Template 或直接使用 JDBC；\n- 支持任何第三方的数据库连接池，如：DBCP, C3P0, BoneCP, HikariCP 等；\n- 支持任意实现 JDBC 规范的数据库，目前支持 MySQL，PostgreSQL，Oracle，SQLServer 以及任何可使用 JDBC 访问的数据库。\n\n![image-20220319220206599](./sharding-jdbc.png)\n\n故名思义, Sharding-JDBC, 叫这个名字, 那它一定是基于JDBC API进行的能力拓展. 我们可以看下其core包下结构便一目了然了:\n\n<img src=\"./sharding-core-package.png\" alt=\"image-20220418225313643\" style=\"zoom:50%;\" />\n\n为什么Sharding-JDBC能支持所有的ORM框架呢?  也正因为它直接在JDBC层进行的封装, 以 MyBatis 和 Sharding JDBC为例: \n\n<img src=\"./mybatis-sharding-jdbc.png\" alt=\"image-20220419152546734\" style=\"zoom:50%;\" />\n\nSharding-JDBC 为 JDBC DataSource接口实现了 ShardingDataSource, 其内部管理了多个数据源, 而上层使用时对多数据源完全无感. 在PrepareStatement阶段, Sharding-JDBC会根据要执行的SQL以及配置的分库分表Rule,  解析并路由出若干条执行单元, 并分别从对应连接池中获取连接, 并执行改写后的SQL. \n\n<img src=\"./sharding-jdbc-sequence.png\" alt=\"image-20220419153403836\" style=\"zoom: 25%;\" />\n\n分库分表配置示例:\n\n``` xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!--\n  ~ Licensed to the Apache Software Foundation (ASF) under one or more\n  ~ contributor license agreements.  See the NOTICE file distributed with\n  ~ this work for additional information regarding copyright ownership.\n  ~ The ASF licenses this file to You under the Apache License, Version 2.0\n  ~ (the \"License\"); you may not use this file except in compliance with\n  ~ the License.  You may obtain a copy of the License at\n  ~\n  ~     http://www.apache.org/licenses/LICENSE-2.0\n  ~\n  ~ Unless required by applicable law or agreed to in writing, software\n  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  ~ See the License for the specific language governing permissions and\n  ~ limitations under the License.\n  -->\n\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xmlns:context=\"http://www.springframework.org/schema/context\"\n       xmlns:tx=\"http://www.springframework.org/schema/tx\"\n       xmlns:sharding=\"http://shardingsphere.apache.org/schema/shardingsphere/sharding\"\n       xmlns:bean=\"http://www.springframework.org/schema/util\"\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n                        http://www.springframework.org/schema/beans/spring-beans.xsd \n                        http://www.springframework.org/schema/tx \n                        http://www.springframework.org/schema/tx/spring-tx.xsd\n                        http://www.springframework.org/schema/context \n                        http://www.springframework.org/schema/context/spring-context.xsd\n                        http://shardingsphere.apache.org/schema/shardingsphere/sharding\n                        http://shardingsphere.apache.org/schema/shardingsphere/sharding/sharding.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd\">\n    <context:component-scan base-package=\"org.apache.shardingsphere.example.core.mybatis\" />\n    \n    <bean id=\"demo_ds_0\" class=\"com.zaxxer.hikari.HikariDataSource\" destroy-method=\"close\">\n        <property name=\"driverClassName\" value=\"com.mysql.jdbc.Driver\"/>\n        <property name=\"jdbcUrl\" value=\"jdbc:mysql://localhost:3306/demo_ds_0?useSSL=false&amp;useUnicode=true&amp;characterEncoding=UTF-8\"/>\n        <property name=\"username\" value=\"root\"/>\n        <property name=\"password\" value=\"\"/>\n    </bean>\n    \n    <bean id=\"demo_ds_1\" class=\"com.zaxxer.hikari.HikariDataSource\" destroy-method=\"close\">\n        <property name=\"driverClassName\" value=\"com.mysql.jdbc.Driver\"/>\n        <property name=\"jdbcUrl\" value=\"jdbc:mysql://localhost:3306/demo_ds_1?useSSL=false&amp;useUnicode=true&amp;characterEncoding=UTF-8\"/>\n        <property name=\"username\" value=\"root\"/>\n        <property name=\"password\" value=\"\"/>\n    </bean>\n    \n    <sharding:inline-strategy id=\"databaseStrategy\" sharding-column=\"user_id\" algorithm-expression=\"demo_ds_${user_id % 2}\" />\n    <sharding:inline-strategy id=\"orderTableStrategy\" sharding-column=\"order_id\" algorithm-expression=\"t_order_${order_id % 2}\" />\n    <sharding:inline-strategy id=\"orderItemTableStrategy\" sharding-column=\"order_id\" algorithm-expression=\"t_order_item_${order_id % 2}\" />\n    \n    <bean:properties id=\"properties\">\n        <prop key=\"worker.id\">123</prop>\n    </bean:properties>\n    \n    <sharding:key-generator id=\"orderKeyGenerator\" type=\"SNOWFLAKE\" column=\"order_id\" props-ref=\"properties\" />\n    <sharding:key-generator id=\"itemKeyGenerator\" type=\"SNOWFLAKE\" column=\"order_item_id\" props-ref=\"properties\" />\n    \n    <sharding:data-source id=\"shardingDataSource\">\n        <sharding:sharding-rule data-source-names=\"demo_ds_0, demo_ds_1\">\n            <sharding:table-rules>\n                <sharding:table-rule logic-table=\"t_order\" actual-data-nodes=\"demo_ds_${0..1}.t_order_${0..1}\" database-strategy-ref=\"databaseStrategy\" table-strategy-ref=\"orderTableStrategy\" key-generator-ref=\"orderKeyGenerator\" />\n                <sharding:table-rule logic-table=\"t_order_item\" actual-data-nodes=\"demo_ds_${0..1}.t_order_item_${0..1}\" database-strategy-ref=\"databaseStrategy\" table-strategy-ref=\"orderItemTableStrategy\" key-generator-ref=\"itemKeyGenerator\" />\n            </sharding:table-rules>\n            <sharding:binding-table-rules>\n                <sharding:binding-table-rule logic-tables=\"t_order,t_order_item\"/>\n            </sharding:binding-table-rules>\n            <sharding:broadcast-table-rules>\n                <sharding:broadcast-table-rule table=\"t_address\"/>\n            </sharding:broadcast-table-rules>\n        </sharding:sharding-rule>\n        <sharding:props>\n            <prop key=\"sql.show\">false</prop>\n        </sharding:props>\n    </sharding:data-source>\n    \n    <bean id=\"transactionManager\" class=\"org.springframework.jdbc.datasource.DataSourceTransactionManager\">\n        <property name=\"dataSource\" ref=\"shardingDataSource\" />\n    </bean>\n    <tx:annotation-driven />\n    \n    <bean id=\"sqlSessionFactory\" class=\"org.mybatis.spring.SqlSessionFactoryBean\">\n        <property name=\"dataSource\" ref=\"shardingDataSource\"/>\n        <property name=\"mapperLocations\" value=\"classpath*:META-INF/mappers/*.xml\"/>\n    </bean>\n    \n    <bean class=\"org.mybatis.spring.mapper.MapperScannerConfigurer\">\n        <property name=\"basePackage\" value=\"org.apache.shardingsphere.example.core.mybatis.repository\"/>\n        <property name=\"sqlSessionFactoryBeanName\" value=\"sqlSessionFactory\"/>\n    </bean>\n</beans>\n\n```\n\n思考: 跨数据源事务一致性问题?\n\n## 生态五:  分布式事务... 待完成\n","slug":"shardingsphere","published":1,"updated":"2022-05-18T13:56:12.772Z","_id":"cl3bnaatf0000859rasdebkbd","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"JDBC-API及其上层生态\"><a href=\"#JDBC-API及其上层生态\" class=\"headerlink\" title=\"JDBC API及其上层生态\"></a>JDBC API及其上层生态</h1><p>JDBC API是JDK提供的, Java程序访问数据库的统一接口. 我们实际开发中使用的数据库连接池、ORM/持久层框架、分库分表等也无一例外是基于JDBC API的上层拓展与实现. 本文我们从底层出发, 逐个了解上层的封装细节.</p>\n<h2 id=\"JDBC-API基本介绍\"><a href=\"#JDBC-API基本介绍\" class=\"headerlink\" title=\"JDBC API基本介绍\"></a>JDBC API基本介绍</h2><h3 id=\"Oracle官方定义\"><a href=\"#Oracle官方定义\" class=\"headerlink\" title=\"Oracle官方定义:\"></a>Oracle官方定义:</h3><p><em>The Java Database Connectivity (JDBC) API provides universal data access from the Java programming language. Using the JDBC API, you can access virtually any data source, from relational databases to spreadsheets and flat files.</em> </p>\n<p>简单来说, JDBC是JDK提供的Java程序访问数据库资源的上层统一接口.  当Java程序要访问数据库时，Java代码可直接调用 JDBC接口，而JDBC接口底层通过Java SPI机制找到数据库厂商的JDBC驱动来实现对数据库的读写操作。</p>\n<img src=\"./jdbc-level.png\" alt=\"image-20220331212519941\" style=\"zoom:47%;\" />\n\n<h3 id=\"JDBC-API基础使用方法\"><a href=\"#JDBC-API基础使用方法\" class=\"headerlink\" title=\"JDBC API基础使用方法:\"></a>JDBC API基础使用方法:</h3><p>JDBC API包含两个包: java.sql 和 javax.sql , 其核心类和基本用法如下:</p>\n<img src=\"./jdbc-package.png\" alt=\"jdbc-package\" style=\"zoom:43%;\" />\n\n<ul>\n<li>通过DriverManager.getConnection()获取数据库驱动连接</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">DriverManager</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// List of registered JDBC drivers</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> CopyOnWriteArrayList&lt;DriverInfo&gt; registeredDrivers = <span class=\"keyword\">new</span> <span class=\"title class_\">CopyOnWriteArrayList</span>&lt;&gt;();</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 通过java SPI 注册声明的Driver实现到 registeredDrivers</span></span><br><span class=\"line\">        loadInitialDrivers();</span><br><span class=\"line\">        println(<span class=\"string\">&quot;JDBC DriverManager initialized&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// ... 略</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">synchronized</span> <span class=\"keyword\">void</span> <span class=\"title function_\">registerDriver</span><span class=\"params\">(java.sql.Driver driver,</span></span><br><span class=\"line\"><span class=\"params\">            DriverAction da)</span></span><br><span class=\"line\">        <span class=\"keyword\">throws</span> SQLException &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/* Register the driver if it has not already been added to our list */</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(driver != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            registeredDrivers.addIfAbsent(<span class=\"keyword\">new</span> <span class=\"title class_\">DriverInfo</span>(driver, da));</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// This is for compatibility with the original DriverManager</span></span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">NullPointerException</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        println(<span class=\"string\">&quot;registerDriver: &quot;</span> + driver);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// ... 略</span></span><br><span class=\"line\">    <span class=\"comment\">// 获取连接时最终遍历registeredDriver并connect</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Connection <span class=\"title function_\">getConnection</span><span class=\"params\">(String url,</span></span><br><span class=\"line\"><span class=\"params\">        java.util.Properties info)</span> <span class=\"keyword\">throws</span> SQLException &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> (getConnection(url, info, Reflection.getCallerClass()));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>查询数据</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">JDBC_URL</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;jdbc:mysql://localhost:3306/test&quot;</span>;</span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">JDBC_USER</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;root&quot;</span>;</span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">JDBC_PASSWORD</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;password&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span> (<span class=\"type\">Connection</span> <span class=\"variable\">conn</span> <span class=\"operator\">=</span> DriverManager.getConnection(JDBC_URL, JDBC_USER, JDBC_PASSWORD)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> (<span class=\"type\">PreparedStatement</span> <span class=\"variable\">ps</span> <span class=\"operator\">=</span> conn.prepareStatement(<span class=\"string\">&quot;SELECT id, grade, name, gender FROM students WHERE gender=? AND grade=?&quot;</span>)) &#123;</span><br><span class=\"line\">        ps.setObject(<span class=\"number\">1</span>, <span class=\"string\">&quot;M&quot;</span>); <span class=\"comment\">// 注意：索引从1开始</span></span><br><span class=\"line\">        ps.setObject(<span class=\"number\">2</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\">        <span class=\"keyword\">try</span> (<span class=\"type\">ResultSet</span> <span class=\"variable\">rs</span> <span class=\"operator\">=</span> ps.executeQuery()) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (rs.next()) &#123;</span><br><span class=\"line\">                <span class=\"type\">long</span> <span class=\"variable\">id</span> <span class=\"operator\">=</span> rs.getLong(<span class=\"string\">&quot;id&quot;</span>);</span><br><span class=\"line\">                <span class=\"type\">long</span> <span class=\"variable\">grade</span> <span class=\"operator\">=</span> rs.getLong(<span class=\"string\">&quot;grade&quot;</span>);</span><br><span class=\"line\">                <span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> rs.getString(<span class=\"string\">&quot;name&quot;</span>);</span><br><span class=\"line\">                <span class=\"type\">String</span> <span class=\"variable\">gender</span> <span class=\"operator\">=</span> rs.getString(<span class=\"string\">&quot;gender&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>插入、更新、删除数据</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// insert and get genrated key</span></span><br><span class=\"line\"><span class=\"keyword\">try</span> (<span class=\"type\">Connection</span> <span class=\"variable\">conn</span> <span class=\"operator\">=</span> DriverManager.getConnection(JDBC_URL, JDBC_USER, JDBC_PASSWORD)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> (<span class=\"type\">PreparedStatement</span> <span class=\"variable\">ps</span> <span class=\"operator\">=</span> conn.prepareStatement(</span><br><span class=\"line\">            <span class=\"string\">&quot;INSERT INTO students (grade, name, gender) VALUES (?,?,?)&quot;</span>,</span><br><span class=\"line\">            Statement.RETURN_GENERATED_KEYS)) &#123;</span><br><span class=\"line\">        ps.setObject(<span class=\"number\">1</span>, <span class=\"number\">1</span>); <span class=\"comment\">// grade</span></span><br><span class=\"line\">        ps.setObject(<span class=\"number\">2</span>, <span class=\"string\">&quot;Bob&quot;</span>); <span class=\"comment\">// name</span></span><br><span class=\"line\">        ps.setObject(<span class=\"number\">3</span>, <span class=\"string\">&quot;M&quot;</span>); <span class=\"comment\">// gender</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">n</span> <span class=\"operator\">=</span> ps.executeUpdate(); <span class=\"comment\">// 1</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span> (<span class=\"type\">ResultSet</span> <span class=\"variable\">rs</span> <span class=\"operator\">=</span> ps.getGeneratedKeys()) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (rs.next()) &#123;</span><br><span class=\"line\">                <span class=\"type\">long</span> <span class=\"variable\">id</span> <span class=\"operator\">=</span> rs.getLong(<span class=\"number\">1</span>); <span class=\"comment\">// 注意：索引从1开始</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// update</span></span><br><span class=\"line\"><span class=\"keyword\">try</span> (<span class=\"type\">Connection</span> <span class=\"variable\">conn</span> <span class=\"operator\">=</span> DriverManager.getConnection(JDBC_URL, JDBC_USER, JDBC_PASSWORD)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> (<span class=\"type\">PreparedStatement</span> <span class=\"variable\">ps</span> <span class=\"operator\">=</span> conn.prepareStatement(<span class=\"string\">&quot;UPDATE students SET name=? WHERE id=?&quot;</span>)) &#123;</span><br><span class=\"line\">        ps.setObject(<span class=\"number\">1</span>, <span class=\"string\">&quot;Bob&quot;</span>); <span class=\"comment\">// 注意：索引从1开始</span></span><br><span class=\"line\">        ps.setObject(<span class=\"number\">2</span>, <span class=\"number\">999</span>);</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">n</span> <span class=\"operator\">=</span> ps.executeUpdate(); <span class=\"comment\">// 返回更新的行数</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// delete</span></span><br><span class=\"line\"><span class=\"keyword\">try</span> (<span class=\"type\">Connection</span> <span class=\"variable\">conn</span> <span class=\"operator\">=</span> DriverManager.getConnection(JDBC_URL, JDBC_USER, JDBC_PASSWORD)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> (<span class=\"type\">PreparedStatement</span> <span class=\"variable\">ps</span> <span class=\"operator\">=</span> conn.prepareStatement(<span class=\"string\">&quot;DELETE FROM students WHERE id=?&quot;</span>)) &#123;</span><br><span class=\"line\">        ps.setObject(<span class=\"number\">1</span>, <span class=\"number\">999</span>); <span class=\"comment\">// 注意：索引从1开始</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">n</span> <span class=\"operator\">=</span> ps.executeUpdate(); <span class=\"comment\">// 删除的行数</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>事务操作,  默认每条sql语句都会在一个独立的事务中并被自动提交,  控制事务就是取消自动提交、执行多条sql并手动提交</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">Connection</span> <span class=\"variable\">conn</span> <span class=\"operator\">=</span> openConnection();</span><br><span class=\"line\"><span class=\"comment\">// 设定隔离级别为READ COMMITTED, 不设置使用mysql默认隔离级别</span></span><br><span class=\"line\">conn.setTransactionIsolation(Connection.TRANSACTION_READ_COMMITTED);</span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 关闭自动提交:</span></span><br><span class=\"line\">    conn.setAutoCommit(<span class=\"literal\">false</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行多条SQL语句:</span></span><br><span class=\"line\">    insert(); </span><br><span class=\"line\">    update();</span><br><span class=\"line\">    delete();</span><br><span class=\"line\">    <span class=\"comment\">// 提交事务:</span></span><br><span class=\"line\">    conn.commit();</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span> (SQLException e) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 回滚事务:</span></span><br><span class=\"line\">    conn.rollback();</span><br><span class=\"line\">&#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">    conn.setAutoCommit(<span class=\"literal\">true</span>);</span><br><span class=\"line\">    conn.close();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"DataSource接口\"><a href=\"#DataSource接口\" class=\"headerlink\" title=\"DataSource接口:\"></a>DataSource接口:</h3><p>官方javadoc:  </p>\n<p> <strong>A factory for connections</strong> to the physical data source that this DataSource object represents. An <strong>alternative to the DriverManager</strong> facility, a DataSource object is <strong>the preferred means of getting a connection</strong>. (总结)</p>\n<img src=\"/Users/talentxiet/Library/Application Support/typora-user-images/image-20220401190952211.png\" alt=\"image-20220401190952211\" style=\"zoom:50%;\" />\n\n<p>DataSource一般有三种实现:</p>\n<ol>\n<li>Basic 实现:  内部就是调用DriverManager中的数据库驱动获取连接. 例如Spring JDBC的DriverManagerDataSource.</li>\n<li>Connection pooling实现: 用池化技术复用连接. 例如Hikari的HikariDataSource.</li>\n<li>Distributed 实现: 可以产出能执行分布式SQL的Connection. 例如Sharding JDBC的ShardingDataSource.</li>\n</ol>\n<img src=\"./datasource-impl.png\" alt=\"image-20220401191629549\" style=\"zoom:50%;\" />\n\n<h2 id=\"生态一-数据库连接池\"><a href=\"#生态一-数据库连接池\" class=\"headerlink\" title=\"生态一: 数据库连接池\"></a>生态一: 数据库连接池</h2><p>每次读写访问都通过数据库驱动新建和销毁tcp连接的开销是昂贵的,  我们通常用连接池来初始化并复用已经创建好的连接. 连接池的开源实现非常多, 比如hikari, druid, tomcat-jdbc pool等. 不同实现模型和细节各有不同, 其优势也各有不同, 我们这里不一一展开了, 大家可以自行查看其benchmark相关文章.</p>\n<img src=\"./datasource-pool.png\" alt=\"image-20220401193526994\" style=\"zoom: 45%;\" />\n\n<p>连接池的大体模型都如上图所示: 数据库驱动连接的借用、归还、以及创建和销毁. 我们这里列出一些较通用的连接池配置点, 在实际使用过程中大家注意根据实际需要正确的配置即可. 下边示例是hikari的参数配置项.</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">connectionTimeout: 请求连接的超时时间</span><br><span class=\"line\">idleTimeout: 空闲连接回收时间</span><br><span class=\"line\">maxLifetime: 连接最大存活时间</span><br><span class=\"line\">connectionTestQuery: borrow到连接后测试连接有效的query语句</span><br><span class=\"line\">minimumIdle: 连接池中最小的闲置连接数, 总数不超过maximux的前提下hikari尽可能保证此参数数量</span><br><span class=\"line\">maximumPoolSize: 连接池中最大的连接数</span><br></pre></td></tr></table></figure>\n\n<p>此类数据库连接池通常也会产出详细的监控指标信息, 收集这类指标可以很好的辅助我们排障和了解线上资源使用情况, 常见指标(hikari为例)如下: </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">idleConnections: 当前闲置连接数</span><br><span class=\"line\">activeConnections: 当前活跃连接数</span><br><span class=\"line\">totalConnections: activeConnection + idleConnections</span><br><span class=\"line\">pendingThreads: 当前等待连接的线程数</span><br><span class=\"line\">maxConnections: 历史最大连接数</span><br><span class=\"line\">minConnections: 历史最小连接数</span><br><span class=\"line\">usageTime: 本次连接使用时间</span><br><span class=\"line\">acquireTime: 本次连接请求时间</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"生态二-spring-jdbc\"><a href=\"#生态二-spring-jdbc\" class=\"headerlink\" title=\"生态二: spring-jdbc\"></a>生态二: spring-jdbc</h2><p>spring-jdbc是Spring framework中的模块之一, 提供了Spring对原生JDBC API的实现和上层封装,其主要包含以下四个包:</p>\n<ul>\n<li><strong>core</strong>: 提供Spring封装后的核心功能接口及实现, 如 <em>JdbcOperations</em>, <em>JdbcTemplate</em>, <em>NamedParameterJdbcTemplate</em></li>\n<li><strong>datasource</strong>: 提供DataSource的实现及上层功能封装, 如 <em>DriverManagerDataSource</em>和 <em>DataSourceTransactionManager</em></li>\n<li><strong>object</strong>: 提供面向对象的SQL Query和Result返回结果封装</li>\n<li><strong>support</strong>: 提供上面包的一些通用support类</li>\n</ul>\n<p>spring-jdbc (包括其依赖的spring-tx) 可以帮我们简化一些开发流程: </p>\n<ul>\n<li>原始: 获取数据库连接、处理事务autocommit、声明SQL、预编译并执行、映射ResultSet结果集到期望对象、处理异常和事务、释放连接资源等一系列操作.</li>\n<li> spring-jdbc:  配置DataSource和JdbcTemplate, 声明SQL和结果映射方式、调用JdbcTemplate接口执行, 获取对象结果.</li>\n</ul>\n<p>简单使用示例如下:</p>\n<ul>\n<li>配置DataSource和JdbcTemplate</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"meta\">@PropertySource(&quot;jdbc.properties&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">AppConfig</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Value(&quot;$&#123;jdbc.url&#125;&quot;)</span></span><br><span class=\"line\">    String jdbcUrl;</span><br><span class=\"line\">    <span class=\"meta\">@Value(&quot;$&#123;jdbc.username&#125;&quot;)</span></span><br><span class=\"line\">    String jdbcUsername;</span><br><span class=\"line\">    <span class=\"meta\">@Value(&quot;$&#123;jdbc.password&#125;&quot;)</span></span><br><span class=\"line\">    String jdbcPassword;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    DataSource <span class=\"title function_\">createDataSource</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">HikariConfig</span> <span class=\"variable\">config</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">HikariConfig</span>();</span><br><span class=\"line\">        config.setJdbcUrl(jdbcUrl);</span><br><span class=\"line\">        config.setUsername(jdbcUsername);</span><br><span class=\"line\">        config.setPassword(jdbcPassword);</span><br><span class=\"line\">        config.addDataSourceProperty(<span class=\"string\">&quot;autoCommit&quot;</span>, <span class=\"string\">&quot;true&quot;</span>);</span><br><span class=\"line\">        config.addDataSourceProperty(<span class=\"string\">&quot;connectionTimeout&quot;</span>, <span class=\"string\">&quot;5&quot;</span>);</span><br><span class=\"line\">        config.addDataSourceProperty(<span class=\"string\">&quot;idleTimeout&quot;</span>, <span class=\"string\">&quot;60&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">HikariDataSource</span>(config);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    JdbcTemplate <span class=\"title function_\">createJdbcTemplate</span><span class=\"params\">(<span class=\"meta\">@Autowired</span> DataSource dataSource)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">JdbcTemplate</span>(dataSource);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>使用JdbcTemplate最为Dao层返回结果</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> List&lt;User&gt; <span class=\"title function_\">getUsers</span><span class=\"params\">(<span class=\"type\">int</span> pageIndex, <span class=\"type\">int</span> pageSize)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">limit</span> <span class=\"operator\">=</span> pageSize;</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">offset</span> <span class=\"operator\">=</span> limit * (pageIndex - <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> jdbcTemplate.query(<span class=\"string\">&quot;SELECT * FROM users LIMIT ? OFFSET ?&quot;</span>, <span class=\"keyword\">new</span> <span class=\"title class_\">Object</span>[] &#123; limit, offset &#125;,</span><br><span class=\"line\">            <span class=\"keyword\">new</span> <span class=\"title class_\">BeanPropertyRowMapper</span>&lt;&gt;(User.class));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>JdbcTemplate只是jdbc api的一些简单封装, 在实际开发中, 大多还是使用MyBatis、Hibernate此类的ORM框架, 更好的对底层操作进行封闭.  </p>\n<p>但spring-jdbc依赖的spring-tx包中对事务进行了抽象, 给我们提供了简单的 @Transactional 注解来为代码逻辑进行AOP事务增强.  其中增强逻辑的实现全部依靠 DataSourceTransactionManager 类来完成, 包括当前事务上下文判断、从DataSource中获取Connection、设置隔离级别并关闭auto commit、设置线程共享的ThreadLocal存储dataSource获取到的Connection、以及最终的Connection commit or rollback.</p>\n<p>理解事务本质 以及 Spring对事务的封装:</p>\n<p>从原生JDBC API我们知道, 一个事务和一个Connection是强绑定的. 默认一个Connection的autoCommit会设置成true, 也就是每条执行的SQL默认都在一个事务里,并在执行完成后自动提交了. 若我们想让代码实现多个SQL在一个事务里执行, 本质上就是让这些SQL在一个autoCommit设置为false的Connection中执行, 并最终手动commit. DataSourceTransactionManager本质上也就是做了这个工作, 在@Transactional 注解的方法开始前, 获取到新的Connection, 设置隔离级别与autoCommit, 执行若干代码逻辑, 最终提交或回滚.  当遇到传播级别为REQUIRES_NEW的增强方法或想另起一个新事务执行一些SQL时, 就需再从DataSource获取一个新的Connection来进行.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">protected</span> Object <span class=\"title function_\">invokeWithinTransaction</span><span class=\"params\">(Method method, Class&lt;?&gt; targetClass, <span class=\"keyword\">final</span> InvocationCallback invocation)</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">throws</span> Throwable &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">final</span> <span class=\"type\">TransactionAttribute</span> <span class=\"variable\">txAttr</span> <span class=\"operator\">=</span> getTransactionAttributeSource().getTransactionAttribute(method, targetClass);</span><br><span class=\"line\">    <span class=\"comment\">// 获取DataSourceTransactionManager</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">final</span> <span class=\"type\">PlatformTransactionManager</span> <span class=\"variable\">tm</span> <span class=\"operator\">=</span> determineTransactionManager(txAttr);</span><br><span class=\"line\">\t\t<span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">joinpointIdentification</span> <span class=\"operator\">=</span> methodIdentification(method, targetClass, txAttr);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">      <span class=\"comment\">// TransactionManager判断是否需要创建新事务, 即获取Connection</span></span><br><span class=\"line\">\t\t\t<span class=\"type\">TransactionInfo</span> <span class=\"variable\">txInfo</span> <span class=\"operator\">=</span> createTransactionIfNecessary(tm, txAttr, joinpointIdentification);</span><br><span class=\"line\">\t\t\t<span class=\"type\">Object</span> <span class=\"variable\">retVal</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// AOP 增强的原始方法</span></span><br><span class=\"line\">\t\t\t\tretVal = invocation.proceedWithInvocation();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">catch</span> (Throwable ex) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// 遇到异常选择性回滚事务</span></span><br><span class=\"line\">\t\t\t\tcompleteTransactionAfterThrowing(txInfo, ex);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">throw</span> ex;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">\t\t\t\tcleanupTransactionInfo(txInfo);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">      <span class=\"comment\">// 正常执行提交事务</span></span><br><span class=\"line\">\t\t\tcommitTransactionAfterReturning(txInfo);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> retVal;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"生态三-ORM-持久层框架-MyBatis\"><a href=\"#生态三-ORM-持久层框架-MyBatis\" class=\"headerlink\" title=\"生态三: ORM/持久层框架-MyBatis\"></a>生态三: ORM/持久层框架-MyBatis</h2><blockquote>\n<p>本节我们挑重点讲解, 详细源码分析可参考此文章:  <a href=\"https://learn.lianglianglee.com/%E4%B8%93%E6%A0%8F/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90%20MyBatis%20%E6%A0%B8%E5%BF%83%E5%8E%9F%E7%90%86-%E5%AE%8C/03%20%20MyBatis%20%E6%BA%90%E7%A0%81%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E5%8F%8A%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84%E8%A7%A3%E6%9E%90.md\">mybatis design concept</a></p>\n</blockquote>\n<p>MyBatis官方Introduction: </p>\n<p>MyBatis 是一款优秀的持久层框架，它支持自定义 SQL、存储过程以及高级映射。<strong>MyBatis 免除了几乎所有的 JDBC 代码以及设置参数和获取结果集的工作</strong>。MyBatis 可以通过简单的 XML 或注解来配置和映射原始类型、Map、集合等接口和 Java POJO为数据库中的记录。</p>\n<p>MyBatis 分为三层架构，分别是<strong>基础支撑层、核心处理层</strong>和<strong>接口层</strong>，如下图所示：</p>\n<img src=\"./mybatis-arch.png\" alt=\"image-20220405125449569\" style=\"zoom:30%;\" />\n\n<ul>\n<li>基础支撑层是整个 MyBatis 框架的地基，为整个 MyBatis 框架提供了底层基础的功能，其中每个模块都提供了一个内聚的、单一的能力;    </li>\n<li>核心处理层是 MyBatis 核心实现所在，其中涉及 MyBatis 的初始化以及执行一条 SQL 语句的全流程。</li>\n<li>接口层是 MyBatis 暴露给调用的接口集合，这些接口都是使用 MyBatis 时最常用的一些接口，例如，SqlSession 接口、SqlSessionFactory 接口等。</li>\n</ul>\n<p>MyBatis执行过程以及对JDBC API的封装:</p>\n<img src=\"./mybatis-execute.png\" alt=\"image-20220405132244101\" style=\"zoom:35%;\" />\n\n<p>MyBatis与Spring的集成:</p>\n<p>我们在Spring框架内使用mybatis的时候, 要引入mybatis和mybatis-spring两个依赖, 前者是mybatis的所有核心逻辑的代码, 而后者负责整合spring框架能力, 其又引入了spring-jdbc以及spring-tx. </p>\n<img src=\"./mybatis-package.png\" alt=\"image-20220419141734725\" style=\"zoom:50%;\" />\n\n<p>一个 Transaction 的例子, 多个Dao在一个事务中执行的过程:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Transactional</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">createOrder</span><span class=\"params\">(Long userId, Long productId, Integer count)</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 1. 创建订单</span></span><br><span class=\"line\">    orderDao.insertOrder(Order.builder()</span><br><span class=\"line\">            .userId(userId)</span><br><span class=\"line\">            .productId(productId)</span><br><span class=\"line\">            .count(count)</span><br><span class=\"line\">            .build());</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 2. 减少商品库存</span></span><br><span class=\"line\">    productDao.minusCount(productId, count);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 3. 增加用户积分</span></span><br><span class=\"line\">    userDao.addPoint(userId, count);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>MyBatis框架的SQL执行是交给Executor负责的, Executor每次新建的时候会传入一个Transaction对象, 在与Spring整合的过程中, 会将MyBatis Configuration中的 TransactionFactory指定为 SpringManagedTransactionFactory, 其最终目标呢, 就是创建出 SpringManagedTransaction给 Executor使用. </p>\n<p>SpringManagedTransaction有什么特别的呢? </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// SpringManagedTransaction 中的获取连接</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">openConnection</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> SQLException &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 通过Spring-jdbc暴露的 DataSourceUtils 获取Connection, 该Util会从当前线程上下文中判断是否存在事务, 并获取由之前Spring事务切面存入的 Connection</span></span><br><span class=\"line\">    <span class=\"built_in\">this</span>.connection = DataSourceUtils.getConnection(<span class=\"built_in\">this</span>.dataSource);</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.autoCommit = <span class=\"built_in\">this</span>.connection.getAutoCommit();</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.isConnectionTransactional = DataSourceUtils.isConnectionTransactional(<span class=\"built_in\">this</span>.connection, <span class=\"built_in\">this</span>.dataSource);</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// DataSourceUtils.getConnection方法内部逻辑</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Connection <span class=\"title function_\">getConnection</span><span class=\"params\">(DataSource dataSource)</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 从全局的TreadLocal中获取当前线程是否已有事务Connection</span></span><br><span class=\"line\">    <span class=\"type\">ConnectionHolder</span> <span class=\"variable\">conHolder</span> <span class=\"operator\">=</span> TransactionSynchronizationManager.getResource(dataSource);</span><br><span class=\"line\">\t\t<span class=\"comment\">// 有的话直接使用同一个Connection</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (conHolder != <span class=\"literal\">null</span> &amp;&amp; (conHolder.hasConnection() || conHolder.isSynchronizedWithTransaction())) &#123;</span><br><span class=\"line\">\t\t\tconHolder.requested();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!conHolder.hasConnection()) &#123;</span><br><span class=\"line\">\t\t\t\tlogger.debug(<span class=\"string\">&quot;Fetching resumed JDBC Connection from DataSource&quot;</span>);</span><br><span class=\"line\">\t\t\t\tconHolder.setConnection(fetchConnection(dataSource));</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> conHolder.getConnection();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">    <span class=\"comment\">// 线程上下文中没有事务连接, 新获取Connection执行后续SQL</span></span><br><span class=\"line\">    <span class=\"type\">Connection</span> <span class=\"variable\">con</span> <span class=\"operator\">=</span> fetchConnection(dataSource);</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> con;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"生态四-分库分表\"><a href=\"#生态四-分库分表\" class=\"headerlink\" title=\"生态四: 分库分表\"></a>生态四: 分库分表</h2><h3 id=\"Sharding-JDBC-ShardingSphere-JDBC\"><a href=\"#Sharding-JDBC-ShardingSphere-JDBC\" class=\"headerlink\" title=\"Sharding-JDBC (ShardingSphere-JDBC)\"></a>Sharding-JDBC (ShardingSphere-JDBC)</h3><p>官方介绍:</p>\n<p>定位为轻量级 Java 框架，在 Java 的 JDBC 层提供的额外服务。 它使用客户端直连数据库，以 jar 包形式提供服务，无需额外部署和依赖，可理解为增强版的 JDBC 驱动，完全兼容 JDBC 和各种 ORM 框架。</p>\n<ul>\n<li>适用于任何基于 JDBC 的 ORM 框架，如：JPA, Hibernate, Mybatis, Spring JDBC Template 或直接使用 JDBC；</li>\n<li>支持任何第三方的数据库连接池，如：DBCP, C3P0, BoneCP, HikariCP 等；</li>\n<li>支持任意实现 JDBC 规范的数据库，目前支持 MySQL，PostgreSQL，Oracle，SQLServer 以及任何可使用 JDBC 访问的数据库。</li>\n</ul>\n<img src=\"/2022/03/19/shardingsphere/sharding-jdbc.png\" class=\"\" title=\"image-20220319220206599\">\n\n<p>故名思义, Sharding-JDBC, 叫这个名字, 那它一定是基于JDBC API进行的能力拓展. 我们可以看下其core包下结构便一目了然了:</p>\n<img src=\"./sharding-core-package.png\" alt=\"image-20220418225313643\" style=\"zoom:50%;\" />\n\n<p>为什么Sharding-JDBC能支持所有的ORM框架呢?  也正因为它直接在JDBC层进行的封装, 以 MyBatis 和 Sharding JDBC为例: </p>\n<img src=\"./mybatis-sharding-jdbc.png\" alt=\"image-20220419152546734\" style=\"zoom:50%;\" />\n\n<p>Sharding-JDBC 为 JDBC DataSource接口实现了 ShardingDataSource, 其内部管理了多个数据源, 而上层使用时对多数据源完全无感. 在PrepareStatement阶段, Sharding-JDBC会根据要执行的SQL以及配置的分库分表Rule,  解析并路由出若干条执行单元, 并分别从对应连接池中获取连接, 并执行改写后的SQL. </p>\n<img src=\"./sharding-jdbc-sequence.png\" alt=\"image-20220419153403836\" style=\"zoom: 25%;\" />\n\n<p>分库分表配置示例:</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">  ~ Licensed to the Apache Software Foundation (ASF) under one or more</span></span><br><span class=\"line\"><span class=\"comment\">  ~ contributor license agreements.  See the NOTICE file distributed with</span></span><br><span class=\"line\"><span class=\"comment\">  ~ this work for additional information regarding copyright ownership.</span></span><br><span class=\"line\"><span class=\"comment\">  ~ The ASF licenses this file to You under the Apache License, Version 2.0</span></span><br><span class=\"line\"><span class=\"comment\">  ~ (the &quot;License&quot;); you may not use this file except in compliance with</span></span><br><span class=\"line\"><span class=\"comment\">  ~ the License.  You may obtain a copy of the License at</span></span><br><span class=\"line\"><span class=\"comment\">  ~</span></span><br><span class=\"line\"><span class=\"comment\">  ~     http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class=\"line\"><span class=\"comment\">  ~</span></span><br><span class=\"line\"><span class=\"comment\">  ~ Unless required by applicable law or agreed to in writing, software</span></span><br><span class=\"line\"><span class=\"comment\">  ~ distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></span><br><span class=\"line\"><span class=\"comment\">  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class=\"line\"><span class=\"comment\">  ~ See the License for the specific language governing permissions and</span></span><br><span class=\"line\"><span class=\"comment\">  ~ limitations under the License.</span></span><br><span class=\"line\"><span class=\"comment\">  --&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:context</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:tx</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/tx&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:sharding</span>=<span class=\"string\">&quot;http://shardingsphere.apache.org/schema/shardingsphere/sharding&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:bean</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/util&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">                        http://www.springframework.org/schema/beans/spring-beans.xsd </span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">                        http://www.springframework.org/schema/tx </span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">                        http://www.springframework.org/schema/tx/spring-tx.xsd</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">                        http://www.springframework.org/schema/context </span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">                        http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">                        http://shardingsphere.apache.org/schema/shardingsphere/sharding</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">                        http://shardingsphere.apache.org/schema/shardingsphere/sharding/sharding.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">context:component-scan</span> <span class=\"attr\">base-package</span>=<span class=\"string\">&quot;org.apache.shardingsphere.example.core.mybatis&quot;</span> /&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;demo_ds_0&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.zaxxer.hikari.HikariDataSource&quot;</span> <span class=\"attr\">destroy-method</span>=<span class=\"string\">&quot;close&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;driverClassName&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;jdbcUrl&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;jdbc:mysql://localhost:3306/demo_ds_0?useSSL=false<span class=\"symbol\">&amp;amp;</span>useUnicode=true<span class=\"symbol\">&amp;amp;</span>characterEncoding=UTF-8&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;root&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;demo_ds_1&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.zaxxer.hikari.HikariDataSource&quot;</span> <span class=\"attr\">destroy-method</span>=<span class=\"string\">&quot;close&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;driverClassName&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;jdbcUrl&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;jdbc:mysql://localhost:3306/demo_ds_1?useSSL=false<span class=\"symbol\">&amp;amp;</span>useUnicode=true<span class=\"symbol\">&amp;amp;</span>characterEncoding=UTF-8&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;root&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">sharding:inline-strategy</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;databaseStrategy&quot;</span> <span class=\"attr\">sharding-column</span>=<span class=\"string\">&quot;user_id&quot;</span> <span class=\"attr\">algorithm-expression</span>=<span class=\"string\">&quot;demo_ds_$&#123;user_id % 2&#125;&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">sharding:inline-strategy</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;orderTableStrategy&quot;</span> <span class=\"attr\">sharding-column</span>=<span class=\"string\">&quot;order_id&quot;</span> <span class=\"attr\">algorithm-expression</span>=<span class=\"string\">&quot;t_order_$&#123;order_id % 2&#125;&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">sharding:inline-strategy</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;orderItemTableStrategy&quot;</span> <span class=\"attr\">sharding-column</span>=<span class=\"string\">&quot;order_id&quot;</span> <span class=\"attr\">algorithm-expression</span>=<span class=\"string\">&quot;t_order_item_$&#123;order_id % 2&#125;&quot;</span> /&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean:properties</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;properties&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">prop</span> <span class=\"attr\">key</span>=<span class=\"string\">&quot;worker.id&quot;</span>&gt;</span>123<span class=\"tag\">&lt;/<span class=\"name\">prop</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean:properties</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">sharding:key-generator</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;orderKeyGenerator&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;SNOWFLAKE&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;order_id&quot;</span> <span class=\"attr\">props-ref</span>=<span class=\"string\">&quot;properties&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">sharding:key-generator</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;itemKeyGenerator&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;SNOWFLAKE&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;order_item_id&quot;</span> <span class=\"attr\">props-ref</span>=<span class=\"string\">&quot;properties&quot;</span> /&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">sharding:data-source</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;shardingDataSource&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">sharding:sharding-rule</span> <span class=\"attr\">data-source-names</span>=<span class=\"string\">&quot;demo_ds_0, demo_ds_1&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">sharding:table-rules</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">sharding:table-rule</span> <span class=\"attr\">logic-table</span>=<span class=\"string\">&quot;t_order&quot;</span> <span class=\"attr\">actual-data-nodes</span>=<span class=\"string\">&quot;demo_ds_$&#123;0..1&#125;.t_order_$&#123;0..1&#125;&quot;</span> <span class=\"attr\">database-strategy-ref</span>=<span class=\"string\">&quot;databaseStrategy&quot;</span> <span class=\"attr\">table-strategy-ref</span>=<span class=\"string\">&quot;orderTableStrategy&quot;</span> <span class=\"attr\">key-generator-ref</span>=<span class=\"string\">&quot;orderKeyGenerator&quot;</span> /&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">sharding:table-rule</span> <span class=\"attr\">logic-table</span>=<span class=\"string\">&quot;t_order_item&quot;</span> <span class=\"attr\">actual-data-nodes</span>=<span class=\"string\">&quot;demo_ds_$&#123;0..1&#125;.t_order_item_$&#123;0..1&#125;&quot;</span> <span class=\"attr\">database-strategy-ref</span>=<span class=\"string\">&quot;databaseStrategy&quot;</span> <span class=\"attr\">table-strategy-ref</span>=<span class=\"string\">&quot;orderItemTableStrategy&quot;</span> <span class=\"attr\">key-generator-ref</span>=<span class=\"string\">&quot;itemKeyGenerator&quot;</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">sharding:table-rules</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">sharding:binding-table-rules</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">sharding:binding-table-rule</span> <span class=\"attr\">logic-tables</span>=<span class=\"string\">&quot;t_order,t_order_item&quot;</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">sharding:binding-table-rules</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">sharding:broadcast-table-rules</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">sharding:broadcast-table-rule</span> <span class=\"attr\">table</span>=<span class=\"string\">&quot;t_address&quot;</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">sharding:broadcast-table-rules</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">sharding:sharding-rule</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">sharding:props</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">prop</span> <span class=\"attr\">key</span>=<span class=\"string\">&quot;sql.show&quot;</span>&gt;</span>false<span class=\"tag\">&lt;/<span class=\"name\">prop</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">sharding:props</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">sharding:data-source</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;transactionManager&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;dataSource&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;shardingDataSource&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tx:annotation-driven</span> /&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;sqlSessionFactory&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;dataSource&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;shardingDataSource&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;mapperLocations&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;classpath*:META-INF/mappers/*.xml&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;basePackage&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;org.apache.shardingsphere.example.core.mybatis.repository&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;sqlSessionFactoryBeanName&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;sqlSessionFactory&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>思考: 跨数据源事务一致性问题?</p>\n<h2 id=\"生态五-分布式事务…-待完成\"><a href=\"#生态五-分布式事务…-待完成\" class=\"headerlink\" title=\"生态五:  分布式事务… 待完成\"></a>生态五:  分布式事务… 待完成</h2>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"JDBC-API及其上层生态\"><a href=\"#JDBC-API及其上层生态\" class=\"headerlink\" title=\"JDBC API及其上层生态\"></a>JDBC API及其上层生态</h1><p>JDBC API是JDK提供的, Java程序访问数据库的统一接口. 我们实际开发中使用的数据库连接池、ORM/持久层框架、分库分表等也无一例外是基于JDBC API的上层拓展与实现. 本文我们从底层出发, 逐个了解上层的封装细节.</p>\n<h2 id=\"JDBC-API基本介绍\"><a href=\"#JDBC-API基本介绍\" class=\"headerlink\" title=\"JDBC API基本介绍\"></a>JDBC API基本介绍</h2><h3 id=\"Oracle官方定义\"><a href=\"#Oracle官方定义\" class=\"headerlink\" title=\"Oracle官方定义:\"></a>Oracle官方定义:</h3><p><em>The Java Database Connectivity (JDBC) API provides universal data access from the Java programming language. Using the JDBC API, you can access virtually any data source, from relational databases to spreadsheets and flat files.</em> </p>\n<p>简单来说, JDBC是JDK提供的Java程序访问数据库资源的上层统一接口.  当Java程序要访问数据库时，Java代码可直接调用 JDBC接口，而JDBC接口底层通过Java SPI机制找到数据库厂商的JDBC驱动来实现对数据库的读写操作。</p>\n<img src=\"./jdbc-level.png\" alt=\"image-20220331212519941\" style=\"zoom:47%;\" />\n\n<h3 id=\"JDBC-API基础使用方法\"><a href=\"#JDBC-API基础使用方法\" class=\"headerlink\" title=\"JDBC API基础使用方法:\"></a>JDBC API基础使用方法:</h3><p>JDBC API包含两个包: java.sql 和 javax.sql , 其核心类和基本用法如下:</p>\n<img src=\"./jdbc-package.png\" alt=\"jdbc-package\" style=\"zoom:43%;\" />\n\n<ul>\n<li>通过DriverManager.getConnection()获取数据库驱动连接</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">DriverManager</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// List of registered JDBC drivers</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> CopyOnWriteArrayList&lt;DriverInfo&gt; registeredDrivers = <span class=\"keyword\">new</span> <span class=\"title class_\">CopyOnWriteArrayList</span>&lt;&gt;();</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 通过java SPI 注册声明的Driver实现到 registeredDrivers</span></span><br><span class=\"line\">        loadInitialDrivers();</span><br><span class=\"line\">        println(<span class=\"string\">&quot;JDBC DriverManager initialized&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// ... 略</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">synchronized</span> <span class=\"keyword\">void</span> <span class=\"title function_\">registerDriver</span><span class=\"params\">(java.sql.Driver driver,</span></span><br><span class=\"line\"><span class=\"params\">            DriverAction da)</span></span><br><span class=\"line\">        <span class=\"keyword\">throws</span> SQLException &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/* Register the driver if it has not already been added to our list */</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(driver != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            registeredDrivers.addIfAbsent(<span class=\"keyword\">new</span> <span class=\"title class_\">DriverInfo</span>(driver, da));</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// This is for compatibility with the original DriverManager</span></span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">NullPointerException</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        println(<span class=\"string\">&quot;registerDriver: &quot;</span> + driver);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// ... 略</span></span><br><span class=\"line\">    <span class=\"comment\">// 获取连接时最终遍历registeredDriver并connect</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Connection <span class=\"title function_\">getConnection</span><span class=\"params\">(String url,</span></span><br><span class=\"line\"><span class=\"params\">        java.util.Properties info)</span> <span class=\"keyword\">throws</span> SQLException &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> (getConnection(url, info, Reflection.getCallerClass()));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>查询数据</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">JDBC_URL</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;jdbc:mysql://localhost:3306/test&quot;</span>;</span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">JDBC_USER</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;root&quot;</span>;</span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">JDBC_PASSWORD</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;password&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span> (<span class=\"type\">Connection</span> <span class=\"variable\">conn</span> <span class=\"operator\">=</span> DriverManager.getConnection(JDBC_URL, JDBC_USER, JDBC_PASSWORD)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> (<span class=\"type\">PreparedStatement</span> <span class=\"variable\">ps</span> <span class=\"operator\">=</span> conn.prepareStatement(<span class=\"string\">&quot;SELECT id, grade, name, gender FROM students WHERE gender=? AND grade=?&quot;</span>)) &#123;</span><br><span class=\"line\">        ps.setObject(<span class=\"number\">1</span>, <span class=\"string\">&quot;M&quot;</span>); <span class=\"comment\">// 注意：索引从1开始</span></span><br><span class=\"line\">        ps.setObject(<span class=\"number\">2</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\">        <span class=\"keyword\">try</span> (<span class=\"type\">ResultSet</span> <span class=\"variable\">rs</span> <span class=\"operator\">=</span> ps.executeQuery()) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (rs.next()) &#123;</span><br><span class=\"line\">                <span class=\"type\">long</span> <span class=\"variable\">id</span> <span class=\"operator\">=</span> rs.getLong(<span class=\"string\">&quot;id&quot;</span>);</span><br><span class=\"line\">                <span class=\"type\">long</span> <span class=\"variable\">grade</span> <span class=\"operator\">=</span> rs.getLong(<span class=\"string\">&quot;grade&quot;</span>);</span><br><span class=\"line\">                <span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> rs.getString(<span class=\"string\">&quot;name&quot;</span>);</span><br><span class=\"line\">                <span class=\"type\">String</span> <span class=\"variable\">gender</span> <span class=\"operator\">=</span> rs.getString(<span class=\"string\">&quot;gender&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>插入、更新、删除数据</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// insert and get genrated key</span></span><br><span class=\"line\"><span class=\"keyword\">try</span> (<span class=\"type\">Connection</span> <span class=\"variable\">conn</span> <span class=\"operator\">=</span> DriverManager.getConnection(JDBC_URL, JDBC_USER, JDBC_PASSWORD)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> (<span class=\"type\">PreparedStatement</span> <span class=\"variable\">ps</span> <span class=\"operator\">=</span> conn.prepareStatement(</span><br><span class=\"line\">            <span class=\"string\">&quot;INSERT INTO students (grade, name, gender) VALUES (?,?,?)&quot;</span>,</span><br><span class=\"line\">            Statement.RETURN_GENERATED_KEYS)) &#123;</span><br><span class=\"line\">        ps.setObject(<span class=\"number\">1</span>, <span class=\"number\">1</span>); <span class=\"comment\">// grade</span></span><br><span class=\"line\">        ps.setObject(<span class=\"number\">2</span>, <span class=\"string\">&quot;Bob&quot;</span>); <span class=\"comment\">// name</span></span><br><span class=\"line\">        ps.setObject(<span class=\"number\">3</span>, <span class=\"string\">&quot;M&quot;</span>); <span class=\"comment\">// gender</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">n</span> <span class=\"operator\">=</span> ps.executeUpdate(); <span class=\"comment\">// 1</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span> (<span class=\"type\">ResultSet</span> <span class=\"variable\">rs</span> <span class=\"operator\">=</span> ps.getGeneratedKeys()) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (rs.next()) &#123;</span><br><span class=\"line\">                <span class=\"type\">long</span> <span class=\"variable\">id</span> <span class=\"operator\">=</span> rs.getLong(<span class=\"number\">1</span>); <span class=\"comment\">// 注意：索引从1开始</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// update</span></span><br><span class=\"line\"><span class=\"keyword\">try</span> (<span class=\"type\">Connection</span> <span class=\"variable\">conn</span> <span class=\"operator\">=</span> DriverManager.getConnection(JDBC_URL, JDBC_USER, JDBC_PASSWORD)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> (<span class=\"type\">PreparedStatement</span> <span class=\"variable\">ps</span> <span class=\"operator\">=</span> conn.prepareStatement(<span class=\"string\">&quot;UPDATE students SET name=? WHERE id=?&quot;</span>)) &#123;</span><br><span class=\"line\">        ps.setObject(<span class=\"number\">1</span>, <span class=\"string\">&quot;Bob&quot;</span>); <span class=\"comment\">// 注意：索引从1开始</span></span><br><span class=\"line\">        ps.setObject(<span class=\"number\">2</span>, <span class=\"number\">999</span>);</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">n</span> <span class=\"operator\">=</span> ps.executeUpdate(); <span class=\"comment\">// 返回更新的行数</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// delete</span></span><br><span class=\"line\"><span class=\"keyword\">try</span> (<span class=\"type\">Connection</span> <span class=\"variable\">conn</span> <span class=\"operator\">=</span> DriverManager.getConnection(JDBC_URL, JDBC_USER, JDBC_PASSWORD)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> (<span class=\"type\">PreparedStatement</span> <span class=\"variable\">ps</span> <span class=\"operator\">=</span> conn.prepareStatement(<span class=\"string\">&quot;DELETE FROM students WHERE id=?&quot;</span>)) &#123;</span><br><span class=\"line\">        ps.setObject(<span class=\"number\">1</span>, <span class=\"number\">999</span>); <span class=\"comment\">// 注意：索引从1开始</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">n</span> <span class=\"operator\">=</span> ps.executeUpdate(); <span class=\"comment\">// 删除的行数</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>事务操作,  默认每条sql语句都会在一个独立的事务中并被自动提交,  控制事务就是取消自动提交、执行多条sql并手动提交</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">Connection</span> <span class=\"variable\">conn</span> <span class=\"operator\">=</span> openConnection();</span><br><span class=\"line\"><span class=\"comment\">// 设定隔离级别为READ COMMITTED, 不设置使用mysql默认隔离级别</span></span><br><span class=\"line\">conn.setTransactionIsolation(Connection.TRANSACTION_READ_COMMITTED);</span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 关闭自动提交:</span></span><br><span class=\"line\">    conn.setAutoCommit(<span class=\"literal\">false</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行多条SQL语句:</span></span><br><span class=\"line\">    insert(); </span><br><span class=\"line\">    update();</span><br><span class=\"line\">    delete();</span><br><span class=\"line\">    <span class=\"comment\">// 提交事务:</span></span><br><span class=\"line\">    conn.commit();</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span> (SQLException e) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 回滚事务:</span></span><br><span class=\"line\">    conn.rollback();</span><br><span class=\"line\">&#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">    conn.setAutoCommit(<span class=\"literal\">true</span>);</span><br><span class=\"line\">    conn.close();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"DataSource接口\"><a href=\"#DataSource接口\" class=\"headerlink\" title=\"DataSource接口:\"></a>DataSource接口:</h3><p>官方javadoc:  </p>\n<p> <strong>A factory for connections</strong> to the physical data source that this DataSource object represents. An <strong>alternative to the DriverManager</strong> facility, a DataSource object is <strong>the preferred means of getting a connection</strong>. (总结)</p>\n<img src=\"/Users/talentxiet/Library/Application Support/typora-user-images/image-20220401190952211.png\" alt=\"image-20220401190952211\" style=\"zoom:50%;\" />\n\n<p>DataSource一般有三种实现:</p>\n<ol>\n<li>Basic 实现:  内部就是调用DriverManager中的数据库驱动获取连接. 例如Spring JDBC的DriverManagerDataSource.</li>\n<li>Connection pooling实现: 用池化技术复用连接. 例如Hikari的HikariDataSource.</li>\n<li>Distributed 实现: 可以产出能执行分布式SQL的Connection. 例如Sharding JDBC的ShardingDataSource.</li>\n</ol>\n<img src=\"./datasource-impl.png\" alt=\"image-20220401191629549\" style=\"zoom:50%;\" />\n\n<h2 id=\"生态一-数据库连接池\"><a href=\"#生态一-数据库连接池\" class=\"headerlink\" title=\"生态一: 数据库连接池\"></a>生态一: 数据库连接池</h2><p>每次读写访问都通过数据库驱动新建和销毁tcp连接的开销是昂贵的,  我们通常用连接池来初始化并复用已经创建好的连接. 连接池的开源实现非常多, 比如hikari, druid, tomcat-jdbc pool等. 不同实现模型和细节各有不同, 其优势也各有不同, 我们这里不一一展开了, 大家可以自行查看其benchmark相关文章.</p>\n<img src=\"./datasource-pool.png\" alt=\"image-20220401193526994\" style=\"zoom: 45%;\" />\n\n<p>连接池的大体模型都如上图所示: 数据库驱动连接的借用、归还、以及创建和销毁. 我们这里列出一些较通用的连接池配置点, 在实际使用过程中大家注意根据实际需要正确的配置即可. 下边示例是hikari的参数配置项.</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">connectionTimeout: 请求连接的超时时间</span><br><span class=\"line\">idleTimeout: 空闲连接回收时间</span><br><span class=\"line\">maxLifetime: 连接最大存活时间</span><br><span class=\"line\">connectionTestQuery: borrow到连接后测试连接有效的query语句</span><br><span class=\"line\">minimumIdle: 连接池中最小的闲置连接数, 总数不超过maximux的前提下hikari尽可能保证此参数数量</span><br><span class=\"line\">maximumPoolSize: 连接池中最大的连接数</span><br></pre></td></tr></table></figure>\n\n<p>此类数据库连接池通常也会产出详细的监控指标信息, 收集这类指标可以很好的辅助我们排障和了解线上资源使用情况, 常见指标(hikari为例)如下: </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">idleConnections: 当前闲置连接数</span><br><span class=\"line\">activeConnections: 当前活跃连接数</span><br><span class=\"line\">totalConnections: activeConnection + idleConnections</span><br><span class=\"line\">pendingThreads: 当前等待连接的线程数</span><br><span class=\"line\">maxConnections: 历史最大连接数</span><br><span class=\"line\">minConnections: 历史最小连接数</span><br><span class=\"line\">usageTime: 本次连接使用时间</span><br><span class=\"line\">acquireTime: 本次连接请求时间</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"生态二-spring-jdbc\"><a href=\"#生态二-spring-jdbc\" class=\"headerlink\" title=\"生态二: spring-jdbc\"></a>生态二: spring-jdbc</h2><p>spring-jdbc是Spring framework中的模块之一, 提供了Spring对原生JDBC API的实现和上层封装,其主要包含以下四个包:</p>\n<ul>\n<li><strong>core</strong>: 提供Spring封装后的核心功能接口及实现, 如 <em>JdbcOperations</em>, <em>JdbcTemplate</em>, <em>NamedParameterJdbcTemplate</em></li>\n<li><strong>datasource</strong>: 提供DataSource的实现及上层功能封装, 如 <em>DriverManagerDataSource</em>和 <em>DataSourceTransactionManager</em></li>\n<li><strong>object</strong>: 提供面向对象的SQL Query和Result返回结果封装</li>\n<li><strong>support</strong>: 提供上面包的一些通用support类</li>\n</ul>\n<p>spring-jdbc (包括其依赖的spring-tx) 可以帮我们简化一些开发流程: </p>\n<ul>\n<li>原始: 获取数据库连接、处理事务autocommit、声明SQL、预编译并执行、映射ResultSet结果集到期望对象、处理异常和事务、释放连接资源等一系列操作.</li>\n<li> spring-jdbc:  配置DataSource和JdbcTemplate, 声明SQL和结果映射方式、调用JdbcTemplate接口执行, 获取对象结果.</li>\n</ul>\n<p>简单使用示例如下:</p>\n<ul>\n<li>配置DataSource和JdbcTemplate</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"meta\">@PropertySource(&quot;jdbc.properties&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">AppConfig</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Value(&quot;$&#123;jdbc.url&#125;&quot;)</span></span><br><span class=\"line\">    String jdbcUrl;</span><br><span class=\"line\">    <span class=\"meta\">@Value(&quot;$&#123;jdbc.username&#125;&quot;)</span></span><br><span class=\"line\">    String jdbcUsername;</span><br><span class=\"line\">    <span class=\"meta\">@Value(&quot;$&#123;jdbc.password&#125;&quot;)</span></span><br><span class=\"line\">    String jdbcPassword;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    DataSource <span class=\"title function_\">createDataSource</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">HikariConfig</span> <span class=\"variable\">config</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">HikariConfig</span>();</span><br><span class=\"line\">        config.setJdbcUrl(jdbcUrl);</span><br><span class=\"line\">        config.setUsername(jdbcUsername);</span><br><span class=\"line\">        config.setPassword(jdbcPassword);</span><br><span class=\"line\">        config.addDataSourceProperty(<span class=\"string\">&quot;autoCommit&quot;</span>, <span class=\"string\">&quot;true&quot;</span>);</span><br><span class=\"line\">        config.addDataSourceProperty(<span class=\"string\">&quot;connectionTimeout&quot;</span>, <span class=\"string\">&quot;5&quot;</span>);</span><br><span class=\"line\">        config.addDataSourceProperty(<span class=\"string\">&quot;idleTimeout&quot;</span>, <span class=\"string\">&quot;60&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">HikariDataSource</span>(config);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    JdbcTemplate <span class=\"title function_\">createJdbcTemplate</span><span class=\"params\">(<span class=\"meta\">@Autowired</span> DataSource dataSource)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">JdbcTemplate</span>(dataSource);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>使用JdbcTemplate最为Dao层返回结果</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> List&lt;User&gt; <span class=\"title function_\">getUsers</span><span class=\"params\">(<span class=\"type\">int</span> pageIndex, <span class=\"type\">int</span> pageSize)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">limit</span> <span class=\"operator\">=</span> pageSize;</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">offset</span> <span class=\"operator\">=</span> limit * (pageIndex - <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> jdbcTemplate.query(<span class=\"string\">&quot;SELECT * FROM users LIMIT ? OFFSET ?&quot;</span>, <span class=\"keyword\">new</span> <span class=\"title class_\">Object</span>[] &#123; limit, offset &#125;,</span><br><span class=\"line\">            <span class=\"keyword\">new</span> <span class=\"title class_\">BeanPropertyRowMapper</span>&lt;&gt;(User.class));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>JdbcTemplate只是jdbc api的一些简单封装, 在实际开发中, 大多还是使用MyBatis、Hibernate此类的ORM框架, 更好的对底层操作进行封闭.  </p>\n<p>但spring-jdbc依赖的spring-tx包中对事务进行了抽象, 给我们提供了简单的 @Transactional 注解来为代码逻辑进行AOP事务增强.  其中增强逻辑的实现全部依靠 DataSourceTransactionManager 类来完成, 包括当前事务上下文判断、从DataSource中获取Connection、设置隔离级别并关闭auto commit、设置线程共享的ThreadLocal存储dataSource获取到的Connection、以及最终的Connection commit or rollback.</p>\n<p>理解事务本质 以及 Spring对事务的封装:</p>\n<p>从原生JDBC API我们知道, 一个事务和一个Connection是强绑定的. 默认一个Connection的autoCommit会设置成true, 也就是每条执行的SQL默认都在一个事务里,并在执行完成后自动提交了. 若我们想让代码实现多个SQL在一个事务里执行, 本质上就是让这些SQL在一个autoCommit设置为false的Connection中执行, 并最终手动commit. DataSourceTransactionManager本质上也就是做了这个工作, 在@Transactional 注解的方法开始前, 获取到新的Connection, 设置隔离级别与autoCommit, 执行若干代码逻辑, 最终提交或回滚.  当遇到传播级别为REQUIRES_NEW的增强方法或想另起一个新事务执行一些SQL时, 就需再从DataSource获取一个新的Connection来进行.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">protected</span> Object <span class=\"title function_\">invokeWithinTransaction</span><span class=\"params\">(Method method, Class&lt;?&gt; targetClass, <span class=\"keyword\">final</span> InvocationCallback invocation)</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">throws</span> Throwable &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">final</span> <span class=\"type\">TransactionAttribute</span> <span class=\"variable\">txAttr</span> <span class=\"operator\">=</span> getTransactionAttributeSource().getTransactionAttribute(method, targetClass);</span><br><span class=\"line\">    <span class=\"comment\">// 获取DataSourceTransactionManager</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">final</span> <span class=\"type\">PlatformTransactionManager</span> <span class=\"variable\">tm</span> <span class=\"operator\">=</span> determineTransactionManager(txAttr);</span><br><span class=\"line\">\t\t<span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">joinpointIdentification</span> <span class=\"operator\">=</span> methodIdentification(method, targetClass, txAttr);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">      <span class=\"comment\">// TransactionManager判断是否需要创建新事务, 即获取Connection</span></span><br><span class=\"line\">\t\t\t<span class=\"type\">TransactionInfo</span> <span class=\"variable\">txInfo</span> <span class=\"operator\">=</span> createTransactionIfNecessary(tm, txAttr, joinpointIdentification);</span><br><span class=\"line\">\t\t\t<span class=\"type\">Object</span> <span class=\"variable\">retVal</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// AOP 增强的原始方法</span></span><br><span class=\"line\">\t\t\t\tretVal = invocation.proceedWithInvocation();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">catch</span> (Throwable ex) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// 遇到异常选择性回滚事务</span></span><br><span class=\"line\">\t\t\t\tcompleteTransactionAfterThrowing(txInfo, ex);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">throw</span> ex;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">\t\t\t\tcleanupTransactionInfo(txInfo);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">      <span class=\"comment\">// 正常执行提交事务</span></span><br><span class=\"line\">\t\t\tcommitTransactionAfterReturning(txInfo);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> retVal;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"生态三-ORM-持久层框架-MyBatis\"><a href=\"#生态三-ORM-持久层框架-MyBatis\" class=\"headerlink\" title=\"生态三: ORM/持久层框架-MyBatis\"></a>生态三: ORM/持久层框架-MyBatis</h2><blockquote>\n<p>本节我们挑重点讲解, 详细源码分析可参考此文章:  <a href=\"https://learn.lianglianglee.com/%E4%B8%93%E6%A0%8F/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90%20MyBatis%20%E6%A0%B8%E5%BF%83%E5%8E%9F%E7%90%86-%E5%AE%8C/03%20%20MyBatis%20%E6%BA%90%E7%A0%81%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E5%8F%8A%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84%E8%A7%A3%E6%9E%90.md\">mybatis design concept</a></p>\n</blockquote>\n<p>MyBatis官方Introduction: </p>\n<p>MyBatis 是一款优秀的持久层框架，它支持自定义 SQL、存储过程以及高级映射。<strong>MyBatis 免除了几乎所有的 JDBC 代码以及设置参数和获取结果集的工作</strong>。MyBatis 可以通过简单的 XML 或注解来配置和映射原始类型、Map、集合等接口和 Java POJO为数据库中的记录。</p>\n<p>MyBatis 分为三层架构，分别是<strong>基础支撑层、核心处理层</strong>和<strong>接口层</strong>，如下图所示：</p>\n<img src=\"./mybatis-arch.png\" alt=\"image-20220405125449569\" style=\"zoom:30%;\" />\n\n<ul>\n<li>基础支撑层是整个 MyBatis 框架的地基，为整个 MyBatis 框架提供了底层基础的功能，其中每个模块都提供了一个内聚的、单一的能力;    </li>\n<li>核心处理层是 MyBatis 核心实现所在，其中涉及 MyBatis 的初始化以及执行一条 SQL 语句的全流程。</li>\n<li>接口层是 MyBatis 暴露给调用的接口集合，这些接口都是使用 MyBatis 时最常用的一些接口，例如，SqlSession 接口、SqlSessionFactory 接口等。</li>\n</ul>\n<p>MyBatis执行过程以及对JDBC API的封装:</p>\n<img src=\"./mybatis-execute.png\" alt=\"image-20220405132244101\" style=\"zoom:35%;\" />\n\n<p>MyBatis与Spring的集成:</p>\n<p>我们在Spring框架内使用mybatis的时候, 要引入mybatis和mybatis-spring两个依赖, 前者是mybatis的所有核心逻辑的代码, 而后者负责整合spring框架能力, 其又引入了spring-jdbc以及spring-tx. </p>\n<img src=\"./mybatis-package.png\" alt=\"image-20220419141734725\" style=\"zoom:50%;\" />\n\n<p>一个 Transaction 的例子, 多个Dao在一个事务中执行的过程:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Transactional</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">createOrder</span><span class=\"params\">(Long userId, Long productId, Integer count)</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 1. 创建订单</span></span><br><span class=\"line\">    orderDao.insertOrder(Order.builder()</span><br><span class=\"line\">            .userId(userId)</span><br><span class=\"line\">            .productId(productId)</span><br><span class=\"line\">            .count(count)</span><br><span class=\"line\">            .build());</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 2. 减少商品库存</span></span><br><span class=\"line\">    productDao.minusCount(productId, count);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 3. 增加用户积分</span></span><br><span class=\"line\">    userDao.addPoint(userId, count);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>MyBatis框架的SQL执行是交给Executor负责的, Executor每次新建的时候会传入一个Transaction对象, 在与Spring整合的过程中, 会将MyBatis Configuration中的 TransactionFactory指定为 SpringManagedTransactionFactory, 其最终目标呢, 就是创建出 SpringManagedTransaction给 Executor使用. </p>\n<p>SpringManagedTransaction有什么特别的呢? </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// SpringManagedTransaction 中的获取连接</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">openConnection</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> SQLException &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 通过Spring-jdbc暴露的 DataSourceUtils 获取Connection, 该Util会从当前线程上下文中判断是否存在事务, 并获取由之前Spring事务切面存入的 Connection</span></span><br><span class=\"line\">    <span class=\"built_in\">this</span>.connection = DataSourceUtils.getConnection(<span class=\"built_in\">this</span>.dataSource);</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.autoCommit = <span class=\"built_in\">this</span>.connection.getAutoCommit();</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.isConnectionTransactional = DataSourceUtils.isConnectionTransactional(<span class=\"built_in\">this</span>.connection, <span class=\"built_in\">this</span>.dataSource);</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// DataSourceUtils.getConnection方法内部逻辑</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Connection <span class=\"title function_\">getConnection</span><span class=\"params\">(DataSource dataSource)</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 从全局的TreadLocal中获取当前线程是否已有事务Connection</span></span><br><span class=\"line\">    <span class=\"type\">ConnectionHolder</span> <span class=\"variable\">conHolder</span> <span class=\"operator\">=</span> TransactionSynchronizationManager.getResource(dataSource);</span><br><span class=\"line\">\t\t<span class=\"comment\">// 有的话直接使用同一个Connection</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (conHolder != <span class=\"literal\">null</span> &amp;&amp; (conHolder.hasConnection() || conHolder.isSynchronizedWithTransaction())) &#123;</span><br><span class=\"line\">\t\t\tconHolder.requested();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!conHolder.hasConnection()) &#123;</span><br><span class=\"line\">\t\t\t\tlogger.debug(<span class=\"string\">&quot;Fetching resumed JDBC Connection from DataSource&quot;</span>);</span><br><span class=\"line\">\t\t\t\tconHolder.setConnection(fetchConnection(dataSource));</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> conHolder.getConnection();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">    <span class=\"comment\">// 线程上下文中没有事务连接, 新获取Connection执行后续SQL</span></span><br><span class=\"line\">    <span class=\"type\">Connection</span> <span class=\"variable\">con</span> <span class=\"operator\">=</span> fetchConnection(dataSource);</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> con;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"生态四-分库分表\"><a href=\"#生态四-分库分表\" class=\"headerlink\" title=\"生态四: 分库分表\"></a>生态四: 分库分表</h2><h3 id=\"Sharding-JDBC-ShardingSphere-JDBC\"><a href=\"#Sharding-JDBC-ShardingSphere-JDBC\" class=\"headerlink\" title=\"Sharding-JDBC (ShardingSphere-JDBC)\"></a>Sharding-JDBC (ShardingSphere-JDBC)</h3><p>官方介绍:</p>\n<p>定位为轻量级 Java 框架，在 Java 的 JDBC 层提供的额外服务。 它使用客户端直连数据库，以 jar 包形式提供服务，无需额外部署和依赖，可理解为增强版的 JDBC 驱动，完全兼容 JDBC 和各种 ORM 框架。</p>\n<ul>\n<li>适用于任何基于 JDBC 的 ORM 框架，如：JPA, Hibernate, Mybatis, Spring JDBC Template 或直接使用 JDBC；</li>\n<li>支持任何第三方的数据库连接池，如：DBCP, C3P0, BoneCP, HikariCP 等；</li>\n<li>支持任意实现 JDBC 规范的数据库，目前支持 MySQL，PostgreSQL，Oracle，SQLServer 以及任何可使用 JDBC 访问的数据库。</li>\n</ul>\n<img src=\"/2022/03/19/shardingsphere/sharding-jdbc.png\" class=\"\" title=\"image-20220319220206599\">\n\n<p>故名思义, Sharding-JDBC, 叫这个名字, 那它一定是基于JDBC API进行的能力拓展. 我们可以看下其core包下结构便一目了然了:</p>\n<img src=\"./sharding-core-package.png\" alt=\"image-20220418225313643\" style=\"zoom:50%;\" />\n\n<p>为什么Sharding-JDBC能支持所有的ORM框架呢?  也正因为它直接在JDBC层进行的封装, 以 MyBatis 和 Sharding JDBC为例: </p>\n<img src=\"./mybatis-sharding-jdbc.png\" alt=\"image-20220419152546734\" style=\"zoom:50%;\" />\n\n<p>Sharding-JDBC 为 JDBC DataSource接口实现了 ShardingDataSource, 其内部管理了多个数据源, 而上层使用时对多数据源完全无感. 在PrepareStatement阶段, Sharding-JDBC会根据要执行的SQL以及配置的分库分表Rule,  解析并路由出若干条执行单元, 并分别从对应连接池中获取连接, 并执行改写后的SQL. </p>\n<img src=\"./sharding-jdbc-sequence.png\" alt=\"image-20220419153403836\" style=\"zoom: 25%;\" />\n\n<p>分库分表配置示例:</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">  ~ Licensed to the Apache Software Foundation (ASF) under one or more</span></span><br><span class=\"line\"><span class=\"comment\">  ~ contributor license agreements.  See the NOTICE file distributed with</span></span><br><span class=\"line\"><span class=\"comment\">  ~ this work for additional information regarding copyright ownership.</span></span><br><span class=\"line\"><span class=\"comment\">  ~ The ASF licenses this file to You under the Apache License, Version 2.0</span></span><br><span class=\"line\"><span class=\"comment\">  ~ (the &quot;License&quot;); you may not use this file except in compliance with</span></span><br><span class=\"line\"><span class=\"comment\">  ~ the License.  You may obtain a copy of the License at</span></span><br><span class=\"line\"><span class=\"comment\">  ~</span></span><br><span class=\"line\"><span class=\"comment\">  ~     http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class=\"line\"><span class=\"comment\">  ~</span></span><br><span class=\"line\"><span class=\"comment\">  ~ Unless required by applicable law or agreed to in writing, software</span></span><br><span class=\"line\"><span class=\"comment\">  ~ distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></span><br><span class=\"line\"><span class=\"comment\">  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class=\"line\"><span class=\"comment\">  ~ See the License for the specific language governing permissions and</span></span><br><span class=\"line\"><span class=\"comment\">  ~ limitations under the License.</span></span><br><span class=\"line\"><span class=\"comment\">  --&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:context</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:tx</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/tx&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:sharding</span>=<span class=\"string\">&quot;http://shardingsphere.apache.org/schema/shardingsphere/sharding&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:bean</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/util&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">                        http://www.springframework.org/schema/beans/spring-beans.xsd </span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">                        http://www.springframework.org/schema/tx </span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">                        http://www.springframework.org/schema/tx/spring-tx.xsd</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">                        http://www.springframework.org/schema/context </span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">                        http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">                        http://shardingsphere.apache.org/schema/shardingsphere/sharding</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">                        http://shardingsphere.apache.org/schema/shardingsphere/sharding/sharding.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">context:component-scan</span> <span class=\"attr\">base-package</span>=<span class=\"string\">&quot;org.apache.shardingsphere.example.core.mybatis&quot;</span> /&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;demo_ds_0&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.zaxxer.hikari.HikariDataSource&quot;</span> <span class=\"attr\">destroy-method</span>=<span class=\"string\">&quot;close&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;driverClassName&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;jdbcUrl&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;jdbc:mysql://localhost:3306/demo_ds_0?useSSL=false<span class=\"symbol\">&amp;amp;</span>useUnicode=true<span class=\"symbol\">&amp;amp;</span>characterEncoding=UTF-8&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;root&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;demo_ds_1&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.zaxxer.hikari.HikariDataSource&quot;</span> <span class=\"attr\">destroy-method</span>=<span class=\"string\">&quot;close&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;driverClassName&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;jdbcUrl&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;jdbc:mysql://localhost:3306/demo_ds_1?useSSL=false<span class=\"symbol\">&amp;amp;</span>useUnicode=true<span class=\"symbol\">&amp;amp;</span>characterEncoding=UTF-8&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;root&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">sharding:inline-strategy</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;databaseStrategy&quot;</span> <span class=\"attr\">sharding-column</span>=<span class=\"string\">&quot;user_id&quot;</span> <span class=\"attr\">algorithm-expression</span>=<span class=\"string\">&quot;demo_ds_$&#123;user_id % 2&#125;&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">sharding:inline-strategy</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;orderTableStrategy&quot;</span> <span class=\"attr\">sharding-column</span>=<span class=\"string\">&quot;order_id&quot;</span> <span class=\"attr\">algorithm-expression</span>=<span class=\"string\">&quot;t_order_$&#123;order_id % 2&#125;&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">sharding:inline-strategy</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;orderItemTableStrategy&quot;</span> <span class=\"attr\">sharding-column</span>=<span class=\"string\">&quot;order_id&quot;</span> <span class=\"attr\">algorithm-expression</span>=<span class=\"string\">&quot;t_order_item_$&#123;order_id % 2&#125;&quot;</span> /&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean:properties</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;properties&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">prop</span> <span class=\"attr\">key</span>=<span class=\"string\">&quot;worker.id&quot;</span>&gt;</span>123<span class=\"tag\">&lt;/<span class=\"name\">prop</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean:properties</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">sharding:key-generator</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;orderKeyGenerator&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;SNOWFLAKE&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;order_id&quot;</span> <span class=\"attr\">props-ref</span>=<span class=\"string\">&quot;properties&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">sharding:key-generator</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;itemKeyGenerator&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;SNOWFLAKE&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;order_item_id&quot;</span> <span class=\"attr\">props-ref</span>=<span class=\"string\">&quot;properties&quot;</span> /&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">sharding:data-source</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;shardingDataSource&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">sharding:sharding-rule</span> <span class=\"attr\">data-source-names</span>=<span class=\"string\">&quot;demo_ds_0, demo_ds_1&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">sharding:table-rules</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">sharding:table-rule</span> <span class=\"attr\">logic-table</span>=<span class=\"string\">&quot;t_order&quot;</span> <span class=\"attr\">actual-data-nodes</span>=<span class=\"string\">&quot;demo_ds_$&#123;0..1&#125;.t_order_$&#123;0..1&#125;&quot;</span> <span class=\"attr\">database-strategy-ref</span>=<span class=\"string\">&quot;databaseStrategy&quot;</span> <span class=\"attr\">table-strategy-ref</span>=<span class=\"string\">&quot;orderTableStrategy&quot;</span> <span class=\"attr\">key-generator-ref</span>=<span class=\"string\">&quot;orderKeyGenerator&quot;</span> /&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">sharding:table-rule</span> <span class=\"attr\">logic-table</span>=<span class=\"string\">&quot;t_order_item&quot;</span> <span class=\"attr\">actual-data-nodes</span>=<span class=\"string\">&quot;demo_ds_$&#123;0..1&#125;.t_order_item_$&#123;0..1&#125;&quot;</span> <span class=\"attr\">database-strategy-ref</span>=<span class=\"string\">&quot;databaseStrategy&quot;</span> <span class=\"attr\">table-strategy-ref</span>=<span class=\"string\">&quot;orderItemTableStrategy&quot;</span> <span class=\"attr\">key-generator-ref</span>=<span class=\"string\">&quot;itemKeyGenerator&quot;</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">sharding:table-rules</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">sharding:binding-table-rules</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">sharding:binding-table-rule</span> <span class=\"attr\">logic-tables</span>=<span class=\"string\">&quot;t_order,t_order_item&quot;</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">sharding:binding-table-rules</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">sharding:broadcast-table-rules</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">sharding:broadcast-table-rule</span> <span class=\"attr\">table</span>=<span class=\"string\">&quot;t_address&quot;</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">sharding:broadcast-table-rules</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">sharding:sharding-rule</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">sharding:props</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">prop</span> <span class=\"attr\">key</span>=<span class=\"string\">&quot;sql.show&quot;</span>&gt;</span>false<span class=\"tag\">&lt;/<span class=\"name\">prop</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">sharding:props</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">sharding:data-source</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;transactionManager&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;dataSource&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;shardingDataSource&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tx:annotation-driven</span> /&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;sqlSessionFactory&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;dataSource&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;shardingDataSource&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;mapperLocations&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;classpath*:META-INF/mappers/*.xml&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;basePackage&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;org.apache.shardingsphere.example.core.mybatis.repository&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;sqlSessionFactoryBeanName&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;sqlSessionFactory&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>思考: 跨数据源事务一致性问题?</p>\n<h2 id=\"生态五-分布式事务…-待完成\"><a href=\"#生态五-分布式事务…-待完成\" class=\"headerlink\" title=\"生态五:  分布式事务… 待完成\"></a>生态五:  分布式事务… 待完成</h2>"},{"title":"socketio","date":"2022-05-18T13:52:41.000Z","_content":"\n## EngineIO Protocol\n\n[**Engine.IO**](https://github.com/socketio/engine.io-protocol)是[**Socket.IO**](https://github.com/socketio/socket.io)更底层的实现基础，要想完整理解Socket.IO必须对Engine.IO协议也有深刻认知。\n\n### Engine.IO session详解\n\n1. 传输层与Engine.IO URL建立一个连接。\n\n2. 服务端返回一个JSON格式的\n\n   ```\n   OPEN\n   ```\n\n   握手数据，包括如下内容：\n\n   - `sid` session id（字符串）\n   - `upgrades` 可能有传输升级（字符串数组）\n   - `pingTimeout` 服务端需配置ping超时时间，用于客户端判断服务端是否不可达。（数字）\n   - `pingInterval` 服务端需配置ping间隔时间，用于客户端判断服务端是否不可达。（数字）\n\n3. 客户端必须通过`pong`周期性回复服务端的`ping`。\n\n4. 客户端和服务端可以在任意时刻交换`message`。\n\n5. Polling方式的传输允许发送`close`来关闭socket，因为预期中会一直处于\"opening\"和\"closing\"的状态。\n\n#### 会话示例\n\n- Request n°1 (open packet)\n\n```\nGET /engine.io/?EIO=4&transport=polling&t=N8hyd6w\n< HTTP/1.1 200 OK\n< Content-Type: text/plain; charset=UTF-8\n0{\"sid\":\"lv_VI97HAXpY6yYWAAAC\",\"upgrades\":[\"websocket\"],\"pingInterval\":25000,\"pingTimeout\":5000}\n```\n\n细节：\n\n```\n0           => \"open\" packet type\n{\"sid\":...  => the handshake data\n```\n\n注意：参数`t`用于防止浏览器缓存该请求。\n\n- Request n°2 (message in)\n\n服务端会执行`socket.send('hey')`：\n\n```\nGET /engine.io/?EIO=4&transport=polling&t=N8hyd7H&sid=lv_VI97HAXpY6yYWAAAC\n< HTTP/1.1 200 OK\n< Content-Type: text/plain; charset=UTF-8\n4hey\n```\n\n细节：\n\n```\n4           => \"message\" packet type\nhey         => the actual message\n```\n\n注意：`sid`参数包括握手数据中的sid。\n\n- Request n°3 (message out)\n\n客户端将会执行`socket.send('hello'); socket.send('world');`：\n\n```\nPOST /engine.io/?EIO=4&transport=polling&t=N8hzxke&sid=lv_VI97HAXpY6yYWAAAC\n> Content-Type: text/plain; charset=UTF-8\n4hello\\x1e4world\n< HTTP/1.1 200 OK\n< Content-Type: text/plain; charset=UTF-8\nok\n```\n\n细节：\n\n```\n4           => \"message\" packet type\nhello       => the 1st message\n\\x1e        => separator\n4           => \"message\" message type\nworld       => the 2nd message\n```\n\n- Request n°4 (WebSocket upgrade)\n\n```\nGET /engine.io/?EIO=4&transport=websocket&sid=lv_VI97HAXpY6yYWAAAC\n< HTTP/1.1 101 Switching Protocols\n```\n\nWebsocket数据帧：\n\n```\n< 2probe    => probe request\n> 3probe    => probe response\n< 5         => \"upgrade\" packet type\n> 4hello    => message (not concatenated)\n> 4world\n> 2         => \"ping\" packet type\n< 3         => \"pong\" packet type\n> 1         => \"close\" packet type\n```\n\n#### Websocket 会话示例\n\n这种情况下，客户端只启用Websocket（没有HTTP polling）。\n\n```\nGET /engine.io/?EIO=4&transport=websocket\n< HTTP/1.1 101 Switching Protocols\n```\n\nWebsocket数据帧：\n\n```\n< 0{\"sid\":\"lv_VI97HAXpY6yYWAAAC\",\"pingInterval\":25000,\"pingTimeout\":5000} => handshake\n< 4hey\n> 4hello    => message (not concatenated)\n> 4world\n< 2         => \"ping\" packet type\n> 3         => \"pong\" packet type\n> 1         => \"close\" packet type\n```\n\n### 路由\n\nEngine.IO路由组成如下：\n\n```\n/engine.io/[?<query string>]\n```\n\n- `engine.io`的路径名仅可以被基于engine.io上层协议的框架修改\n- 查询字符串是可选的，有6个保留字：\n  - `transport`：表明传输方式。默认支持`polling`，`websocket`。\n  - `j`：如果传输方式是`polling`且返回值必须是JSONP类型，则`j`必须设置为JSONP返回值的index。\n  - `sid`：如果客户端要加session id，必须放在查询字符串上。\n  - `EIO`：Engine.IO的版本号。\n  - `t`：时间戳的hash值，用来防止浏览器缓存。\n\nFAQ：`/engine.io`这部分路由是否可修改？ 可以，服务端在不同的子路径下拦截请求。\n\nFAQ：是什么因素决定一个选型出现在编码了的查询字符串上？换句话说，为什么`transport`字段不在路由上面呢？ 约定是子路径仅用于让Engine.IO的服务端消除是否要处理这个请求的歧义。这当然只有Engine.IO的前缀（`/engine.io`）。\n\n### 编码方式\n\n有两种不同的编码方式：\n\n- packet\n- Payload\n\n#### Packet\n\n一个编码的packet可以是UTF-8的字符串，也可以是二进制数据。字符串形式的编码packet如下：\n\n```\n<packet type id>[<data>]\n```\n\n例如：\n\n```\n4hello\n```\n\n对于二进制数据来说，无需包含packet类型，因为只有`message`可以包括二进制数据。\n\n##### 0 open\n\n当新的传输通道打开会从服务端发送。\n\n##### 1 close\n\n请求关闭此传输通道但不会立刻关闭连接。\n\n##### 2 ping\n\n由服务端发送，客户端回复pong包。\n\n样例：\n\n- server sends: `2`\n- client sends: `3`\n\n##### 3 pong\n\n客户端发送用于回复ping包。\n\n##### 4 message\n\n消息体，客户端和服务端可以通过它们的回调接口传输数据\n\n样例一：\n\n- 服务端发送：`4HelloWorld`\n- 客户端接收并触发回调：`socket.on('message', function (data) { console.log(data); });`\n\n样例二：\n\n- 客户端发送：`4HelloWorld`\n- 服务端接收并触发回调：`socket.on('message', function (data) { console.log(data); });`\n\n##### 5 upgrade\n\n在engine.io切换传输方式之前，它需要测试服务端和客户端之间是否允许这种传输方式。如果测试成功，客户端将会发送一个upgrade包给服务端并要求它刷新旧传输方式的缓存并切换到新的传输方式。\n\n##### 6 noop\n\nnoop包主要用于当一个websocket连接将要建立时候强制一轮poll循环。\n\n样例：\n\n1. 客户端通过新的传输方式连接\n2. 客户端发送：`2probe`\n3. 服务端接收并发送：`3probe`\n4. 客户端接收并发送：`5`\n5. 服务端刷新环境，关闭旧传输方式并切换至新的传输方式\n\n#### Payload\n\nPayload是一系列packet捆绑在一起。当仅支持字符串且XHR2不支持的情况下，payload编码格式如下：\n\n```\n<packet1>\\x1e<packet2>\\x1e<packet3>\n```\n\npacket通过('\\x1e')分割，更多信息请参考： https://en.wikipedia.org/wiki/C0_and_C1_control_codes#Field_separators\n\n当payload支持二进制数据时，它会通过发送base64编码的字符串。为了便于解码，二进制格式的packet前会插入字符`b`。任意数量的字符串和base64编码的字符串可以被聚合发送。下面是base64编码消息的样例：\n\n```\n<packet1>\\x1eb<packet2 data in b64>[...]\n```\n\npayload用于不支持帧方式的传输，比如polling协议。\n\n- 无二进制数据样例：\n\n```json\n[\n  {\n    \"type\": \"message\",\n    \"data\": \"hello\"\n  },\n  {\n    \"type\": \"message\",\n    \"data\": \"€\"\n  }\n]\n```\n\n被编码为：\n\n```\n4hello\\x1e4€\n```\n\n- 二进制数据样例：\n\n```json\n[\n  {\n    \"type\": \"message\",\n    \"data\": \"€\"\n  },\n  {\n    \"type\": \"message\",\n    \"data\": buffer <01 02 03 04>\n  }\n]\n```\n\n被编码为：\n\n```\n4€\\x1ebAQIDBA==\n\nwith\n\n4           => \"message\" packet type\n€\n\\x1e        => record separator\nb           => indicates a base64 packet\nAQIDBA==    => buffer content encoded in base64\n```\n\n### 传输方式\n\nEngine.IO的服务端必须支持三种传输方式：\n\n- websocket\n- server-sent events (SSE)\n- Polling\n  - Jsonp\n  - Xhr\n\n#### Polling\n\npolling方式包括客户端循环GET请求访问服务端获取数据，以及客户端POST请求传输数据给服务端。\n\n##### XHR\n\n服务端必须支持跨域。\n\n##### JSONP\n\n服务端的实现必须回复合法的JavaScript。URL上面必须包含查询字符串参数`j`，并必须被应用在返回体中。`j`是一个整数：\n\nJSONP格式：\n\n```\n`___eio[` <j> `](\"` <encoded payload> `\");`\n```\n\n为了确保payload被正确处理，它的转义也必须符合合法的JavaScript。使用一个JSON编码器是一个发送编码payload的良好转义方法。\n\n如下是服务端返回的JSONP样例：\n\n```\n___eio[4](\"packet data\");\n```\n\n**上传数据**\n\n客户端通过一个隐藏的`iframe`上传数据。到服务端的数据在URI中的编码格式如下：\n\n```\nd=<escaped packet payload>\n```\n\n此外根据标准转义规范，为了防止浏览器对`\\n`处理的不一致，`\\n`会在POST中会转义为`\\\\n`。\n\n#### Server-sent events\n\n客户端使用一个EventSource的对象用于接收数据，使用一个XMLHttpRequest的对象用于发送数据。\n\n#### Websocket\n\npayload编码不适用websocket，因为协议本身已经具有一个轻量级的数据帧机制。\n\n发送payload类型的消息，只需要单独编码并连续调用`send()`发送。\n\n### 传输升级\n\n一个连接总是要从polling方式开始（XHR或者JSONP）。websocket要通过发送一个探测开始。加入服务端对探测有返回结果，则会发送一个upgrade包。\n\n为了确保没有消息丢失，upgrade包在当前存在的传输通道缓存中仅会被发送一次，且此时传输被认为是处于暂停状态。\n\n当服务端接收到upgrade包，它必须假设这是新的传输通道，并且发送当前以及存在的通道中所有的缓存内容。\n\n客户端发送的探测是由`ping`包类型和`probe`字符串拼接成的数据。服务端返回的探测是由`pong`包类型和`probe`字符串拼接成的数据。\n\n进一步说，升级只会考虑`polling -> x`。\n\n### 超时时间\n\n客户端必须使用`pingTimeout`和`pingInterval`作为握手的部分（带着`open`包）来判断服务端是否断开。\n\n服务端发送一个`ping`包。如果在`pingTimeout`之内没有接收到包类型，则服务端会认为socket已经断开连接。如果`pong`包返回并接收成功的话，服务端会等待`pingInterval`之后再发送下一个`ping`包。\n\n由于两个值在服务端和客户端是共享的，客户端也可以通过它们来判断服务端是否断开连接当它没有在`pingTimeout+pingInterval`之内收到任何数据。\n\n## SocketIO Protocol\n\n大部分内容引自出处: [blog](https://www.kevinwu0904.top/blogs/network-socketio/)。开源社区介绍 [github socket.io](https://github.com/socketio/socket.io-protocol)\n\n### Packet格式\n\n一个Packet包括以下字段：\n\n- 类型（整数，详见下文）\n- 名称空间（字符串）\n- 可选字段：Packet内容（对象 | 数组）\n- 可选字段：ACK的ID（整数）\n\n### Packet类型\n\n#### 0-CONNECT\n\n该事件发生时机：\n\n- 当客户端连接一个名称空间。客户端会发送一个用于鉴权的payload，例如：\n\n```json\n{\n  \"type\": 0,\n  \"nsp\": \"/admin\",\n  \"data\": {\n    \"token\": \"123\"\n  }\n}\n```\n\n- 当服务端接受来自一个名称空间的连接。请求成功后，服务端会响应一个带有Socket ID的payload，例如：\n\n```json\n{\n  \"type\": 0,\n  \"nsp\": \"/admin\",\n  \"data\": {\n    \"sid\": \"CjdVH4TQvovi1VvgAC5Z\"\n  }\n}\n```\n\n#### 1-DISCONNECT\n\n该事件发生在一端想要断开名称空间的连接时。它不包括任何payload和ACK ID，例如：\n\n```json\n{\n  \"type\": 1,\n  \"nsp\": \"/admin\"\n}\n```\n\n#### 2-EVENT\n\n该事件发生在一端想要给另一端传输数据（不包括二进制数据）时。它包括payload，可能还会包括ACK ID，例如：\n\n```json\n{\n  \"type\": 2,\n  \"nsp\": \"/\",\n  \"data\": [\"hello\", 1]\n}\n```\n\n包括ACK ID的样例：\n\n```json\n{\n  \"type\": 2,\n  \"nsp\": \"/admin\",\n  \"data\": [\"project:delete\", 123],\n  \"id\": 456\n}\n```\n\n#### 3-ACK\n\n该事件发生在一端接收到EVENT事件或带有ACK ID的BINARY_EVENT事件。它包括对之前这个事件的ACK ID，可能还会包括payload（不包括二进制数据），例如：\n\n```json\n{\n  \"type\": 3,\n  \"nsp\": \"/admin\",\n  \"data\": [],\n  \"id\": 456\n}\n```\n\n#### 4-CONNECT_ERROR\n\n该事件发生在服务端拒绝一个名称空间的连接时。它包括一个\"message\"字段，可能还会包括一个\"data\"字段，例如：\n\n```json\n{\n  \"type\": 4,\n  \"nsp\": \"/admin\",\n  \"data\": {\n    \"message\": \"Not authorized\",\n    \"data\": {\n      \"code\": \"E001\",\n      \"label\": \"Invalid credentials\"\n    }\n  }\n}\n```\n\n#### 5-BINARY_EVENT\n\n注意：BINARY_EVENT和BINARY_ACK都用于内建的解析器中，为了区别出包中是否包括二进制内容。它们不会用于其他自定义解析器中。\n\n该事件发生在一端想要给另一端传输数据（包括二进制数据）时。它包括payload，可能还会包括ACK ID，例如：\n\n```json\n{\n  \"type\": 5,\n  \"nsp\": \"/\",\n  \"data\": [\"hello\", <Buffer 01 02 03>]\n}\n```\n\n包括ACK ID的样例：\n\n```json\n{\n  \"type\": 5,\n  \"nsp\": \"/admin\",\n  \"data\": [\"project:delete\", <Buffer 01 02 03>],\n  \"id\": 456\n}\n```\n\n#### 6-BINARY_ACK\n\n该事件发生在一端接收到EVENT事件或带有ACK ID的BINARY_EVENT事件。它包括对之前这个事件的ACK ID，可能还会包括payload（包括二进制数据），例如：\n\n```json\n{\n  \"type\": 6,\n  \"nsp\": \"/admin\",\n  \"data\": [<Buffer 03 02 01>],\n  \"id\": 456\n}\n```\n\n### Packet编码\n\n本小节描述了Socket.IO 客户端和服务端之间默认解析器的编码细节，源码实现参考：[这里](https://github.com/socketio/socket.io-parser)。\n\n另外注意一点：Socket.IO的packet本质上是Engine.IO`message`类型的packet（关于Engine.IO参考[这里](https://github.com/socketio/engine.io-protocol)），所以编码结果发送时候会带上`4`这个数字前缀。（在HTTP long-polling的请求和响应包体中，或者在Websocket的数据帧中。）\n\n#### 编码格式\n\n```\n<packet type>[<# of binary attachments>-][<namespace>,][<acknowledgment id>][JSON-stringified payload without binary]\n\n+ binary attachments extracted\n```\n\n注意：\n\n- 当名称空间不是默认的`/`时候才会出现在编码格式中。\n\n#### 编码样例\n\n- `/`名称空间`CONNECT`\n\n```json\n{\n  \"type\": 0,\n  \"nsp\": \"/\",\n  \"data\": {\n    \"token\": \"123\"\n  }\n}\n```\n\n编码为：`0{\"token\":\"123\"}`\n\n- `/admin`名称空间的`CONNECT`\n\n```json\n{\n  \"type\": 0,\n  \"nsp\": \"/admin\",\n  \"data\": {\n    \"token\": \"123\"\n  }\n}\n```\n\n编码为`0/admin,{\"token\":\"123\"}`\n\n+ `/admin`名称空间的`DISCONNECT`\n\n```json\n{\n  \"type\": 1,\n  \"nsp\": \"/admin\"\n}\n```\n\n编码为`1/admin`\n\n- `EVENT`\n\n```json\n{\n  \"type\": 2,\n  \"nsp\": \"/\",\n  \"data\": [\"hello\", 1]\n}\n```\n\n编码为`2[\"hello\",1]`\n\n- 带ACK ID的`EVENT`\n\n```json\n{\n  \"type\": 2,\n  \"nsp\": \"/admin\",\n  \"data\": [\"project:delete\", 123],\n  \"id\": 456\n}\n```\n\n编码为`2/admin,456[\"project:delete\",123]`\n\n- `ACK`\n\n```json\n{\n  \"type\": 3,\n  \"nsp\": \"/admin\",\n  \"data\": [],\n  \"id\": 456\n}\n```\n\n编码为`3/admin,456[]`\n\n- `CONNECT_ERROR`\n\n```json\n{\n  \"type\": 4,\n  \"nsp\": \"/admin\",\n  \"data\": {\n    \"message\": \"Not authorized\"\n  }\n}\n```\n\n编码为`4/admin,{\"message\":\"Not authorized\"}`\n\n- `BINARY_EVENT`\n\n```json\n{\n  \"type\": 5,\n  \"nsp\": \"/\",\n  \"data\": [\"hello\", <Buffer 01 02 03>]\n}\n```\n\n编码为`51-[\"hello\",{\"_placeholder\":true,\"num\":0}] + <Buffer 01 02 03>`\n\n- 带ACK ID的`BINARY_EVENT`\n\n```json\n{\n  \"type\": 5,\n  \"nsp\": \"/admin\",\n  \"data\": [\"project:delete\", <Buffer 01 02 03>],\n  \"id\": 456\n}\n```\n\n编码为`51-/admin,456[\"project:delete\",{\"_placeholder\":true,\"num\":0}] + <Buffer 01 02 03>`\n\n- `BINARY_ACK`\n\n```json\n{\n  \"type\": 6,\n  \"nsp\": \"/admin\",\n  \"data\": [<Buffer 03 02 01>],\n  \"id\": 456\n}\n```\n\n编码为`61-/admin,456[{\"_placeholder\":true,\"num\":0}] + <Buffer 03 02 01>`\n\n### 协议交互\n\n#### 连接名称空间\n\n对于每个名称空间（包括主名称空间），客户端首先发送一个`CONNECT`，服务端回复一个带有Socket ID的`CONNECT`。\n\n```\nClient > { type: CONNECT, nsp: \"/admin\" }\nServer > { type: CONNECT, nsp: \"/admin\", data: { sid: \"wZX3oN0bSVIhsaknAAAI\" } } (if the connection is successful)\nor\nServer > { type: CONNECT_ERROR, nsp: \"/admin\", data: { message: \"Not authorized\" } }\n```\n\n#### 名称空间断连\n\n```\nClient > { type: DISCONNECT, nsp: \"/admin\" }\n```\n\n反之亦然。同时另外一端无需任何消息回复。\n\n#### ACK\n\n```\nClient > { type: EVENT, nsp: \"/admin\", data: [\"hello\"], id: 456 }\nServer > { type: ACK, nsp: \"/admin\", data: [], id: 456 }\nor\nServer > { type: BINARY_ACK, nsp: \"/admin\", data: [ <Buffer 01 02 03> ], id: 456 }\n```\n\n反之亦然。\n\n### 会话示例\n\n这里有一份包括了Socket.IO和Engine.IO的会话示例。\n\n- Request n°1 (open packet)\n\n```\nGET /socket.io/?EIO=4&transport=polling&t=N8hyd6w\n< HTTP/1.1 200 OK\n< Content-Type: text/plain; charset=UTF-8\n0{\"sid\":\"lv_VI97HAXpY6yYWAAAC\",\"upgrades\":[\"websocket\"],\"pingInterval\":25000,\"pingTimeout\":5000}\n```\n\n细节：\n\n```\n0           => Engine.IO \"open\" packet type\n{\"sid\":...  => the Engine.IO handshake data\n```\n\n注意：参数`t`用于防止浏览器缓存该请求。\n\n- Request n°2 (namespace connection request)\n\n```\nPOST /socket.io/?EIO=4&transport=polling&t=N8hyd7H&sid=lv_VI97HAXpY6yYWAAAC\n< HTTP/1.1 200 OK\n< Content-Type: text/plain; charset=UTF-8\n40\n```\n\n细节：\n\n```\n4           => Engine.IO \"message\" packet type\n0           => Socket.IO \"CONNECT\" packet type\n```\n\n- Request n°3 (namespace connection approval)\n\n```\nGET /socket.io/?EIO=4&transport=polling&t=N8hyd7H&sid=lv_VI97HAXpY6yYWAAAC\n< HTTP/1.1 200 OK\n< Content-Type: text/plain; charset=UTF-8\n40{\"sid\":\"wZX3oN0bSVIhsaknAAAI\"}\n```\n\n- Request n°4\n\n服务端会执行`socket.emit('hey', 'Jude')`\n\n```\nGET /socket.io/?EIO=4&transport=polling&t=N8hyd7H&sid=lv_VI97HAXpY6yYWAAAC\n< HTTP/1.1 200 OK\n< Content-Type: text/plain; charset=UTF-8\n42[\"hey\",\"Jude\"]\n```\n\n细节：\n\n```\n4           => Engine.IO \"message\" packet type\n2           => Socket.IO \"EVENT\" packet type\n[...]       => content\n```\n\n- Request n°5 (message out)\n\n客户端会执行`socket.emit('hello'); socket.emit('world');`\n\n```\nPOST /socket.io/?EIO=4&transport=polling&t=N8hzxke&sid=lv_VI97HAXpY6yYWAAAC\n> Content-Type: text/plain; charset=UTF-8\n42[\"hello\"]\\x1e42[\"world\"]\n< HTTP/1.1 200 OK\n< Content-Type: text/plain; charset=UTF-8\nok\n```\n\n细节：\n\n```\n4           => Engine.IO \"message\" packet type\n2           => Socket.IO \"EVENT\" packet type\n[\"hello\"]   => the 1st content\n\\x1e        => separator\n4           => Engine.IO \"message\" packet type\n2           => Socket.IO \"EVENT\" packet type\n[\"world\"]   => the 2nd content\n```\n\n- Request n°6 (WebSocket upgrade)\n\n```\nGET /socket.io/?EIO=4&transport=websocket&sid=lv_VI97HAXpY6yYWAAAC\n< HTTP/1.1 101 Switching Protocols\n```\n\nWebSocket数据帧：\n\n```\n< 2probe                                        => Engine.IO probe request\n> 3probe                                        => Engine.IO probe response\n> 5                                             => Engine.IO \"upgrade\" packet type\n> 42[\"hello\"]\n> 42[\"world\"]\n> 40/admin,                                     => request access to the admin namespace (Socket.IO \"CONNECT\" packet)\n< 40/admin,{\"sid\":\"-G5j-67EZFp-q59rADQM\"}       => grant access to the admin namespace\n> 42/admin,1[\"tellme\"]                          => Socket.IO \"EVENT\" packet with acknowledgement\n< 461-/admin,1[{\"_placeholder\":true,\"num\":0}]   => Socket.IO \"BINARY_ACK\" packet with a placeholder\n< <binary>                                      => the binary attachment (sent in the following frame)\n... after a while without message\n> 2                                             => Engine.IO \"ping\" packet type\n< 3                                             => Engine.IO \"pong\" packet type\n> 1                                             => Engine.IO \"close\" packet type\n```\n\n## 网络电话示例: \n\n```\n420[\"netPhone\", {msgId: \"fe9b9760-0b15-409f-a497-1909e53355d4\", signal: \"call\",…}]\n430[{msgId: \"fe9b9760-0b15-409f-a497-1909e53355d4\", signal: \"ack\", content: ,…}]\n42[\"netPhone\", {msgId: \"db2c3741-2029-4cbb-a536-ecd8baf4dbf8\", signal: \"call\",…}]\n```\n\n### \n","source":"_posts/socketio.md","raw":"---\ntitle: socketio\ndate: 2022-05-18 21:52:41\ntags: socketio\n---\n\n## EngineIO Protocol\n\n[**Engine.IO**](https://github.com/socketio/engine.io-protocol)是[**Socket.IO**](https://github.com/socketio/socket.io)更底层的实现基础，要想完整理解Socket.IO必须对Engine.IO协议也有深刻认知。\n\n### Engine.IO session详解\n\n1. 传输层与Engine.IO URL建立一个连接。\n\n2. 服务端返回一个JSON格式的\n\n   ```\n   OPEN\n   ```\n\n   握手数据，包括如下内容：\n\n   - `sid` session id（字符串）\n   - `upgrades` 可能有传输升级（字符串数组）\n   - `pingTimeout` 服务端需配置ping超时时间，用于客户端判断服务端是否不可达。（数字）\n   - `pingInterval` 服务端需配置ping间隔时间，用于客户端判断服务端是否不可达。（数字）\n\n3. 客户端必须通过`pong`周期性回复服务端的`ping`。\n\n4. 客户端和服务端可以在任意时刻交换`message`。\n\n5. Polling方式的传输允许发送`close`来关闭socket，因为预期中会一直处于\"opening\"和\"closing\"的状态。\n\n#### 会话示例\n\n- Request n°1 (open packet)\n\n```\nGET /engine.io/?EIO=4&transport=polling&t=N8hyd6w\n< HTTP/1.1 200 OK\n< Content-Type: text/plain; charset=UTF-8\n0{\"sid\":\"lv_VI97HAXpY6yYWAAAC\",\"upgrades\":[\"websocket\"],\"pingInterval\":25000,\"pingTimeout\":5000}\n```\n\n细节：\n\n```\n0           => \"open\" packet type\n{\"sid\":...  => the handshake data\n```\n\n注意：参数`t`用于防止浏览器缓存该请求。\n\n- Request n°2 (message in)\n\n服务端会执行`socket.send('hey')`：\n\n```\nGET /engine.io/?EIO=4&transport=polling&t=N8hyd7H&sid=lv_VI97HAXpY6yYWAAAC\n< HTTP/1.1 200 OK\n< Content-Type: text/plain; charset=UTF-8\n4hey\n```\n\n细节：\n\n```\n4           => \"message\" packet type\nhey         => the actual message\n```\n\n注意：`sid`参数包括握手数据中的sid。\n\n- Request n°3 (message out)\n\n客户端将会执行`socket.send('hello'); socket.send('world');`：\n\n```\nPOST /engine.io/?EIO=4&transport=polling&t=N8hzxke&sid=lv_VI97HAXpY6yYWAAAC\n> Content-Type: text/plain; charset=UTF-8\n4hello\\x1e4world\n< HTTP/1.1 200 OK\n< Content-Type: text/plain; charset=UTF-8\nok\n```\n\n细节：\n\n```\n4           => \"message\" packet type\nhello       => the 1st message\n\\x1e        => separator\n4           => \"message\" message type\nworld       => the 2nd message\n```\n\n- Request n°4 (WebSocket upgrade)\n\n```\nGET /engine.io/?EIO=4&transport=websocket&sid=lv_VI97HAXpY6yYWAAAC\n< HTTP/1.1 101 Switching Protocols\n```\n\nWebsocket数据帧：\n\n```\n< 2probe    => probe request\n> 3probe    => probe response\n< 5         => \"upgrade\" packet type\n> 4hello    => message (not concatenated)\n> 4world\n> 2         => \"ping\" packet type\n< 3         => \"pong\" packet type\n> 1         => \"close\" packet type\n```\n\n#### Websocket 会话示例\n\n这种情况下，客户端只启用Websocket（没有HTTP polling）。\n\n```\nGET /engine.io/?EIO=4&transport=websocket\n< HTTP/1.1 101 Switching Protocols\n```\n\nWebsocket数据帧：\n\n```\n< 0{\"sid\":\"lv_VI97HAXpY6yYWAAAC\",\"pingInterval\":25000,\"pingTimeout\":5000} => handshake\n< 4hey\n> 4hello    => message (not concatenated)\n> 4world\n< 2         => \"ping\" packet type\n> 3         => \"pong\" packet type\n> 1         => \"close\" packet type\n```\n\n### 路由\n\nEngine.IO路由组成如下：\n\n```\n/engine.io/[?<query string>]\n```\n\n- `engine.io`的路径名仅可以被基于engine.io上层协议的框架修改\n- 查询字符串是可选的，有6个保留字：\n  - `transport`：表明传输方式。默认支持`polling`，`websocket`。\n  - `j`：如果传输方式是`polling`且返回值必须是JSONP类型，则`j`必须设置为JSONP返回值的index。\n  - `sid`：如果客户端要加session id，必须放在查询字符串上。\n  - `EIO`：Engine.IO的版本号。\n  - `t`：时间戳的hash值，用来防止浏览器缓存。\n\nFAQ：`/engine.io`这部分路由是否可修改？ 可以，服务端在不同的子路径下拦截请求。\n\nFAQ：是什么因素决定一个选型出现在编码了的查询字符串上？换句话说，为什么`transport`字段不在路由上面呢？ 约定是子路径仅用于让Engine.IO的服务端消除是否要处理这个请求的歧义。这当然只有Engine.IO的前缀（`/engine.io`）。\n\n### 编码方式\n\n有两种不同的编码方式：\n\n- packet\n- Payload\n\n#### Packet\n\n一个编码的packet可以是UTF-8的字符串，也可以是二进制数据。字符串形式的编码packet如下：\n\n```\n<packet type id>[<data>]\n```\n\n例如：\n\n```\n4hello\n```\n\n对于二进制数据来说，无需包含packet类型，因为只有`message`可以包括二进制数据。\n\n##### 0 open\n\n当新的传输通道打开会从服务端发送。\n\n##### 1 close\n\n请求关闭此传输通道但不会立刻关闭连接。\n\n##### 2 ping\n\n由服务端发送，客户端回复pong包。\n\n样例：\n\n- server sends: `2`\n- client sends: `3`\n\n##### 3 pong\n\n客户端发送用于回复ping包。\n\n##### 4 message\n\n消息体，客户端和服务端可以通过它们的回调接口传输数据\n\n样例一：\n\n- 服务端发送：`4HelloWorld`\n- 客户端接收并触发回调：`socket.on('message', function (data) { console.log(data); });`\n\n样例二：\n\n- 客户端发送：`4HelloWorld`\n- 服务端接收并触发回调：`socket.on('message', function (data) { console.log(data); });`\n\n##### 5 upgrade\n\n在engine.io切换传输方式之前，它需要测试服务端和客户端之间是否允许这种传输方式。如果测试成功，客户端将会发送一个upgrade包给服务端并要求它刷新旧传输方式的缓存并切换到新的传输方式。\n\n##### 6 noop\n\nnoop包主要用于当一个websocket连接将要建立时候强制一轮poll循环。\n\n样例：\n\n1. 客户端通过新的传输方式连接\n2. 客户端发送：`2probe`\n3. 服务端接收并发送：`3probe`\n4. 客户端接收并发送：`5`\n5. 服务端刷新环境，关闭旧传输方式并切换至新的传输方式\n\n#### Payload\n\nPayload是一系列packet捆绑在一起。当仅支持字符串且XHR2不支持的情况下，payload编码格式如下：\n\n```\n<packet1>\\x1e<packet2>\\x1e<packet3>\n```\n\npacket通过('\\x1e')分割，更多信息请参考： https://en.wikipedia.org/wiki/C0_and_C1_control_codes#Field_separators\n\n当payload支持二进制数据时，它会通过发送base64编码的字符串。为了便于解码，二进制格式的packet前会插入字符`b`。任意数量的字符串和base64编码的字符串可以被聚合发送。下面是base64编码消息的样例：\n\n```\n<packet1>\\x1eb<packet2 data in b64>[...]\n```\n\npayload用于不支持帧方式的传输，比如polling协议。\n\n- 无二进制数据样例：\n\n```json\n[\n  {\n    \"type\": \"message\",\n    \"data\": \"hello\"\n  },\n  {\n    \"type\": \"message\",\n    \"data\": \"€\"\n  }\n]\n```\n\n被编码为：\n\n```\n4hello\\x1e4€\n```\n\n- 二进制数据样例：\n\n```json\n[\n  {\n    \"type\": \"message\",\n    \"data\": \"€\"\n  },\n  {\n    \"type\": \"message\",\n    \"data\": buffer <01 02 03 04>\n  }\n]\n```\n\n被编码为：\n\n```\n4€\\x1ebAQIDBA==\n\nwith\n\n4           => \"message\" packet type\n€\n\\x1e        => record separator\nb           => indicates a base64 packet\nAQIDBA==    => buffer content encoded in base64\n```\n\n### 传输方式\n\nEngine.IO的服务端必须支持三种传输方式：\n\n- websocket\n- server-sent events (SSE)\n- Polling\n  - Jsonp\n  - Xhr\n\n#### Polling\n\npolling方式包括客户端循环GET请求访问服务端获取数据，以及客户端POST请求传输数据给服务端。\n\n##### XHR\n\n服务端必须支持跨域。\n\n##### JSONP\n\n服务端的实现必须回复合法的JavaScript。URL上面必须包含查询字符串参数`j`，并必须被应用在返回体中。`j`是一个整数：\n\nJSONP格式：\n\n```\n`___eio[` <j> `](\"` <encoded payload> `\");`\n```\n\n为了确保payload被正确处理，它的转义也必须符合合法的JavaScript。使用一个JSON编码器是一个发送编码payload的良好转义方法。\n\n如下是服务端返回的JSONP样例：\n\n```\n___eio[4](\"packet data\");\n```\n\n**上传数据**\n\n客户端通过一个隐藏的`iframe`上传数据。到服务端的数据在URI中的编码格式如下：\n\n```\nd=<escaped packet payload>\n```\n\n此外根据标准转义规范，为了防止浏览器对`\\n`处理的不一致，`\\n`会在POST中会转义为`\\\\n`。\n\n#### Server-sent events\n\n客户端使用一个EventSource的对象用于接收数据，使用一个XMLHttpRequest的对象用于发送数据。\n\n#### Websocket\n\npayload编码不适用websocket，因为协议本身已经具有一个轻量级的数据帧机制。\n\n发送payload类型的消息，只需要单独编码并连续调用`send()`发送。\n\n### 传输升级\n\n一个连接总是要从polling方式开始（XHR或者JSONP）。websocket要通过发送一个探测开始。加入服务端对探测有返回结果，则会发送一个upgrade包。\n\n为了确保没有消息丢失，upgrade包在当前存在的传输通道缓存中仅会被发送一次，且此时传输被认为是处于暂停状态。\n\n当服务端接收到upgrade包，它必须假设这是新的传输通道，并且发送当前以及存在的通道中所有的缓存内容。\n\n客户端发送的探测是由`ping`包类型和`probe`字符串拼接成的数据。服务端返回的探测是由`pong`包类型和`probe`字符串拼接成的数据。\n\n进一步说，升级只会考虑`polling -> x`。\n\n### 超时时间\n\n客户端必须使用`pingTimeout`和`pingInterval`作为握手的部分（带着`open`包）来判断服务端是否断开。\n\n服务端发送一个`ping`包。如果在`pingTimeout`之内没有接收到包类型，则服务端会认为socket已经断开连接。如果`pong`包返回并接收成功的话，服务端会等待`pingInterval`之后再发送下一个`ping`包。\n\n由于两个值在服务端和客户端是共享的，客户端也可以通过它们来判断服务端是否断开连接当它没有在`pingTimeout+pingInterval`之内收到任何数据。\n\n## SocketIO Protocol\n\n大部分内容引自出处: [blog](https://www.kevinwu0904.top/blogs/network-socketio/)。开源社区介绍 [github socket.io](https://github.com/socketio/socket.io-protocol)\n\n### Packet格式\n\n一个Packet包括以下字段：\n\n- 类型（整数，详见下文）\n- 名称空间（字符串）\n- 可选字段：Packet内容（对象 | 数组）\n- 可选字段：ACK的ID（整数）\n\n### Packet类型\n\n#### 0-CONNECT\n\n该事件发生时机：\n\n- 当客户端连接一个名称空间。客户端会发送一个用于鉴权的payload，例如：\n\n```json\n{\n  \"type\": 0,\n  \"nsp\": \"/admin\",\n  \"data\": {\n    \"token\": \"123\"\n  }\n}\n```\n\n- 当服务端接受来自一个名称空间的连接。请求成功后，服务端会响应一个带有Socket ID的payload，例如：\n\n```json\n{\n  \"type\": 0,\n  \"nsp\": \"/admin\",\n  \"data\": {\n    \"sid\": \"CjdVH4TQvovi1VvgAC5Z\"\n  }\n}\n```\n\n#### 1-DISCONNECT\n\n该事件发生在一端想要断开名称空间的连接时。它不包括任何payload和ACK ID，例如：\n\n```json\n{\n  \"type\": 1,\n  \"nsp\": \"/admin\"\n}\n```\n\n#### 2-EVENT\n\n该事件发生在一端想要给另一端传输数据（不包括二进制数据）时。它包括payload，可能还会包括ACK ID，例如：\n\n```json\n{\n  \"type\": 2,\n  \"nsp\": \"/\",\n  \"data\": [\"hello\", 1]\n}\n```\n\n包括ACK ID的样例：\n\n```json\n{\n  \"type\": 2,\n  \"nsp\": \"/admin\",\n  \"data\": [\"project:delete\", 123],\n  \"id\": 456\n}\n```\n\n#### 3-ACK\n\n该事件发生在一端接收到EVENT事件或带有ACK ID的BINARY_EVENT事件。它包括对之前这个事件的ACK ID，可能还会包括payload（不包括二进制数据），例如：\n\n```json\n{\n  \"type\": 3,\n  \"nsp\": \"/admin\",\n  \"data\": [],\n  \"id\": 456\n}\n```\n\n#### 4-CONNECT_ERROR\n\n该事件发生在服务端拒绝一个名称空间的连接时。它包括一个\"message\"字段，可能还会包括一个\"data\"字段，例如：\n\n```json\n{\n  \"type\": 4,\n  \"nsp\": \"/admin\",\n  \"data\": {\n    \"message\": \"Not authorized\",\n    \"data\": {\n      \"code\": \"E001\",\n      \"label\": \"Invalid credentials\"\n    }\n  }\n}\n```\n\n#### 5-BINARY_EVENT\n\n注意：BINARY_EVENT和BINARY_ACK都用于内建的解析器中，为了区别出包中是否包括二进制内容。它们不会用于其他自定义解析器中。\n\n该事件发生在一端想要给另一端传输数据（包括二进制数据）时。它包括payload，可能还会包括ACK ID，例如：\n\n```json\n{\n  \"type\": 5,\n  \"nsp\": \"/\",\n  \"data\": [\"hello\", <Buffer 01 02 03>]\n}\n```\n\n包括ACK ID的样例：\n\n```json\n{\n  \"type\": 5,\n  \"nsp\": \"/admin\",\n  \"data\": [\"project:delete\", <Buffer 01 02 03>],\n  \"id\": 456\n}\n```\n\n#### 6-BINARY_ACK\n\n该事件发生在一端接收到EVENT事件或带有ACK ID的BINARY_EVENT事件。它包括对之前这个事件的ACK ID，可能还会包括payload（包括二进制数据），例如：\n\n```json\n{\n  \"type\": 6,\n  \"nsp\": \"/admin\",\n  \"data\": [<Buffer 03 02 01>],\n  \"id\": 456\n}\n```\n\n### Packet编码\n\n本小节描述了Socket.IO 客户端和服务端之间默认解析器的编码细节，源码实现参考：[这里](https://github.com/socketio/socket.io-parser)。\n\n另外注意一点：Socket.IO的packet本质上是Engine.IO`message`类型的packet（关于Engine.IO参考[这里](https://github.com/socketio/engine.io-protocol)），所以编码结果发送时候会带上`4`这个数字前缀。（在HTTP long-polling的请求和响应包体中，或者在Websocket的数据帧中。）\n\n#### 编码格式\n\n```\n<packet type>[<# of binary attachments>-][<namespace>,][<acknowledgment id>][JSON-stringified payload without binary]\n\n+ binary attachments extracted\n```\n\n注意：\n\n- 当名称空间不是默认的`/`时候才会出现在编码格式中。\n\n#### 编码样例\n\n- `/`名称空间`CONNECT`\n\n```json\n{\n  \"type\": 0,\n  \"nsp\": \"/\",\n  \"data\": {\n    \"token\": \"123\"\n  }\n}\n```\n\n编码为：`0{\"token\":\"123\"}`\n\n- `/admin`名称空间的`CONNECT`\n\n```json\n{\n  \"type\": 0,\n  \"nsp\": \"/admin\",\n  \"data\": {\n    \"token\": \"123\"\n  }\n}\n```\n\n编码为`0/admin,{\"token\":\"123\"}`\n\n+ `/admin`名称空间的`DISCONNECT`\n\n```json\n{\n  \"type\": 1,\n  \"nsp\": \"/admin\"\n}\n```\n\n编码为`1/admin`\n\n- `EVENT`\n\n```json\n{\n  \"type\": 2,\n  \"nsp\": \"/\",\n  \"data\": [\"hello\", 1]\n}\n```\n\n编码为`2[\"hello\",1]`\n\n- 带ACK ID的`EVENT`\n\n```json\n{\n  \"type\": 2,\n  \"nsp\": \"/admin\",\n  \"data\": [\"project:delete\", 123],\n  \"id\": 456\n}\n```\n\n编码为`2/admin,456[\"project:delete\",123]`\n\n- `ACK`\n\n```json\n{\n  \"type\": 3,\n  \"nsp\": \"/admin\",\n  \"data\": [],\n  \"id\": 456\n}\n```\n\n编码为`3/admin,456[]`\n\n- `CONNECT_ERROR`\n\n```json\n{\n  \"type\": 4,\n  \"nsp\": \"/admin\",\n  \"data\": {\n    \"message\": \"Not authorized\"\n  }\n}\n```\n\n编码为`4/admin,{\"message\":\"Not authorized\"}`\n\n- `BINARY_EVENT`\n\n```json\n{\n  \"type\": 5,\n  \"nsp\": \"/\",\n  \"data\": [\"hello\", <Buffer 01 02 03>]\n}\n```\n\n编码为`51-[\"hello\",{\"_placeholder\":true,\"num\":0}] + <Buffer 01 02 03>`\n\n- 带ACK ID的`BINARY_EVENT`\n\n```json\n{\n  \"type\": 5,\n  \"nsp\": \"/admin\",\n  \"data\": [\"project:delete\", <Buffer 01 02 03>],\n  \"id\": 456\n}\n```\n\n编码为`51-/admin,456[\"project:delete\",{\"_placeholder\":true,\"num\":0}] + <Buffer 01 02 03>`\n\n- `BINARY_ACK`\n\n```json\n{\n  \"type\": 6,\n  \"nsp\": \"/admin\",\n  \"data\": [<Buffer 03 02 01>],\n  \"id\": 456\n}\n```\n\n编码为`61-/admin,456[{\"_placeholder\":true,\"num\":0}] + <Buffer 03 02 01>`\n\n### 协议交互\n\n#### 连接名称空间\n\n对于每个名称空间（包括主名称空间），客户端首先发送一个`CONNECT`，服务端回复一个带有Socket ID的`CONNECT`。\n\n```\nClient > { type: CONNECT, nsp: \"/admin\" }\nServer > { type: CONNECT, nsp: \"/admin\", data: { sid: \"wZX3oN0bSVIhsaknAAAI\" } } (if the connection is successful)\nor\nServer > { type: CONNECT_ERROR, nsp: \"/admin\", data: { message: \"Not authorized\" } }\n```\n\n#### 名称空间断连\n\n```\nClient > { type: DISCONNECT, nsp: \"/admin\" }\n```\n\n反之亦然。同时另外一端无需任何消息回复。\n\n#### ACK\n\n```\nClient > { type: EVENT, nsp: \"/admin\", data: [\"hello\"], id: 456 }\nServer > { type: ACK, nsp: \"/admin\", data: [], id: 456 }\nor\nServer > { type: BINARY_ACK, nsp: \"/admin\", data: [ <Buffer 01 02 03> ], id: 456 }\n```\n\n反之亦然。\n\n### 会话示例\n\n这里有一份包括了Socket.IO和Engine.IO的会话示例。\n\n- Request n°1 (open packet)\n\n```\nGET /socket.io/?EIO=4&transport=polling&t=N8hyd6w\n< HTTP/1.1 200 OK\n< Content-Type: text/plain; charset=UTF-8\n0{\"sid\":\"lv_VI97HAXpY6yYWAAAC\",\"upgrades\":[\"websocket\"],\"pingInterval\":25000,\"pingTimeout\":5000}\n```\n\n细节：\n\n```\n0           => Engine.IO \"open\" packet type\n{\"sid\":...  => the Engine.IO handshake data\n```\n\n注意：参数`t`用于防止浏览器缓存该请求。\n\n- Request n°2 (namespace connection request)\n\n```\nPOST /socket.io/?EIO=4&transport=polling&t=N8hyd7H&sid=lv_VI97HAXpY6yYWAAAC\n< HTTP/1.1 200 OK\n< Content-Type: text/plain; charset=UTF-8\n40\n```\n\n细节：\n\n```\n4           => Engine.IO \"message\" packet type\n0           => Socket.IO \"CONNECT\" packet type\n```\n\n- Request n°3 (namespace connection approval)\n\n```\nGET /socket.io/?EIO=4&transport=polling&t=N8hyd7H&sid=lv_VI97HAXpY6yYWAAAC\n< HTTP/1.1 200 OK\n< Content-Type: text/plain; charset=UTF-8\n40{\"sid\":\"wZX3oN0bSVIhsaknAAAI\"}\n```\n\n- Request n°4\n\n服务端会执行`socket.emit('hey', 'Jude')`\n\n```\nGET /socket.io/?EIO=4&transport=polling&t=N8hyd7H&sid=lv_VI97HAXpY6yYWAAAC\n< HTTP/1.1 200 OK\n< Content-Type: text/plain; charset=UTF-8\n42[\"hey\",\"Jude\"]\n```\n\n细节：\n\n```\n4           => Engine.IO \"message\" packet type\n2           => Socket.IO \"EVENT\" packet type\n[...]       => content\n```\n\n- Request n°5 (message out)\n\n客户端会执行`socket.emit('hello'); socket.emit('world');`\n\n```\nPOST /socket.io/?EIO=4&transport=polling&t=N8hzxke&sid=lv_VI97HAXpY6yYWAAAC\n> Content-Type: text/plain; charset=UTF-8\n42[\"hello\"]\\x1e42[\"world\"]\n< HTTP/1.1 200 OK\n< Content-Type: text/plain; charset=UTF-8\nok\n```\n\n细节：\n\n```\n4           => Engine.IO \"message\" packet type\n2           => Socket.IO \"EVENT\" packet type\n[\"hello\"]   => the 1st content\n\\x1e        => separator\n4           => Engine.IO \"message\" packet type\n2           => Socket.IO \"EVENT\" packet type\n[\"world\"]   => the 2nd content\n```\n\n- Request n°6 (WebSocket upgrade)\n\n```\nGET /socket.io/?EIO=4&transport=websocket&sid=lv_VI97HAXpY6yYWAAAC\n< HTTP/1.1 101 Switching Protocols\n```\n\nWebSocket数据帧：\n\n```\n< 2probe                                        => Engine.IO probe request\n> 3probe                                        => Engine.IO probe response\n> 5                                             => Engine.IO \"upgrade\" packet type\n> 42[\"hello\"]\n> 42[\"world\"]\n> 40/admin,                                     => request access to the admin namespace (Socket.IO \"CONNECT\" packet)\n< 40/admin,{\"sid\":\"-G5j-67EZFp-q59rADQM\"}       => grant access to the admin namespace\n> 42/admin,1[\"tellme\"]                          => Socket.IO \"EVENT\" packet with acknowledgement\n< 461-/admin,1[{\"_placeholder\":true,\"num\":0}]   => Socket.IO \"BINARY_ACK\" packet with a placeholder\n< <binary>                                      => the binary attachment (sent in the following frame)\n... after a while without message\n> 2                                             => Engine.IO \"ping\" packet type\n< 3                                             => Engine.IO \"pong\" packet type\n> 1                                             => Engine.IO \"close\" packet type\n```\n\n## 网络电话示例: \n\n```\n420[\"netPhone\", {msgId: \"fe9b9760-0b15-409f-a497-1909e53355d4\", signal: \"call\",…}]\n430[{msgId: \"fe9b9760-0b15-409f-a497-1909e53355d4\", signal: \"ack\", content: ,…}]\n42[\"netPhone\", {msgId: \"db2c3741-2029-4cbb-a536-ecd8baf4dbf8\", signal: \"call\",…}]\n```\n\n### \n","slug":"socketio","published":1,"updated":"2022-05-18T15:09:17.073Z","_id":"cl3bnaatl0001859rgicc24ur","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"EngineIO-Protocol\"><a href=\"#EngineIO-Protocol\" class=\"headerlink\" title=\"EngineIO Protocol\"></a>EngineIO Protocol</h2><p><a href=\"https://github.com/socketio/engine.io-protocol\"><strong>Engine.IO</strong></a>是<a href=\"https://github.com/socketio/socket.io\"><strong>Socket.IO</strong></a>更底层的实现基础，要想完整理解Socket.IO必须对Engine.IO协议也有深刻认知。</p>\n<h3 id=\"Engine-IO-session详解\"><a href=\"#Engine-IO-session详解\" class=\"headerlink\" title=\"Engine.IO session详解\"></a>Engine.IO session详解</h3><ol>\n<li><p>传输层与Engine.IO URL建立一个连接。</p>\n</li>\n<li><p>服务端返回一个JSON格式的</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">OPEN</span><br></pre></td></tr></table></figure>\n\n<p>握手数据，包括如下内容：</p>\n<ul>\n<li><code>sid</code> session id（字符串）</li>\n<li><code>upgrades</code> 可能有传输升级（字符串数组）</li>\n<li><code>pingTimeout</code> 服务端需配置ping超时时间，用于客户端判断服务端是否不可达。（数字）</li>\n<li><code>pingInterval</code> 服务端需配置ping间隔时间，用于客户端判断服务端是否不可达。（数字）</li>\n</ul>\n</li>\n<li><p>客户端必须通过<code>pong</code>周期性回复服务端的<code>ping</code>。</p>\n</li>\n<li><p>客户端和服务端可以在任意时刻交换<code>message</code>。</p>\n</li>\n<li><p>Polling方式的传输允许发送<code>close</code>来关闭socket，因为预期中会一直处于”opening”和”closing”的状态。</p>\n</li>\n</ol>\n<h4 id=\"会话示例\"><a href=\"#会话示例\" class=\"headerlink\" title=\"会话示例\"></a>会话示例</h4><ul>\n<li>Request n°1 (open packet)</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET /engine.io/?EIO=4&amp;transport=polling&amp;t=N8hyd6w</span><br><span class=\"line\">&lt; HTTP/1.1 200 OK</span><br><span class=\"line\">&lt; Content-Type: text/plain; charset=UTF-8</span><br><span class=\"line\">0&#123;&quot;sid&quot;:&quot;lv_VI97HAXpY6yYWAAAC&quot;,&quot;upgrades&quot;:[&quot;websocket&quot;],&quot;pingInterval&quot;:25000,&quot;pingTimeout&quot;:5000&#125;</span><br></pre></td></tr></table></figure>\n\n<p>细节：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0           =&gt; &quot;open&quot; packet type</span><br><span class=\"line\">&#123;&quot;sid&quot;:...  =&gt; the handshake data</span><br></pre></td></tr></table></figure>\n\n<p>注意：参数<code>t</code>用于防止浏览器缓存该请求。</p>\n<ul>\n<li>Request n°2 (message in)</li>\n</ul>\n<p>服务端会执行<code>socket.send(&#39;hey&#39;)</code>：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET /engine.io/?EIO=4&amp;transport=polling&amp;t=N8hyd7H&amp;sid=lv_VI97HAXpY6yYWAAAC</span><br><span class=\"line\">&lt; HTTP/1.1 200 OK</span><br><span class=\"line\">&lt; Content-Type: text/plain; charset=UTF-8</span><br><span class=\"line\">4hey</span><br></pre></td></tr></table></figure>\n\n<p>细节：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4           =&gt; &quot;message&quot; packet type</span><br><span class=\"line\">hey         =&gt; the actual message</span><br></pre></td></tr></table></figure>\n\n<p>注意：<code>sid</code>参数包括握手数据中的sid。</p>\n<ul>\n<li>Request n°3 (message out)</li>\n</ul>\n<p>客户端将会执行<code>socket.send(&#39;hello&#39;); socket.send(&#39;world&#39;);</code>：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST /engine.io/?EIO=4&amp;transport=polling&amp;t=N8hzxke&amp;sid=lv_VI97HAXpY6yYWAAAC</span><br><span class=\"line\">&gt; Content-Type: text/plain; charset=UTF-8</span><br><span class=\"line\">4hello\\x1e4world</span><br><span class=\"line\">&lt; HTTP/1.1 200 OK</span><br><span class=\"line\">&lt; Content-Type: text/plain; charset=UTF-8</span><br><span class=\"line\">ok</span><br></pre></td></tr></table></figure>\n\n<p>细节：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4           =&gt; &quot;message&quot; packet type</span><br><span class=\"line\">hello       =&gt; the 1st message</span><br><span class=\"line\">\\x1e        =&gt; separator</span><br><span class=\"line\">4           =&gt; &quot;message&quot; message type</span><br><span class=\"line\">world       =&gt; the 2nd message</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>Request n°4 (WebSocket upgrade)</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET /engine.io/?EIO=4&amp;transport=websocket&amp;sid=lv_VI97HAXpY6yYWAAAC</span><br><span class=\"line\">&lt; HTTP/1.1 101 Switching Protocols</span><br></pre></td></tr></table></figure>\n\n<p>Websocket数据帧：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt; 2probe    =&gt; probe request</span><br><span class=\"line\">&gt; 3probe    =&gt; probe response</span><br><span class=\"line\">&lt; 5         =&gt; &quot;upgrade&quot; packet type</span><br><span class=\"line\">&gt; 4hello    =&gt; message (not concatenated)</span><br><span class=\"line\">&gt; 4world</span><br><span class=\"line\">&gt; 2         =&gt; &quot;ping&quot; packet type</span><br><span class=\"line\">&lt; 3         =&gt; &quot;pong&quot; packet type</span><br><span class=\"line\">&gt; 1         =&gt; &quot;close&quot; packet type</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Websocket-会话示例\"><a href=\"#Websocket-会话示例\" class=\"headerlink\" title=\"Websocket 会话示例\"></a>Websocket 会话示例</h4><p>这种情况下，客户端只启用Websocket（没有HTTP polling）。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET /engine.io/?EIO=4&amp;transport=websocket</span><br><span class=\"line\">&lt; HTTP/1.1 101 Switching Protocols</span><br></pre></td></tr></table></figure>\n\n<p>Websocket数据帧：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt; 0&#123;&quot;sid&quot;:&quot;lv_VI97HAXpY6yYWAAAC&quot;,&quot;pingInterval&quot;:25000,&quot;pingTimeout&quot;:5000&#125; =&gt; handshake</span><br><span class=\"line\">&lt; 4hey</span><br><span class=\"line\">&gt; 4hello    =&gt; message (not concatenated)</span><br><span class=\"line\">&gt; 4world</span><br><span class=\"line\">&lt; 2         =&gt; &quot;ping&quot; packet type</span><br><span class=\"line\">&gt; 3         =&gt; &quot;pong&quot; packet type</span><br><span class=\"line\">&gt; 1         =&gt; &quot;close&quot; packet type</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"路由\"><a href=\"#路由\" class=\"headerlink\" title=\"路由\"></a>路由</h3><p>Engine.IO路由组成如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/engine.io/[?&lt;query string&gt;]</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>engine.io</code>的路径名仅可以被基于engine.io上层协议的框架修改</li>\n<li>查询字符串是可选的，有6个保留字：<ul>\n<li><code>transport</code>：表明传输方式。默认支持<code>polling</code>，<code>websocket</code>。</li>\n<li><code>j</code>：如果传输方式是<code>polling</code>且返回值必须是JSONP类型，则<code>j</code>必须设置为JSONP返回值的index。</li>\n<li><code>sid</code>：如果客户端要加session id，必须放在查询字符串上。</li>\n<li><code>EIO</code>：Engine.IO的版本号。</li>\n<li><code>t</code>：时间戳的hash值，用来防止浏览器缓存。</li>\n</ul>\n</li>\n</ul>\n<p>FAQ：<code>/engine.io</code>这部分路由是否可修改？ 可以，服务端在不同的子路径下拦截请求。</p>\n<p>FAQ：是什么因素决定一个选型出现在编码了的查询字符串上？换句话说，为什么<code>transport</code>字段不在路由上面呢？ 约定是子路径仅用于让Engine.IO的服务端消除是否要处理这个请求的歧义。这当然只有Engine.IO的前缀（<code>/engine.io</code>）。</p>\n<h3 id=\"编码方式\"><a href=\"#编码方式\" class=\"headerlink\" title=\"编码方式\"></a>编码方式</h3><p>有两种不同的编码方式：</p>\n<ul>\n<li>packet</li>\n<li>Payload</li>\n</ul>\n<h4 id=\"Packet\"><a href=\"#Packet\" class=\"headerlink\" title=\"Packet\"></a>Packet</h4><p>一个编码的packet可以是UTF-8的字符串，也可以是二进制数据。字符串形式的编码packet如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;packet type id&gt;[&lt;data&gt;]</span><br></pre></td></tr></table></figure>\n\n<p>例如：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4hello</span><br></pre></td></tr></table></figure>\n\n<p>对于二进制数据来说，无需包含packet类型，因为只有<code>message</code>可以包括二进制数据。</p>\n<h5 id=\"0-open\"><a href=\"#0-open\" class=\"headerlink\" title=\"0 open\"></a>0 open</h5><p>当新的传输通道打开会从服务端发送。</p>\n<h5 id=\"1-close\"><a href=\"#1-close\" class=\"headerlink\" title=\"1 close\"></a>1 close</h5><p>请求关闭此传输通道但不会立刻关闭连接。</p>\n<h5 id=\"2-ping\"><a href=\"#2-ping\" class=\"headerlink\" title=\"2 ping\"></a>2 ping</h5><p>由服务端发送，客户端回复pong包。</p>\n<p>样例：</p>\n<ul>\n<li>server sends: <code>2</code></li>\n<li>client sends: <code>3</code></li>\n</ul>\n<h5 id=\"3-pong\"><a href=\"#3-pong\" class=\"headerlink\" title=\"3 pong\"></a>3 pong</h5><p>客户端发送用于回复ping包。</p>\n<h5 id=\"4-message\"><a href=\"#4-message\" class=\"headerlink\" title=\"4 message\"></a>4 message</h5><p>消息体，客户端和服务端可以通过它们的回调接口传输数据</p>\n<p>样例一：</p>\n<ul>\n<li>服务端发送：<code>4HelloWorld</code></li>\n<li>客户端接收并触发回调：<code>socket.on(&#39;message&#39;, function (data) &#123; console.log(data); &#125;);</code></li>\n</ul>\n<p>样例二：</p>\n<ul>\n<li>客户端发送：<code>4HelloWorld</code></li>\n<li>服务端接收并触发回调：<code>socket.on(&#39;message&#39;, function (data) &#123; console.log(data); &#125;);</code></li>\n</ul>\n<h5 id=\"5-upgrade\"><a href=\"#5-upgrade\" class=\"headerlink\" title=\"5 upgrade\"></a>5 upgrade</h5><p>在engine.io切换传输方式之前，它需要测试服务端和客户端之间是否允许这种传输方式。如果测试成功，客户端将会发送一个upgrade包给服务端并要求它刷新旧传输方式的缓存并切换到新的传输方式。</p>\n<h5 id=\"6-noop\"><a href=\"#6-noop\" class=\"headerlink\" title=\"6 noop\"></a>6 noop</h5><p>noop包主要用于当一个websocket连接将要建立时候强制一轮poll循环。</p>\n<p>样例：</p>\n<ol>\n<li>客户端通过新的传输方式连接</li>\n<li>客户端发送：<code>2probe</code></li>\n<li>服务端接收并发送：<code>3probe</code></li>\n<li>客户端接收并发送：<code>5</code></li>\n<li>服务端刷新环境，关闭旧传输方式并切换至新的传输方式</li>\n</ol>\n<h4 id=\"Payload\"><a href=\"#Payload\" class=\"headerlink\" title=\"Payload\"></a>Payload</h4><p>Payload是一系列packet捆绑在一起。当仅支持字符串且XHR2不支持的情况下，payload编码格式如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;packet1&gt;\\x1e&lt;packet2&gt;\\x1e&lt;packet3&gt;</span><br></pre></td></tr></table></figure>\n\n<p>packet通过(‘\\x1e’)分割，更多信息请参考： <a href=\"https://en.wikipedia.org/wiki/C0_and_C1_control_codes#Field_separators\">https://en.wikipedia.org/wiki/C0_and_C1_control_codes#Field_separators</a></p>\n<p>当payload支持二进制数据时，它会通过发送base64编码的字符串。为了便于解码，二进制格式的packet前会插入字符<code>b</code>。任意数量的字符串和base64编码的字符串可以被聚合发送。下面是base64编码消息的样例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;packet1&gt;\\x1eb&lt;packet2 data in b64&gt;[...]</span><br></pre></td></tr></table></figure>\n\n<p>payload用于不支持帧方式的传输，比如polling协议。</p>\n<ul>\n<li>无二进制数据样例：</li>\n</ul>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">[</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;message&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;data&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;hello&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;message&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;data&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;€&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">]</span></span><br></pre></td></tr></table></figure>\n\n<p>被编码为：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4hello\\x1e4€</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>二进制数据样例：</li>\n</ul>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">[</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;message&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;data&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;€&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;message&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;data&quot;</span><span class=\"punctuation\">:</span> buffer &lt;<span class=\"number\">01</span> <span class=\"number\">02</span> <span class=\"number\">03</span> <span class=\"number\">04</span>&gt;</span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">]</span></span><br></pre></td></tr></table></figure>\n\n<p>被编码为：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4€\\x1ebAQIDBA==</span><br><span class=\"line\"></span><br><span class=\"line\">with</span><br><span class=\"line\"></span><br><span class=\"line\">4           =&gt; &quot;message&quot; packet type</span><br><span class=\"line\">€</span><br><span class=\"line\">\\x1e        =&gt; record separator</span><br><span class=\"line\">b           =&gt; indicates a base64 packet</span><br><span class=\"line\">AQIDBA==    =&gt; buffer content encoded in base64</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"传输方式\"><a href=\"#传输方式\" class=\"headerlink\" title=\"传输方式\"></a>传输方式</h3><p>Engine.IO的服务端必须支持三种传输方式：</p>\n<ul>\n<li>websocket</li>\n<li>server-sent events (SSE)</li>\n<li>Polling<ul>\n<li>Jsonp</li>\n<li>Xhr</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Polling\"><a href=\"#Polling\" class=\"headerlink\" title=\"Polling\"></a>Polling</h4><p>polling方式包括客户端循环GET请求访问服务端获取数据，以及客户端POST请求传输数据给服务端。</p>\n<h5 id=\"XHR\"><a href=\"#XHR\" class=\"headerlink\" title=\"XHR\"></a>XHR</h5><p>服务端必须支持跨域。</p>\n<h5 id=\"JSONP\"><a href=\"#JSONP\" class=\"headerlink\" title=\"JSONP\"></a>JSONP</h5><p>服务端的实现必须回复合法的JavaScript。URL上面必须包含查询字符串参数<code>j</code>，并必须被应用在返回体中。<code>j</code>是一个整数：</p>\n<p>JSONP格式：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">`___eio[` &lt;j&gt; `](&quot;` &lt;encoded payload&gt; `&quot;);`</span><br></pre></td></tr></table></figure>\n\n<p>为了确保payload被正确处理，它的转义也必须符合合法的JavaScript。使用一个JSON编码器是一个发送编码payload的良好转义方法。</p>\n<p>如下是服务端返回的JSONP样例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">___eio[4](&quot;packet data&quot;);</span><br></pre></td></tr></table></figure>\n\n<p><strong>上传数据</strong></p>\n<p>客户端通过一个隐藏的<code>iframe</code>上传数据。到服务端的数据在URI中的编码格式如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">d=&lt;escaped packet payload&gt;</span><br></pre></td></tr></table></figure>\n\n<p>此外根据标准转义规范，为了防止浏览器对<code>\\n</code>处理的不一致，<code>\\n</code>会在POST中会转义为<code>\\\\n</code>。</p>\n<h4 id=\"Server-sent-events\"><a href=\"#Server-sent-events\" class=\"headerlink\" title=\"Server-sent events\"></a>Server-sent events</h4><p>客户端使用一个EventSource的对象用于接收数据，使用一个XMLHttpRequest的对象用于发送数据。</p>\n<h4 id=\"Websocket\"><a href=\"#Websocket\" class=\"headerlink\" title=\"Websocket\"></a>Websocket</h4><p>payload编码不适用websocket，因为协议本身已经具有一个轻量级的数据帧机制。</p>\n<p>发送payload类型的消息，只需要单独编码并连续调用<code>send()</code>发送。</p>\n<h3 id=\"传输升级\"><a href=\"#传输升级\" class=\"headerlink\" title=\"传输升级\"></a>传输升级</h3><p>一个连接总是要从polling方式开始（XHR或者JSONP）。websocket要通过发送一个探测开始。加入服务端对探测有返回结果，则会发送一个upgrade包。</p>\n<p>为了确保没有消息丢失，upgrade包在当前存在的传输通道缓存中仅会被发送一次，且此时传输被认为是处于暂停状态。</p>\n<p>当服务端接收到upgrade包，它必须假设这是新的传输通道，并且发送当前以及存在的通道中所有的缓存内容。</p>\n<p>客户端发送的探测是由<code>ping</code>包类型和<code>probe</code>字符串拼接成的数据。服务端返回的探测是由<code>pong</code>包类型和<code>probe</code>字符串拼接成的数据。</p>\n<p>进一步说，升级只会考虑<code>polling -&gt; x</code>。</p>\n<h3 id=\"超时时间\"><a href=\"#超时时间\" class=\"headerlink\" title=\"超时时间\"></a>超时时间</h3><p>客户端必须使用<code>pingTimeout</code>和<code>pingInterval</code>作为握手的部分（带着<code>open</code>包）来判断服务端是否断开。</p>\n<p>服务端发送一个<code>ping</code>包。如果在<code>pingTimeout</code>之内没有接收到包类型，则服务端会认为socket已经断开连接。如果<code>pong</code>包返回并接收成功的话，服务端会等待<code>pingInterval</code>之后再发送下一个<code>ping</code>包。</p>\n<p>由于两个值在服务端和客户端是共享的，客户端也可以通过它们来判断服务端是否断开连接当它没有在<code>pingTimeout+pingInterval</code>之内收到任何数据。</p>\n<h2 id=\"SocketIO-Protocol\"><a href=\"#SocketIO-Protocol\" class=\"headerlink\" title=\"SocketIO Protocol\"></a>SocketIO Protocol</h2><p>大部分内容引自出处: <a href=\"https://www.kevinwu0904.top/blogs/network-socketio/\">blog</a>。开源社区介绍 <a href=\"https://github.com/socketio/socket.io-protocol\">github socket.io</a></p>\n<h3 id=\"Packet格式\"><a href=\"#Packet格式\" class=\"headerlink\" title=\"Packet格式\"></a>Packet格式</h3><p>一个Packet包括以下字段：</p>\n<ul>\n<li>类型（整数，详见下文）</li>\n<li>名称空间（字符串）</li>\n<li>可选字段：Packet内容（对象 | 数组）</li>\n<li>可选字段：ACK的ID（整数）</li>\n</ul>\n<h3 id=\"Packet类型\"><a href=\"#Packet类型\" class=\"headerlink\" title=\"Packet类型\"></a>Packet类型</h3><h4 id=\"0-CONNECT\"><a href=\"#0-CONNECT\" class=\"headerlink\" title=\"0-CONNECT\"></a>0-CONNECT</h4><p>该事件发生时机：</p>\n<ul>\n<li>当客户端连接一个名称空间。客户端会发送一个用于鉴权的payload，例如：</li>\n</ul>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;nsp&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/admin&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;data&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;token&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;123&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>当服务端接受来自一个名称空间的连接。请求成功后，服务端会响应一个带有Socket ID的payload，例如：</li>\n</ul>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;nsp&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/admin&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;data&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;sid&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;CjdVH4TQvovi1VvgAC5Z&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-DISCONNECT\"><a href=\"#1-DISCONNECT\" class=\"headerlink\" title=\"1-DISCONNECT\"></a>1-DISCONNECT</h4><p>该事件发生在一端想要断开名称空间的连接时。它不包括任何payload和ACK ID，例如：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;nsp&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/admin&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-EVENT\"><a href=\"#2-EVENT\" class=\"headerlink\" title=\"2-EVENT\"></a>2-EVENT</h4><p>该事件发生在一端想要给另一端传输数据（不包括二进制数据）时。它包括payload，可能还会包括ACK ID，例如：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">2</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;nsp&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;data&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;hello&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">]</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>包括ACK ID的样例：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">2</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;nsp&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/admin&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;data&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;project:delete&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">123</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;id&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">456</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-ACK\"><a href=\"#3-ACK\" class=\"headerlink\" title=\"3-ACK\"></a>3-ACK</h4><p>该事件发生在一端接收到EVENT事件或带有ACK ID的BINARY_EVENT事件。它包括对之前这个事件的ACK ID，可能还会包括payload（不包括二进制数据），例如：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">3</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;nsp&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/admin&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;data&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;id&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">456</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-CONNECT-ERROR\"><a href=\"#4-CONNECT-ERROR\" class=\"headerlink\" title=\"4-CONNECT_ERROR\"></a>4-CONNECT_ERROR</h4><p>该事件发生在服务端拒绝一个名称空间的连接时。它包括一个”message”字段，可能还会包括一个”data”字段，例如：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">4</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;nsp&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/admin&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;data&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;message&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Not authorized&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;data&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;code&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;E001&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;label&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Invalid credentials&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"5-BINARY-EVENT\"><a href=\"#5-BINARY-EVENT\" class=\"headerlink\" title=\"5-BINARY_EVENT\"></a>5-BINARY_EVENT</h4><p>注意：BINARY_EVENT和BINARY_ACK都用于内建的解析器中，为了区别出包中是否包括二进制内容。它们不会用于其他自定义解析器中。</p>\n<p>该事件发生在一端想要给另一端传输数据（包括二进制数据）时。它包括payload，可能还会包括ACK ID，例如：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">5</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;nsp&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;data&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;hello&quot;</span><span class=\"punctuation\">,</span> &lt;Buffer <span class=\"number\">01</span> <span class=\"number\">02</span> <span class=\"number\">03</span>&gt;<span class=\"punctuation\">]</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>包括ACK ID的样例：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">5</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;nsp&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/admin&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;data&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;project:delete&quot;</span><span class=\"punctuation\">,</span> &lt;Buffer <span class=\"number\">01</span> <span class=\"number\">02</span> <span class=\"number\">03</span>&gt;<span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;id&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">456</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"6-BINARY-ACK\"><a href=\"#6-BINARY-ACK\" class=\"headerlink\" title=\"6-BINARY_ACK\"></a>6-BINARY_ACK</h4><p>该事件发生在一端接收到EVENT事件或带有ACK ID的BINARY_EVENT事件。它包括对之前这个事件的ACK ID，可能还会包括payload（包括二进制数据），例如：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">6</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;nsp&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/admin&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;data&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span>&lt;Buffer <span class=\"number\">03</span> <span class=\"number\">02</span> <span class=\"number\">01</span>&gt;<span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;id&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">456</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Packet编码\"><a href=\"#Packet编码\" class=\"headerlink\" title=\"Packet编码\"></a>Packet编码</h3><p>本小节描述了Socket.IO 客户端和服务端之间默认解析器的编码细节，源码实现参考：<a href=\"https://github.com/socketio/socket.io-parser\">这里</a>。</p>\n<p>另外注意一点：Socket.IO的packet本质上是Engine.IO<code>message</code>类型的packet（关于Engine.IO参考<a href=\"https://github.com/socketio/engine.io-protocol\">这里</a>），所以编码结果发送时候会带上<code>4</code>这个数字前缀。（在HTTP long-polling的请求和响应包体中，或者在Websocket的数据帧中。）</p>\n<h4 id=\"编码格式\"><a href=\"#编码格式\" class=\"headerlink\" title=\"编码格式\"></a>编码格式</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;packet type&gt;[&lt;# of binary attachments&gt;-][&lt;namespace&gt;,][&lt;acknowledgment id&gt;][JSON-stringified payload without binary]</span><br><span class=\"line\"></span><br><span class=\"line\">+ binary attachments extracted</span><br></pre></td></tr></table></figure>\n\n<p>注意：</p>\n<ul>\n<li>当名称空间不是默认的<code>/</code>时候才会出现在编码格式中。</li>\n</ul>\n<h4 id=\"编码样例\"><a href=\"#编码样例\" class=\"headerlink\" title=\"编码样例\"></a>编码样例</h4><ul>\n<li><code>/</code>名称空间<code>CONNECT</code></li>\n</ul>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;nsp&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;data&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;token&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;123&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>编码为：<code>0&#123;&quot;token&quot;:&quot;123&quot;&#125;</code></p>\n<ul>\n<li><code>/admin</code>名称空间的<code>CONNECT</code></li>\n</ul>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;nsp&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/admin&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;data&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;token&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;123&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>编码为<code>0/admin,&#123;&quot;token&quot;:&quot;123&quot;&#125;</code></p>\n<ul>\n<li><code>/admin</code>名称空间的<code>DISCONNECT</code></li>\n</ul>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;nsp&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/admin&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>编码为<code>1/admin</code></p>\n<ul>\n<li><code>EVENT</code></li>\n</ul>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">2</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;nsp&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;data&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;hello&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">]</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>编码为<code>2[&quot;hello&quot;,1]</code></p>\n<ul>\n<li>带ACK ID的<code>EVENT</code></li>\n</ul>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">2</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;nsp&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/admin&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;data&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;project:delete&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">123</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;id&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">456</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>编码为<code>2/admin,456[&quot;project:delete&quot;,123]</code></p>\n<ul>\n<li><code>ACK</code></li>\n</ul>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">3</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;nsp&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/admin&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;data&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;id&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">456</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>编码为<code>3/admin,456[]</code></p>\n<ul>\n<li><code>CONNECT_ERROR</code></li>\n</ul>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">4</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;nsp&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/admin&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;data&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;message&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Not authorized&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>编码为<code>4/admin,&#123;&quot;message&quot;:&quot;Not authorized&quot;&#125;</code></p>\n<ul>\n<li><code>BINARY_EVENT</code></li>\n</ul>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">5</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;nsp&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;data&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;hello&quot;</span><span class=\"punctuation\">,</span> &lt;Buffer <span class=\"number\">01</span> <span class=\"number\">02</span> <span class=\"number\">03</span>&gt;<span class=\"punctuation\">]</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>编码为<code>51-[&quot;hello&quot;,&#123;&quot;_placeholder&quot;:true,&quot;num&quot;:0&#125;] + &lt;Buffer 01 02 03&gt;</code></p>\n<ul>\n<li>带ACK ID的<code>BINARY_EVENT</code></li>\n</ul>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">5</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;nsp&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/admin&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;data&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;project:delete&quot;</span><span class=\"punctuation\">,</span> &lt;Buffer <span class=\"number\">01</span> <span class=\"number\">02</span> <span class=\"number\">03</span>&gt;<span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;id&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">456</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>编码为<code>51-/admin,456[&quot;project:delete&quot;,&#123;&quot;_placeholder&quot;:true,&quot;num&quot;:0&#125;] + &lt;Buffer 01 02 03&gt;</code></p>\n<ul>\n<li><code>BINARY_ACK</code></li>\n</ul>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">6</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;nsp&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/admin&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;data&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span>&lt;Buffer <span class=\"number\">03</span> <span class=\"number\">02</span> <span class=\"number\">01</span>&gt;<span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;id&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">456</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>编码为<code>61-/admin,456[&#123;&quot;_placeholder&quot;:true,&quot;num&quot;:0&#125;] + &lt;Buffer 03 02 01&gt;</code></p>\n<h3 id=\"协议交互\"><a href=\"#协议交互\" class=\"headerlink\" title=\"协议交互\"></a>协议交互</h3><h4 id=\"连接名称空间\"><a href=\"#连接名称空间\" class=\"headerlink\" title=\"连接名称空间\"></a>连接名称空间</h4><p>对于每个名称空间（包括主名称空间），客户端首先发送一个<code>CONNECT</code>，服务端回复一个带有Socket ID的<code>CONNECT</code>。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Client &gt; &#123; type: CONNECT, nsp: &quot;/admin&quot; &#125;</span><br><span class=\"line\">Server &gt; &#123; type: CONNECT, nsp: &quot;/admin&quot;, data: &#123; sid: &quot;wZX3oN0bSVIhsaknAAAI&quot; &#125; &#125; (if the connection is successful)</span><br><span class=\"line\">or</span><br><span class=\"line\">Server &gt; &#123; type: CONNECT_ERROR, nsp: &quot;/admin&quot;, data: &#123; message: &quot;Not authorized&quot; &#125; &#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"名称空间断连\"><a href=\"#名称空间断连\" class=\"headerlink\" title=\"名称空间断连\"></a>名称空间断连</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Client &gt; &#123; type: DISCONNECT, nsp: &quot;/admin&quot; &#125;</span><br></pre></td></tr></table></figure>\n\n<p>反之亦然。同时另外一端无需任何消息回复。</p>\n<h4 id=\"ACK\"><a href=\"#ACK\" class=\"headerlink\" title=\"ACK\"></a>ACK</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Client &gt; &#123; type: EVENT, nsp: &quot;/admin&quot;, data: [&quot;hello&quot;], id: 456 &#125;</span><br><span class=\"line\">Server &gt; &#123; type: ACK, nsp: &quot;/admin&quot;, data: [], id: 456 &#125;</span><br><span class=\"line\">or</span><br><span class=\"line\">Server &gt; &#123; type: BINARY_ACK, nsp: &quot;/admin&quot;, data: [ &lt;Buffer 01 02 03&gt; ], id: 456 &#125;</span><br></pre></td></tr></table></figure>\n\n<p>反之亦然。</p>\n<h3 id=\"会话示例-1\"><a href=\"#会话示例-1\" class=\"headerlink\" title=\"会话示例\"></a>会话示例</h3><p>这里有一份包括了Socket.IO和Engine.IO的会话示例。</p>\n<ul>\n<li>Request n°1 (open packet)</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET /socket.io/?EIO=4&amp;transport=polling&amp;t=N8hyd6w</span><br><span class=\"line\">&lt; HTTP/1.1 200 OK</span><br><span class=\"line\">&lt; Content-Type: text/plain; charset=UTF-8</span><br><span class=\"line\">0&#123;&quot;sid&quot;:&quot;lv_VI97HAXpY6yYWAAAC&quot;,&quot;upgrades&quot;:[&quot;websocket&quot;],&quot;pingInterval&quot;:25000,&quot;pingTimeout&quot;:5000&#125;</span><br></pre></td></tr></table></figure>\n\n<p>细节：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0           =&gt; Engine.IO &quot;open&quot; packet type</span><br><span class=\"line\">&#123;&quot;sid&quot;:...  =&gt; the Engine.IO handshake data</span><br></pre></td></tr></table></figure>\n\n<p>注意：参数<code>t</code>用于防止浏览器缓存该请求。</p>\n<ul>\n<li>Request n°2 (namespace connection request)</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST /socket.io/?EIO=4&amp;transport=polling&amp;t=N8hyd7H&amp;sid=lv_VI97HAXpY6yYWAAAC</span><br><span class=\"line\">&lt; HTTP/1.1 200 OK</span><br><span class=\"line\">&lt; Content-Type: text/plain; charset=UTF-8</span><br><span class=\"line\">40</span><br></pre></td></tr></table></figure>\n\n<p>细节：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4           =&gt; Engine.IO &quot;message&quot; packet type</span><br><span class=\"line\">0           =&gt; Socket.IO &quot;CONNECT&quot; packet type</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>Request n°3 (namespace connection approval)</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET /socket.io/?EIO=4&amp;transport=polling&amp;t=N8hyd7H&amp;sid=lv_VI97HAXpY6yYWAAAC</span><br><span class=\"line\">&lt; HTTP/1.1 200 OK</span><br><span class=\"line\">&lt; Content-Type: text/plain; charset=UTF-8</span><br><span class=\"line\">40&#123;&quot;sid&quot;:&quot;wZX3oN0bSVIhsaknAAAI&quot;&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>Request n°4</li>\n</ul>\n<p>服务端会执行<code>socket.emit(&#39;hey&#39;, &#39;Jude&#39;)</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET /socket.io/?EIO=4&amp;transport=polling&amp;t=N8hyd7H&amp;sid=lv_VI97HAXpY6yYWAAAC</span><br><span class=\"line\">&lt; HTTP/1.1 200 OK</span><br><span class=\"line\">&lt; Content-Type: text/plain; charset=UTF-8</span><br><span class=\"line\">42[&quot;hey&quot;,&quot;Jude&quot;]</span><br></pre></td></tr></table></figure>\n\n<p>细节：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4           =&gt; Engine.IO &quot;message&quot; packet type</span><br><span class=\"line\">2           =&gt; Socket.IO &quot;EVENT&quot; packet type</span><br><span class=\"line\">[...]       =&gt; content</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>Request n°5 (message out)</li>\n</ul>\n<p>客户端会执行<code>socket.emit(&#39;hello&#39;); socket.emit(&#39;world&#39;);</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST /socket.io/?EIO=4&amp;transport=polling&amp;t=N8hzxke&amp;sid=lv_VI97HAXpY6yYWAAAC</span><br><span class=\"line\">&gt; Content-Type: text/plain; charset=UTF-8</span><br><span class=\"line\">42[&quot;hello&quot;]\\x1e42[&quot;world&quot;]</span><br><span class=\"line\">&lt; HTTP/1.1 200 OK</span><br><span class=\"line\">&lt; Content-Type: text/plain; charset=UTF-8</span><br><span class=\"line\">ok</span><br></pre></td></tr></table></figure>\n\n<p>细节：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4           =&gt; Engine.IO &quot;message&quot; packet type</span><br><span class=\"line\">2           =&gt; Socket.IO &quot;EVENT&quot; packet type</span><br><span class=\"line\">[&quot;hello&quot;]   =&gt; the 1st content</span><br><span class=\"line\">\\x1e        =&gt; separator</span><br><span class=\"line\">4           =&gt; Engine.IO &quot;message&quot; packet type</span><br><span class=\"line\">2           =&gt; Socket.IO &quot;EVENT&quot; packet type</span><br><span class=\"line\">[&quot;world&quot;]   =&gt; the 2nd content</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>Request n°6 (WebSocket upgrade)</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET /socket.io/?EIO=4&amp;transport=websocket&amp;sid=lv_VI97HAXpY6yYWAAAC</span><br><span class=\"line\">&lt; HTTP/1.1 101 Switching Protocols</span><br></pre></td></tr></table></figure>\n\n<p>WebSocket数据帧：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt; 2probe                                        =&gt; Engine.IO probe request</span><br><span class=\"line\">&gt; 3probe                                        =&gt; Engine.IO probe response</span><br><span class=\"line\">&gt; 5                                             =&gt; Engine.IO &quot;upgrade&quot; packet type</span><br><span class=\"line\">&gt; 42[&quot;hello&quot;]</span><br><span class=\"line\">&gt; 42[&quot;world&quot;]</span><br><span class=\"line\">&gt; 40/admin,                                     =&gt; request access to the admin namespace (Socket.IO &quot;CONNECT&quot; packet)</span><br><span class=\"line\">&lt; 40/admin,&#123;&quot;sid&quot;:&quot;-G5j-67EZFp-q59rADQM&quot;&#125;       =&gt; grant access to the admin namespace</span><br><span class=\"line\">&gt; 42/admin,1[&quot;tellme&quot;]                          =&gt; Socket.IO &quot;EVENT&quot; packet with acknowledgement</span><br><span class=\"line\">&lt; 461-/admin,1[&#123;&quot;_placeholder&quot;:true,&quot;num&quot;:0&#125;]   =&gt; Socket.IO &quot;BINARY_ACK&quot; packet with a placeholder</span><br><span class=\"line\">&lt; &lt;binary&gt;                                      =&gt; the binary attachment (sent in the following frame)</span><br><span class=\"line\">... after a while without message</span><br><span class=\"line\">&gt; 2                                             =&gt; Engine.IO &quot;ping&quot; packet type</span><br><span class=\"line\">&lt; 3                                             =&gt; Engine.IO &quot;pong&quot; packet type</span><br><span class=\"line\">&gt; 1                                             =&gt; Engine.IO &quot;close&quot; packet type</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"网络电话示例\"><a href=\"#网络电话示例\" class=\"headerlink\" title=\"网络电话示例:\"></a>网络电话示例:</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">420[&quot;netPhone&quot;, &#123;msgId: &quot;fe9b9760-0b15-409f-a497-1909e53355d4&quot;, signal: &quot;call&quot;,…&#125;]</span><br><span class=\"line\">430[&#123;msgId: &quot;fe9b9760-0b15-409f-a497-1909e53355d4&quot;, signal: &quot;ack&quot;, content: ,…&#125;]</span><br><span class=\"line\">42[&quot;netPhone&quot;, &#123;msgId: &quot;db2c3741-2029-4cbb-a536-ecd8baf4dbf8&quot;, signal: &quot;call&quot;,…&#125;]</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h3>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"EngineIO-Protocol\"><a href=\"#EngineIO-Protocol\" class=\"headerlink\" title=\"EngineIO Protocol\"></a>EngineIO Protocol</h2><p><a href=\"https://github.com/socketio/engine.io-protocol\"><strong>Engine.IO</strong></a>是<a href=\"https://github.com/socketio/socket.io\"><strong>Socket.IO</strong></a>更底层的实现基础，要想完整理解Socket.IO必须对Engine.IO协议也有深刻认知。</p>\n<h3 id=\"Engine-IO-session详解\"><a href=\"#Engine-IO-session详解\" class=\"headerlink\" title=\"Engine.IO session详解\"></a>Engine.IO session详解</h3><ol>\n<li><p>传输层与Engine.IO URL建立一个连接。</p>\n</li>\n<li><p>服务端返回一个JSON格式的</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">OPEN</span><br></pre></td></tr></table></figure>\n\n<p>握手数据，包括如下内容：</p>\n<ul>\n<li><code>sid</code> session id（字符串）</li>\n<li><code>upgrades</code> 可能有传输升级（字符串数组）</li>\n<li><code>pingTimeout</code> 服务端需配置ping超时时间，用于客户端判断服务端是否不可达。（数字）</li>\n<li><code>pingInterval</code> 服务端需配置ping间隔时间，用于客户端判断服务端是否不可达。（数字）</li>\n</ul>\n</li>\n<li><p>客户端必须通过<code>pong</code>周期性回复服务端的<code>ping</code>。</p>\n</li>\n<li><p>客户端和服务端可以在任意时刻交换<code>message</code>。</p>\n</li>\n<li><p>Polling方式的传输允许发送<code>close</code>来关闭socket，因为预期中会一直处于”opening”和”closing”的状态。</p>\n</li>\n</ol>\n<h4 id=\"会话示例\"><a href=\"#会话示例\" class=\"headerlink\" title=\"会话示例\"></a>会话示例</h4><ul>\n<li>Request n°1 (open packet)</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET /engine.io/?EIO=4&amp;transport=polling&amp;t=N8hyd6w</span><br><span class=\"line\">&lt; HTTP/1.1 200 OK</span><br><span class=\"line\">&lt; Content-Type: text/plain; charset=UTF-8</span><br><span class=\"line\">0&#123;&quot;sid&quot;:&quot;lv_VI97HAXpY6yYWAAAC&quot;,&quot;upgrades&quot;:[&quot;websocket&quot;],&quot;pingInterval&quot;:25000,&quot;pingTimeout&quot;:5000&#125;</span><br></pre></td></tr></table></figure>\n\n<p>细节：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0           =&gt; &quot;open&quot; packet type</span><br><span class=\"line\">&#123;&quot;sid&quot;:...  =&gt; the handshake data</span><br></pre></td></tr></table></figure>\n\n<p>注意：参数<code>t</code>用于防止浏览器缓存该请求。</p>\n<ul>\n<li>Request n°2 (message in)</li>\n</ul>\n<p>服务端会执行<code>socket.send(&#39;hey&#39;)</code>：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET /engine.io/?EIO=4&amp;transport=polling&amp;t=N8hyd7H&amp;sid=lv_VI97HAXpY6yYWAAAC</span><br><span class=\"line\">&lt; HTTP/1.1 200 OK</span><br><span class=\"line\">&lt; Content-Type: text/plain; charset=UTF-8</span><br><span class=\"line\">4hey</span><br></pre></td></tr></table></figure>\n\n<p>细节：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4           =&gt; &quot;message&quot; packet type</span><br><span class=\"line\">hey         =&gt; the actual message</span><br></pre></td></tr></table></figure>\n\n<p>注意：<code>sid</code>参数包括握手数据中的sid。</p>\n<ul>\n<li>Request n°3 (message out)</li>\n</ul>\n<p>客户端将会执行<code>socket.send(&#39;hello&#39;); socket.send(&#39;world&#39;);</code>：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST /engine.io/?EIO=4&amp;transport=polling&amp;t=N8hzxke&amp;sid=lv_VI97HAXpY6yYWAAAC</span><br><span class=\"line\">&gt; Content-Type: text/plain; charset=UTF-8</span><br><span class=\"line\">4hello\\x1e4world</span><br><span class=\"line\">&lt; HTTP/1.1 200 OK</span><br><span class=\"line\">&lt; Content-Type: text/plain; charset=UTF-8</span><br><span class=\"line\">ok</span><br></pre></td></tr></table></figure>\n\n<p>细节：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4           =&gt; &quot;message&quot; packet type</span><br><span class=\"line\">hello       =&gt; the 1st message</span><br><span class=\"line\">\\x1e        =&gt; separator</span><br><span class=\"line\">4           =&gt; &quot;message&quot; message type</span><br><span class=\"line\">world       =&gt; the 2nd message</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>Request n°4 (WebSocket upgrade)</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET /engine.io/?EIO=4&amp;transport=websocket&amp;sid=lv_VI97HAXpY6yYWAAAC</span><br><span class=\"line\">&lt; HTTP/1.1 101 Switching Protocols</span><br></pre></td></tr></table></figure>\n\n<p>Websocket数据帧：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt; 2probe    =&gt; probe request</span><br><span class=\"line\">&gt; 3probe    =&gt; probe response</span><br><span class=\"line\">&lt; 5         =&gt; &quot;upgrade&quot; packet type</span><br><span class=\"line\">&gt; 4hello    =&gt; message (not concatenated)</span><br><span class=\"line\">&gt; 4world</span><br><span class=\"line\">&gt; 2         =&gt; &quot;ping&quot; packet type</span><br><span class=\"line\">&lt; 3         =&gt; &quot;pong&quot; packet type</span><br><span class=\"line\">&gt; 1         =&gt; &quot;close&quot; packet type</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Websocket-会话示例\"><a href=\"#Websocket-会话示例\" class=\"headerlink\" title=\"Websocket 会话示例\"></a>Websocket 会话示例</h4><p>这种情况下，客户端只启用Websocket（没有HTTP polling）。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET /engine.io/?EIO=4&amp;transport=websocket</span><br><span class=\"line\">&lt; HTTP/1.1 101 Switching Protocols</span><br></pre></td></tr></table></figure>\n\n<p>Websocket数据帧：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt; 0&#123;&quot;sid&quot;:&quot;lv_VI97HAXpY6yYWAAAC&quot;,&quot;pingInterval&quot;:25000,&quot;pingTimeout&quot;:5000&#125; =&gt; handshake</span><br><span class=\"line\">&lt; 4hey</span><br><span class=\"line\">&gt; 4hello    =&gt; message (not concatenated)</span><br><span class=\"line\">&gt; 4world</span><br><span class=\"line\">&lt; 2         =&gt; &quot;ping&quot; packet type</span><br><span class=\"line\">&gt; 3         =&gt; &quot;pong&quot; packet type</span><br><span class=\"line\">&gt; 1         =&gt; &quot;close&quot; packet type</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"路由\"><a href=\"#路由\" class=\"headerlink\" title=\"路由\"></a>路由</h3><p>Engine.IO路由组成如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/engine.io/[?&lt;query string&gt;]</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>engine.io</code>的路径名仅可以被基于engine.io上层协议的框架修改</li>\n<li>查询字符串是可选的，有6个保留字：<ul>\n<li><code>transport</code>：表明传输方式。默认支持<code>polling</code>，<code>websocket</code>。</li>\n<li><code>j</code>：如果传输方式是<code>polling</code>且返回值必须是JSONP类型，则<code>j</code>必须设置为JSONP返回值的index。</li>\n<li><code>sid</code>：如果客户端要加session id，必须放在查询字符串上。</li>\n<li><code>EIO</code>：Engine.IO的版本号。</li>\n<li><code>t</code>：时间戳的hash值，用来防止浏览器缓存。</li>\n</ul>\n</li>\n</ul>\n<p>FAQ：<code>/engine.io</code>这部分路由是否可修改？ 可以，服务端在不同的子路径下拦截请求。</p>\n<p>FAQ：是什么因素决定一个选型出现在编码了的查询字符串上？换句话说，为什么<code>transport</code>字段不在路由上面呢？ 约定是子路径仅用于让Engine.IO的服务端消除是否要处理这个请求的歧义。这当然只有Engine.IO的前缀（<code>/engine.io</code>）。</p>\n<h3 id=\"编码方式\"><a href=\"#编码方式\" class=\"headerlink\" title=\"编码方式\"></a>编码方式</h3><p>有两种不同的编码方式：</p>\n<ul>\n<li>packet</li>\n<li>Payload</li>\n</ul>\n<h4 id=\"Packet\"><a href=\"#Packet\" class=\"headerlink\" title=\"Packet\"></a>Packet</h4><p>一个编码的packet可以是UTF-8的字符串，也可以是二进制数据。字符串形式的编码packet如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;packet type id&gt;[&lt;data&gt;]</span><br></pre></td></tr></table></figure>\n\n<p>例如：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4hello</span><br></pre></td></tr></table></figure>\n\n<p>对于二进制数据来说，无需包含packet类型，因为只有<code>message</code>可以包括二进制数据。</p>\n<h5 id=\"0-open\"><a href=\"#0-open\" class=\"headerlink\" title=\"0 open\"></a>0 open</h5><p>当新的传输通道打开会从服务端发送。</p>\n<h5 id=\"1-close\"><a href=\"#1-close\" class=\"headerlink\" title=\"1 close\"></a>1 close</h5><p>请求关闭此传输通道但不会立刻关闭连接。</p>\n<h5 id=\"2-ping\"><a href=\"#2-ping\" class=\"headerlink\" title=\"2 ping\"></a>2 ping</h5><p>由服务端发送，客户端回复pong包。</p>\n<p>样例：</p>\n<ul>\n<li>server sends: <code>2</code></li>\n<li>client sends: <code>3</code></li>\n</ul>\n<h5 id=\"3-pong\"><a href=\"#3-pong\" class=\"headerlink\" title=\"3 pong\"></a>3 pong</h5><p>客户端发送用于回复ping包。</p>\n<h5 id=\"4-message\"><a href=\"#4-message\" class=\"headerlink\" title=\"4 message\"></a>4 message</h5><p>消息体，客户端和服务端可以通过它们的回调接口传输数据</p>\n<p>样例一：</p>\n<ul>\n<li>服务端发送：<code>4HelloWorld</code></li>\n<li>客户端接收并触发回调：<code>socket.on(&#39;message&#39;, function (data) &#123; console.log(data); &#125;);</code></li>\n</ul>\n<p>样例二：</p>\n<ul>\n<li>客户端发送：<code>4HelloWorld</code></li>\n<li>服务端接收并触发回调：<code>socket.on(&#39;message&#39;, function (data) &#123; console.log(data); &#125;);</code></li>\n</ul>\n<h5 id=\"5-upgrade\"><a href=\"#5-upgrade\" class=\"headerlink\" title=\"5 upgrade\"></a>5 upgrade</h5><p>在engine.io切换传输方式之前，它需要测试服务端和客户端之间是否允许这种传输方式。如果测试成功，客户端将会发送一个upgrade包给服务端并要求它刷新旧传输方式的缓存并切换到新的传输方式。</p>\n<h5 id=\"6-noop\"><a href=\"#6-noop\" class=\"headerlink\" title=\"6 noop\"></a>6 noop</h5><p>noop包主要用于当一个websocket连接将要建立时候强制一轮poll循环。</p>\n<p>样例：</p>\n<ol>\n<li>客户端通过新的传输方式连接</li>\n<li>客户端发送：<code>2probe</code></li>\n<li>服务端接收并发送：<code>3probe</code></li>\n<li>客户端接收并发送：<code>5</code></li>\n<li>服务端刷新环境，关闭旧传输方式并切换至新的传输方式</li>\n</ol>\n<h4 id=\"Payload\"><a href=\"#Payload\" class=\"headerlink\" title=\"Payload\"></a>Payload</h4><p>Payload是一系列packet捆绑在一起。当仅支持字符串且XHR2不支持的情况下，payload编码格式如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;packet1&gt;\\x1e&lt;packet2&gt;\\x1e&lt;packet3&gt;</span><br></pre></td></tr></table></figure>\n\n<p>packet通过(‘\\x1e’)分割，更多信息请参考： <a href=\"https://en.wikipedia.org/wiki/C0_and_C1_control_codes#Field_separators\">https://en.wikipedia.org/wiki/C0_and_C1_control_codes#Field_separators</a></p>\n<p>当payload支持二进制数据时，它会通过发送base64编码的字符串。为了便于解码，二进制格式的packet前会插入字符<code>b</code>。任意数量的字符串和base64编码的字符串可以被聚合发送。下面是base64编码消息的样例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;packet1&gt;\\x1eb&lt;packet2 data in b64&gt;[...]</span><br></pre></td></tr></table></figure>\n\n<p>payload用于不支持帧方式的传输，比如polling协议。</p>\n<ul>\n<li>无二进制数据样例：</li>\n</ul>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">[</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;message&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;data&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;hello&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;message&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;data&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;€&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">]</span></span><br></pre></td></tr></table></figure>\n\n<p>被编码为：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4hello\\x1e4€</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>二进制数据样例：</li>\n</ul>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">[</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;message&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;data&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;€&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;message&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;data&quot;</span><span class=\"punctuation\">:</span> buffer &lt;<span class=\"number\">01</span> <span class=\"number\">02</span> <span class=\"number\">03</span> <span class=\"number\">04</span>&gt;</span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">]</span></span><br></pre></td></tr></table></figure>\n\n<p>被编码为：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4€\\x1ebAQIDBA==</span><br><span class=\"line\"></span><br><span class=\"line\">with</span><br><span class=\"line\"></span><br><span class=\"line\">4           =&gt; &quot;message&quot; packet type</span><br><span class=\"line\">€</span><br><span class=\"line\">\\x1e        =&gt; record separator</span><br><span class=\"line\">b           =&gt; indicates a base64 packet</span><br><span class=\"line\">AQIDBA==    =&gt; buffer content encoded in base64</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"传输方式\"><a href=\"#传输方式\" class=\"headerlink\" title=\"传输方式\"></a>传输方式</h3><p>Engine.IO的服务端必须支持三种传输方式：</p>\n<ul>\n<li>websocket</li>\n<li>server-sent events (SSE)</li>\n<li>Polling<ul>\n<li>Jsonp</li>\n<li>Xhr</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Polling\"><a href=\"#Polling\" class=\"headerlink\" title=\"Polling\"></a>Polling</h4><p>polling方式包括客户端循环GET请求访问服务端获取数据，以及客户端POST请求传输数据给服务端。</p>\n<h5 id=\"XHR\"><a href=\"#XHR\" class=\"headerlink\" title=\"XHR\"></a>XHR</h5><p>服务端必须支持跨域。</p>\n<h5 id=\"JSONP\"><a href=\"#JSONP\" class=\"headerlink\" title=\"JSONP\"></a>JSONP</h5><p>服务端的实现必须回复合法的JavaScript。URL上面必须包含查询字符串参数<code>j</code>，并必须被应用在返回体中。<code>j</code>是一个整数：</p>\n<p>JSONP格式：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">`___eio[` &lt;j&gt; `](&quot;` &lt;encoded payload&gt; `&quot;);`</span><br></pre></td></tr></table></figure>\n\n<p>为了确保payload被正确处理，它的转义也必须符合合法的JavaScript。使用一个JSON编码器是一个发送编码payload的良好转义方法。</p>\n<p>如下是服务端返回的JSONP样例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">___eio[4](&quot;packet data&quot;);</span><br></pre></td></tr></table></figure>\n\n<p><strong>上传数据</strong></p>\n<p>客户端通过一个隐藏的<code>iframe</code>上传数据。到服务端的数据在URI中的编码格式如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">d=&lt;escaped packet payload&gt;</span><br></pre></td></tr></table></figure>\n\n<p>此外根据标准转义规范，为了防止浏览器对<code>\\n</code>处理的不一致，<code>\\n</code>会在POST中会转义为<code>\\\\n</code>。</p>\n<h4 id=\"Server-sent-events\"><a href=\"#Server-sent-events\" class=\"headerlink\" title=\"Server-sent events\"></a>Server-sent events</h4><p>客户端使用一个EventSource的对象用于接收数据，使用一个XMLHttpRequest的对象用于发送数据。</p>\n<h4 id=\"Websocket\"><a href=\"#Websocket\" class=\"headerlink\" title=\"Websocket\"></a>Websocket</h4><p>payload编码不适用websocket，因为协议本身已经具有一个轻量级的数据帧机制。</p>\n<p>发送payload类型的消息，只需要单独编码并连续调用<code>send()</code>发送。</p>\n<h3 id=\"传输升级\"><a href=\"#传输升级\" class=\"headerlink\" title=\"传输升级\"></a>传输升级</h3><p>一个连接总是要从polling方式开始（XHR或者JSONP）。websocket要通过发送一个探测开始。加入服务端对探测有返回结果，则会发送一个upgrade包。</p>\n<p>为了确保没有消息丢失，upgrade包在当前存在的传输通道缓存中仅会被发送一次，且此时传输被认为是处于暂停状态。</p>\n<p>当服务端接收到upgrade包，它必须假设这是新的传输通道，并且发送当前以及存在的通道中所有的缓存内容。</p>\n<p>客户端发送的探测是由<code>ping</code>包类型和<code>probe</code>字符串拼接成的数据。服务端返回的探测是由<code>pong</code>包类型和<code>probe</code>字符串拼接成的数据。</p>\n<p>进一步说，升级只会考虑<code>polling -&gt; x</code>。</p>\n<h3 id=\"超时时间\"><a href=\"#超时时间\" class=\"headerlink\" title=\"超时时间\"></a>超时时间</h3><p>客户端必须使用<code>pingTimeout</code>和<code>pingInterval</code>作为握手的部分（带着<code>open</code>包）来判断服务端是否断开。</p>\n<p>服务端发送一个<code>ping</code>包。如果在<code>pingTimeout</code>之内没有接收到包类型，则服务端会认为socket已经断开连接。如果<code>pong</code>包返回并接收成功的话，服务端会等待<code>pingInterval</code>之后再发送下一个<code>ping</code>包。</p>\n<p>由于两个值在服务端和客户端是共享的，客户端也可以通过它们来判断服务端是否断开连接当它没有在<code>pingTimeout+pingInterval</code>之内收到任何数据。</p>\n<h2 id=\"SocketIO-Protocol\"><a href=\"#SocketIO-Protocol\" class=\"headerlink\" title=\"SocketIO Protocol\"></a>SocketIO Protocol</h2><p>大部分内容引自出处: <a href=\"https://www.kevinwu0904.top/blogs/network-socketio/\">blog</a>。开源社区介绍 <a href=\"https://github.com/socketio/socket.io-protocol\">github socket.io</a></p>\n<h3 id=\"Packet格式\"><a href=\"#Packet格式\" class=\"headerlink\" title=\"Packet格式\"></a>Packet格式</h3><p>一个Packet包括以下字段：</p>\n<ul>\n<li>类型（整数，详见下文）</li>\n<li>名称空间（字符串）</li>\n<li>可选字段：Packet内容（对象 | 数组）</li>\n<li>可选字段：ACK的ID（整数）</li>\n</ul>\n<h3 id=\"Packet类型\"><a href=\"#Packet类型\" class=\"headerlink\" title=\"Packet类型\"></a>Packet类型</h3><h4 id=\"0-CONNECT\"><a href=\"#0-CONNECT\" class=\"headerlink\" title=\"0-CONNECT\"></a>0-CONNECT</h4><p>该事件发生时机：</p>\n<ul>\n<li>当客户端连接一个名称空间。客户端会发送一个用于鉴权的payload，例如：</li>\n</ul>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;nsp&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/admin&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;data&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;token&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;123&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>当服务端接受来自一个名称空间的连接。请求成功后，服务端会响应一个带有Socket ID的payload，例如：</li>\n</ul>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;nsp&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/admin&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;data&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;sid&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;CjdVH4TQvovi1VvgAC5Z&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-DISCONNECT\"><a href=\"#1-DISCONNECT\" class=\"headerlink\" title=\"1-DISCONNECT\"></a>1-DISCONNECT</h4><p>该事件发生在一端想要断开名称空间的连接时。它不包括任何payload和ACK ID，例如：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;nsp&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/admin&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-EVENT\"><a href=\"#2-EVENT\" class=\"headerlink\" title=\"2-EVENT\"></a>2-EVENT</h4><p>该事件发生在一端想要给另一端传输数据（不包括二进制数据）时。它包括payload，可能还会包括ACK ID，例如：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">2</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;nsp&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;data&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;hello&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">]</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>包括ACK ID的样例：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">2</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;nsp&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/admin&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;data&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;project:delete&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">123</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;id&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">456</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-ACK\"><a href=\"#3-ACK\" class=\"headerlink\" title=\"3-ACK\"></a>3-ACK</h4><p>该事件发生在一端接收到EVENT事件或带有ACK ID的BINARY_EVENT事件。它包括对之前这个事件的ACK ID，可能还会包括payload（不包括二进制数据），例如：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">3</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;nsp&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/admin&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;data&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;id&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">456</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-CONNECT-ERROR\"><a href=\"#4-CONNECT-ERROR\" class=\"headerlink\" title=\"4-CONNECT_ERROR\"></a>4-CONNECT_ERROR</h4><p>该事件发生在服务端拒绝一个名称空间的连接时。它包括一个”message”字段，可能还会包括一个”data”字段，例如：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">4</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;nsp&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/admin&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;data&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;message&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Not authorized&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;data&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;code&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;E001&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;label&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Invalid credentials&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"5-BINARY-EVENT\"><a href=\"#5-BINARY-EVENT\" class=\"headerlink\" title=\"5-BINARY_EVENT\"></a>5-BINARY_EVENT</h4><p>注意：BINARY_EVENT和BINARY_ACK都用于内建的解析器中，为了区别出包中是否包括二进制内容。它们不会用于其他自定义解析器中。</p>\n<p>该事件发生在一端想要给另一端传输数据（包括二进制数据）时。它包括payload，可能还会包括ACK ID，例如：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">5</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;nsp&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;data&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;hello&quot;</span><span class=\"punctuation\">,</span> &lt;Buffer <span class=\"number\">01</span> <span class=\"number\">02</span> <span class=\"number\">03</span>&gt;<span class=\"punctuation\">]</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>包括ACK ID的样例：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">5</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;nsp&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/admin&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;data&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;project:delete&quot;</span><span class=\"punctuation\">,</span> &lt;Buffer <span class=\"number\">01</span> <span class=\"number\">02</span> <span class=\"number\">03</span>&gt;<span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;id&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">456</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"6-BINARY-ACK\"><a href=\"#6-BINARY-ACK\" class=\"headerlink\" title=\"6-BINARY_ACK\"></a>6-BINARY_ACK</h4><p>该事件发生在一端接收到EVENT事件或带有ACK ID的BINARY_EVENT事件。它包括对之前这个事件的ACK ID，可能还会包括payload（包括二进制数据），例如：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">6</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;nsp&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/admin&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;data&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span>&lt;Buffer <span class=\"number\">03</span> <span class=\"number\">02</span> <span class=\"number\">01</span>&gt;<span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;id&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">456</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Packet编码\"><a href=\"#Packet编码\" class=\"headerlink\" title=\"Packet编码\"></a>Packet编码</h3><p>本小节描述了Socket.IO 客户端和服务端之间默认解析器的编码细节，源码实现参考：<a href=\"https://github.com/socketio/socket.io-parser\">这里</a>。</p>\n<p>另外注意一点：Socket.IO的packet本质上是Engine.IO<code>message</code>类型的packet（关于Engine.IO参考<a href=\"https://github.com/socketio/engine.io-protocol\">这里</a>），所以编码结果发送时候会带上<code>4</code>这个数字前缀。（在HTTP long-polling的请求和响应包体中，或者在Websocket的数据帧中。）</p>\n<h4 id=\"编码格式\"><a href=\"#编码格式\" class=\"headerlink\" title=\"编码格式\"></a>编码格式</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;packet type&gt;[&lt;# of binary attachments&gt;-][&lt;namespace&gt;,][&lt;acknowledgment id&gt;][JSON-stringified payload without binary]</span><br><span class=\"line\"></span><br><span class=\"line\">+ binary attachments extracted</span><br></pre></td></tr></table></figure>\n\n<p>注意：</p>\n<ul>\n<li>当名称空间不是默认的<code>/</code>时候才会出现在编码格式中。</li>\n</ul>\n<h4 id=\"编码样例\"><a href=\"#编码样例\" class=\"headerlink\" title=\"编码样例\"></a>编码样例</h4><ul>\n<li><code>/</code>名称空间<code>CONNECT</code></li>\n</ul>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;nsp&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;data&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;token&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;123&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>编码为：<code>0&#123;&quot;token&quot;:&quot;123&quot;&#125;</code></p>\n<ul>\n<li><code>/admin</code>名称空间的<code>CONNECT</code></li>\n</ul>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;nsp&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/admin&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;data&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;token&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;123&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>编码为<code>0/admin,&#123;&quot;token&quot;:&quot;123&quot;&#125;</code></p>\n<ul>\n<li><code>/admin</code>名称空间的<code>DISCONNECT</code></li>\n</ul>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;nsp&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/admin&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>编码为<code>1/admin</code></p>\n<ul>\n<li><code>EVENT</code></li>\n</ul>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">2</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;nsp&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;data&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;hello&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">]</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>编码为<code>2[&quot;hello&quot;,1]</code></p>\n<ul>\n<li>带ACK ID的<code>EVENT</code></li>\n</ul>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">2</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;nsp&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/admin&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;data&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;project:delete&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">123</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;id&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">456</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>编码为<code>2/admin,456[&quot;project:delete&quot;,123]</code></p>\n<ul>\n<li><code>ACK</code></li>\n</ul>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">3</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;nsp&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/admin&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;data&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;id&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">456</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>编码为<code>3/admin,456[]</code></p>\n<ul>\n<li><code>CONNECT_ERROR</code></li>\n</ul>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">4</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;nsp&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/admin&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;data&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;message&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Not authorized&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>编码为<code>4/admin,&#123;&quot;message&quot;:&quot;Not authorized&quot;&#125;</code></p>\n<ul>\n<li><code>BINARY_EVENT</code></li>\n</ul>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">5</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;nsp&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;data&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;hello&quot;</span><span class=\"punctuation\">,</span> &lt;Buffer <span class=\"number\">01</span> <span class=\"number\">02</span> <span class=\"number\">03</span>&gt;<span class=\"punctuation\">]</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>编码为<code>51-[&quot;hello&quot;,&#123;&quot;_placeholder&quot;:true,&quot;num&quot;:0&#125;] + &lt;Buffer 01 02 03&gt;</code></p>\n<ul>\n<li>带ACK ID的<code>BINARY_EVENT</code></li>\n</ul>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">5</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;nsp&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/admin&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;data&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;project:delete&quot;</span><span class=\"punctuation\">,</span> &lt;Buffer <span class=\"number\">01</span> <span class=\"number\">02</span> <span class=\"number\">03</span>&gt;<span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;id&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">456</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>编码为<code>51-/admin,456[&quot;project:delete&quot;,&#123;&quot;_placeholder&quot;:true,&quot;num&quot;:0&#125;] + &lt;Buffer 01 02 03&gt;</code></p>\n<ul>\n<li><code>BINARY_ACK</code></li>\n</ul>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">6</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;nsp&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/admin&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;data&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span>&lt;Buffer <span class=\"number\">03</span> <span class=\"number\">02</span> <span class=\"number\">01</span>&gt;<span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;id&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">456</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>编码为<code>61-/admin,456[&#123;&quot;_placeholder&quot;:true,&quot;num&quot;:0&#125;] + &lt;Buffer 03 02 01&gt;</code></p>\n<h3 id=\"协议交互\"><a href=\"#协议交互\" class=\"headerlink\" title=\"协议交互\"></a>协议交互</h3><h4 id=\"连接名称空间\"><a href=\"#连接名称空间\" class=\"headerlink\" title=\"连接名称空间\"></a>连接名称空间</h4><p>对于每个名称空间（包括主名称空间），客户端首先发送一个<code>CONNECT</code>，服务端回复一个带有Socket ID的<code>CONNECT</code>。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Client &gt; &#123; type: CONNECT, nsp: &quot;/admin&quot; &#125;</span><br><span class=\"line\">Server &gt; &#123; type: CONNECT, nsp: &quot;/admin&quot;, data: &#123; sid: &quot;wZX3oN0bSVIhsaknAAAI&quot; &#125; &#125; (if the connection is successful)</span><br><span class=\"line\">or</span><br><span class=\"line\">Server &gt; &#123; type: CONNECT_ERROR, nsp: &quot;/admin&quot;, data: &#123; message: &quot;Not authorized&quot; &#125; &#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"名称空间断连\"><a href=\"#名称空间断连\" class=\"headerlink\" title=\"名称空间断连\"></a>名称空间断连</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Client &gt; &#123; type: DISCONNECT, nsp: &quot;/admin&quot; &#125;</span><br></pre></td></tr></table></figure>\n\n<p>反之亦然。同时另外一端无需任何消息回复。</p>\n<h4 id=\"ACK\"><a href=\"#ACK\" class=\"headerlink\" title=\"ACK\"></a>ACK</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Client &gt; &#123; type: EVENT, nsp: &quot;/admin&quot;, data: [&quot;hello&quot;], id: 456 &#125;</span><br><span class=\"line\">Server &gt; &#123; type: ACK, nsp: &quot;/admin&quot;, data: [], id: 456 &#125;</span><br><span class=\"line\">or</span><br><span class=\"line\">Server &gt; &#123; type: BINARY_ACK, nsp: &quot;/admin&quot;, data: [ &lt;Buffer 01 02 03&gt; ], id: 456 &#125;</span><br></pre></td></tr></table></figure>\n\n<p>反之亦然。</p>\n<h3 id=\"会话示例-1\"><a href=\"#会话示例-1\" class=\"headerlink\" title=\"会话示例\"></a>会话示例</h3><p>这里有一份包括了Socket.IO和Engine.IO的会话示例。</p>\n<ul>\n<li>Request n°1 (open packet)</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET /socket.io/?EIO=4&amp;transport=polling&amp;t=N8hyd6w</span><br><span class=\"line\">&lt; HTTP/1.1 200 OK</span><br><span class=\"line\">&lt; Content-Type: text/plain; charset=UTF-8</span><br><span class=\"line\">0&#123;&quot;sid&quot;:&quot;lv_VI97HAXpY6yYWAAAC&quot;,&quot;upgrades&quot;:[&quot;websocket&quot;],&quot;pingInterval&quot;:25000,&quot;pingTimeout&quot;:5000&#125;</span><br></pre></td></tr></table></figure>\n\n<p>细节：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0           =&gt; Engine.IO &quot;open&quot; packet type</span><br><span class=\"line\">&#123;&quot;sid&quot;:...  =&gt; the Engine.IO handshake data</span><br></pre></td></tr></table></figure>\n\n<p>注意：参数<code>t</code>用于防止浏览器缓存该请求。</p>\n<ul>\n<li>Request n°2 (namespace connection request)</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST /socket.io/?EIO=4&amp;transport=polling&amp;t=N8hyd7H&amp;sid=lv_VI97HAXpY6yYWAAAC</span><br><span class=\"line\">&lt; HTTP/1.1 200 OK</span><br><span class=\"line\">&lt; Content-Type: text/plain; charset=UTF-8</span><br><span class=\"line\">40</span><br></pre></td></tr></table></figure>\n\n<p>细节：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4           =&gt; Engine.IO &quot;message&quot; packet type</span><br><span class=\"line\">0           =&gt; Socket.IO &quot;CONNECT&quot; packet type</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>Request n°3 (namespace connection approval)</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET /socket.io/?EIO=4&amp;transport=polling&amp;t=N8hyd7H&amp;sid=lv_VI97HAXpY6yYWAAAC</span><br><span class=\"line\">&lt; HTTP/1.1 200 OK</span><br><span class=\"line\">&lt; Content-Type: text/plain; charset=UTF-8</span><br><span class=\"line\">40&#123;&quot;sid&quot;:&quot;wZX3oN0bSVIhsaknAAAI&quot;&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>Request n°4</li>\n</ul>\n<p>服务端会执行<code>socket.emit(&#39;hey&#39;, &#39;Jude&#39;)</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET /socket.io/?EIO=4&amp;transport=polling&amp;t=N8hyd7H&amp;sid=lv_VI97HAXpY6yYWAAAC</span><br><span class=\"line\">&lt; HTTP/1.1 200 OK</span><br><span class=\"line\">&lt; Content-Type: text/plain; charset=UTF-8</span><br><span class=\"line\">42[&quot;hey&quot;,&quot;Jude&quot;]</span><br></pre></td></tr></table></figure>\n\n<p>细节：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4           =&gt; Engine.IO &quot;message&quot; packet type</span><br><span class=\"line\">2           =&gt; Socket.IO &quot;EVENT&quot; packet type</span><br><span class=\"line\">[...]       =&gt; content</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>Request n°5 (message out)</li>\n</ul>\n<p>客户端会执行<code>socket.emit(&#39;hello&#39;); socket.emit(&#39;world&#39;);</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST /socket.io/?EIO=4&amp;transport=polling&amp;t=N8hzxke&amp;sid=lv_VI97HAXpY6yYWAAAC</span><br><span class=\"line\">&gt; Content-Type: text/plain; charset=UTF-8</span><br><span class=\"line\">42[&quot;hello&quot;]\\x1e42[&quot;world&quot;]</span><br><span class=\"line\">&lt; HTTP/1.1 200 OK</span><br><span class=\"line\">&lt; Content-Type: text/plain; charset=UTF-8</span><br><span class=\"line\">ok</span><br></pre></td></tr></table></figure>\n\n<p>细节：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4           =&gt; Engine.IO &quot;message&quot; packet type</span><br><span class=\"line\">2           =&gt; Socket.IO &quot;EVENT&quot; packet type</span><br><span class=\"line\">[&quot;hello&quot;]   =&gt; the 1st content</span><br><span class=\"line\">\\x1e        =&gt; separator</span><br><span class=\"line\">4           =&gt; Engine.IO &quot;message&quot; packet type</span><br><span class=\"line\">2           =&gt; Socket.IO &quot;EVENT&quot; packet type</span><br><span class=\"line\">[&quot;world&quot;]   =&gt; the 2nd content</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>Request n°6 (WebSocket upgrade)</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET /socket.io/?EIO=4&amp;transport=websocket&amp;sid=lv_VI97HAXpY6yYWAAAC</span><br><span class=\"line\">&lt; HTTP/1.1 101 Switching Protocols</span><br></pre></td></tr></table></figure>\n\n<p>WebSocket数据帧：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt; 2probe                                        =&gt; Engine.IO probe request</span><br><span class=\"line\">&gt; 3probe                                        =&gt; Engine.IO probe response</span><br><span class=\"line\">&gt; 5                                             =&gt; Engine.IO &quot;upgrade&quot; packet type</span><br><span class=\"line\">&gt; 42[&quot;hello&quot;]</span><br><span class=\"line\">&gt; 42[&quot;world&quot;]</span><br><span class=\"line\">&gt; 40/admin,                                     =&gt; request access to the admin namespace (Socket.IO &quot;CONNECT&quot; packet)</span><br><span class=\"line\">&lt; 40/admin,&#123;&quot;sid&quot;:&quot;-G5j-67EZFp-q59rADQM&quot;&#125;       =&gt; grant access to the admin namespace</span><br><span class=\"line\">&gt; 42/admin,1[&quot;tellme&quot;]                          =&gt; Socket.IO &quot;EVENT&quot; packet with acknowledgement</span><br><span class=\"line\">&lt; 461-/admin,1[&#123;&quot;_placeholder&quot;:true,&quot;num&quot;:0&#125;]   =&gt; Socket.IO &quot;BINARY_ACK&quot; packet with a placeholder</span><br><span class=\"line\">&lt; &lt;binary&gt;                                      =&gt; the binary attachment (sent in the following frame)</span><br><span class=\"line\">... after a while without message</span><br><span class=\"line\">&gt; 2                                             =&gt; Engine.IO &quot;ping&quot; packet type</span><br><span class=\"line\">&lt; 3                                             =&gt; Engine.IO &quot;pong&quot; packet type</span><br><span class=\"line\">&gt; 1                                             =&gt; Engine.IO &quot;close&quot; packet type</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"网络电话示例\"><a href=\"#网络电话示例\" class=\"headerlink\" title=\"网络电话示例:\"></a>网络电话示例:</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">420[&quot;netPhone&quot;, &#123;msgId: &quot;fe9b9760-0b15-409f-a497-1909e53355d4&quot;, signal: &quot;call&quot;,…&#125;]</span><br><span class=\"line\">430[&#123;msgId: &quot;fe9b9760-0b15-409f-a497-1909e53355d4&quot;, signal: &quot;ack&quot;, content: ,…&#125;]</span><br><span class=\"line\">42[&quot;netPhone&quot;, &#123;msgId: &quot;db2c3741-2029-4cbb-a536-ecd8baf4dbf8&quot;, signal: &quot;call&quot;,…&#125;]</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h3>"},{"title":"detect-ip","date":"2023-04-19T12:19:46.000Z","_content":"\n### 浅谈IP归属地检测\n\nIP归属地检测故名思义, 是通过IP协议中的src地址来确定其所属的地理位置.  通过识别用户IP归属, 可以实现限制地区用户访问(OpenAI)、推荐地区用户喜好、展示评论用户所在城市等功能诉求. 本篇文章, 我们讲一下IP归属地检测的原理及方法, 以及翻墙绕过检测的方法.\n\n![b站和微博展示IP属地](./ip-show.png)\n\n### IP协议基础\n\n首先, 我们重温一下IP协议的基础知识. IP协议位于传统OSI7层模型 (**Open Systems Interconnection model** ) 中的网络层,  负责设备在复杂网络中通信时的寻址addressing、路由routing 等职责. IP协议本身是无状态、无连接、无顺序、不可靠的,  这些特性如需要均要由上层传输层如tcp协议的ack和重传机制保证. IP协议本身不care这些问题, 遇到网络拥堵、路由设备缓冲区满等情况, 均会直接将IP包丢弃.\n\n目前, IP网络层上层的主流传输层协议仍是 tcp 和 udp协议, 一些新的号称新传输层协议如quic等也是在udp协议上层进行了拓展.  换句话说, 基本上所有的服务端应用本质上均是对 tcp、udp端口的监听,  解析并响应来自客户的请求报文. \n\n不管是tcp还是udp, 由于底层都是IP协议. 在发送报文时, 客户端都会在IP层报文携带src(本机ip 192.168.1.100)和dest ip地址(内网or公网).  dest ip 会经由路由器层层寻址交由下次网关路由, 而src ip 也会在途径WAN网关时, NAT至公网IP地址. 公网IP的IP包不会再被修改, 并会经过路由表逐跳层层寻址最终抵达目标设备, 可能是一个F5、一个用户PC等, 这个过程不再详细分析了.  最终, 其实服务端可以很轻松的拿到客户请求中的公网src ip, 这个src ip最多是个代理, 但是是不会造假的, 因为造假的话服务端的响应回传client就接收不到了.\n\n### 翻墙代理\n\n翻墙代理目前基本也是两大类, 一类是VPN, 一类是VPS.  前者是用虚拟网卡+隧道, 后者是代理服务+数据加密.  前者功能更丰富, 对server端的要求更高, 出于成本角度, 只为了翻墙基本都是采用VPS+部署代理服务.\n\nVPS就是一台境外ip、且未被墙的虚机, 可供国内ip访问连接, 并且部署了代理服务.  代理服务也有很多种, 提供的代理能力也分369等, 有只代理http的, 只代理tcp的, 也有tcp + udp均可代理的.  如果是自己搭的vps, 就可以安装个支持tcp+udp的代理, 一般直接买的SaaS多节点代理服务, 通常只支持http or tcp请求代理.\n\n### 浏览器UDP通信 \n\n早期浏览器网页内容均由基于tcp的http1.1/2协议或 websocket协议提供, 这种场景下, 只要用户开个具备http or tcp代理能力的翻墙软件, 再在浏览器装个http代理插件, 即可隐藏自己国内ip. 但随着浏览器对http3 QUIC和webrtc api的支持, 浏览器逐步开始向udp通信变迁. 浏览器udp通信时, 如果你只将tcp包交由代理转发, 对端sever拿到的client src ip 自然还是你的udp本地出局ip.\n\n尽管如此, 对于使用了http3 QUIC和 WebRTC的网站来说, 如果想隐藏自己的大陆ip, 也只要把代理服务升级下, 让UDP包也经由代理转发路由即可. 因为不管是tcp还是udp, 只要让对应的网络层ip数据包经由代理的境外IP发出即可解决问题.\n\n### WebRTC STUN协议\n\nWebRTC是基于UDP的浏览器即时通讯模块, 通过浏览器的WebRTC api, 可以实现P2P端到端的实时数据通信, 目前已经广泛用于视频会议、文件数据传输、IM等场景.  WebRTC可以实现网络互通的任意两台设备的P2P通信, 比如, 属于同一内网的两台内网pc、或均支持公网udp通信的两台互联网PC. 做P2P通信前, 首先要知道对方的 IP地址 & UDP通信端口( SDP session description protocol). WebRTC中对如何获取对方的SDP信息不做要求, 本端可以先获取到自身的IP及端口信息, 再通过自研一套IM信令互相通知, 甚至可以直接微信聊天发送给对方. 只要知道互相知道了对端SDP, 便可进行通信.\n\n传输SDP不是WebRTC考虑的问题, 但各端如何获取自己的SDP是其要解决的问题, WebRTC api中, 各端可以获取到本机的网卡ip地址, 并随机一个udp端口来进行后续通信, 如 192.168.1.100 : 65530, 但是, 如果将这个作为SDP发给对端, 对方如果不在同一个子网下, 数据肯定是发送不过来的. 所以WebRTC需要提供能力, 让各端获取自己的公网IP及NAT后的UDP端口. 这套协议便是 STUN协议. \n\n [Rfc5389](https://www.rfc-editor.org/rfc/rfc5389) 规定了STUN协议细节,  简单总结下来, STUN是一个具备多公网IP的UDP服务, 侦听来自客户的udp请求, 并试图使用不同的ip及端口, 将客户udp  packet的 src ip src port内容原路进行返回. 从而检测客户的公网IP及NAT限制类型(full cone、 ip or port restrict).\n\n在IP归属地探测场景, 也可以使用该API, 让客户浏览器发送一个UDP包到server, 从而额外检测客户的UDP包IP地址的归属地. 但正如之前所说, 如果客户的udp包也是经由代理发出的, 则也无法检测出真实IP.\n\n![基于webrtc stun检测udp ip地址](./ip-detect.png)\n\n### 浏览器指纹(本质上和内网IP没有关系)\n\n![image-20230420111705929](./finger1.png)\n\n![image-20230420111619912](./finger2.png)\n","source":"_posts/detect-ip.md","raw":"---\ntitle: detect-ip\ndate: 2023-04-19 20:19:46\ntags:\n---\n\n### 浅谈IP归属地检测\n\nIP归属地检测故名思义, 是通过IP协议中的src地址来确定其所属的地理位置.  通过识别用户IP归属, 可以实现限制地区用户访问(OpenAI)、推荐地区用户喜好、展示评论用户所在城市等功能诉求. 本篇文章, 我们讲一下IP归属地检测的原理及方法, 以及翻墙绕过检测的方法.\n\n![b站和微博展示IP属地](./ip-show.png)\n\n### IP协议基础\n\n首先, 我们重温一下IP协议的基础知识. IP协议位于传统OSI7层模型 (**Open Systems Interconnection model** ) 中的网络层,  负责设备在复杂网络中通信时的寻址addressing、路由routing 等职责. IP协议本身是无状态、无连接、无顺序、不可靠的,  这些特性如需要均要由上层传输层如tcp协议的ack和重传机制保证. IP协议本身不care这些问题, 遇到网络拥堵、路由设备缓冲区满等情况, 均会直接将IP包丢弃.\n\n目前, IP网络层上层的主流传输层协议仍是 tcp 和 udp协议, 一些新的号称新传输层协议如quic等也是在udp协议上层进行了拓展.  换句话说, 基本上所有的服务端应用本质上均是对 tcp、udp端口的监听,  解析并响应来自客户的请求报文. \n\n不管是tcp还是udp, 由于底层都是IP协议. 在发送报文时, 客户端都会在IP层报文携带src(本机ip 192.168.1.100)和dest ip地址(内网or公网).  dest ip 会经由路由器层层寻址交由下次网关路由, 而src ip 也会在途径WAN网关时, NAT至公网IP地址. 公网IP的IP包不会再被修改, 并会经过路由表逐跳层层寻址最终抵达目标设备, 可能是一个F5、一个用户PC等, 这个过程不再详细分析了.  最终, 其实服务端可以很轻松的拿到客户请求中的公网src ip, 这个src ip最多是个代理, 但是是不会造假的, 因为造假的话服务端的响应回传client就接收不到了.\n\n### 翻墙代理\n\n翻墙代理目前基本也是两大类, 一类是VPN, 一类是VPS.  前者是用虚拟网卡+隧道, 后者是代理服务+数据加密.  前者功能更丰富, 对server端的要求更高, 出于成本角度, 只为了翻墙基本都是采用VPS+部署代理服务.\n\nVPS就是一台境外ip、且未被墙的虚机, 可供国内ip访问连接, 并且部署了代理服务.  代理服务也有很多种, 提供的代理能力也分369等, 有只代理http的, 只代理tcp的, 也有tcp + udp均可代理的.  如果是自己搭的vps, 就可以安装个支持tcp+udp的代理, 一般直接买的SaaS多节点代理服务, 通常只支持http or tcp请求代理.\n\n### 浏览器UDP通信 \n\n早期浏览器网页内容均由基于tcp的http1.1/2协议或 websocket协议提供, 这种场景下, 只要用户开个具备http or tcp代理能力的翻墙软件, 再在浏览器装个http代理插件, 即可隐藏自己国内ip. 但随着浏览器对http3 QUIC和webrtc api的支持, 浏览器逐步开始向udp通信变迁. 浏览器udp通信时, 如果你只将tcp包交由代理转发, 对端sever拿到的client src ip 自然还是你的udp本地出局ip.\n\n尽管如此, 对于使用了http3 QUIC和 WebRTC的网站来说, 如果想隐藏自己的大陆ip, 也只要把代理服务升级下, 让UDP包也经由代理转发路由即可. 因为不管是tcp还是udp, 只要让对应的网络层ip数据包经由代理的境外IP发出即可解决问题.\n\n### WebRTC STUN协议\n\nWebRTC是基于UDP的浏览器即时通讯模块, 通过浏览器的WebRTC api, 可以实现P2P端到端的实时数据通信, 目前已经广泛用于视频会议、文件数据传输、IM等场景.  WebRTC可以实现网络互通的任意两台设备的P2P通信, 比如, 属于同一内网的两台内网pc、或均支持公网udp通信的两台互联网PC. 做P2P通信前, 首先要知道对方的 IP地址 & UDP通信端口( SDP session description protocol). WebRTC中对如何获取对方的SDP信息不做要求, 本端可以先获取到自身的IP及端口信息, 再通过自研一套IM信令互相通知, 甚至可以直接微信聊天发送给对方. 只要知道互相知道了对端SDP, 便可进行通信.\n\n传输SDP不是WebRTC考虑的问题, 但各端如何获取自己的SDP是其要解决的问题, WebRTC api中, 各端可以获取到本机的网卡ip地址, 并随机一个udp端口来进行后续通信, 如 192.168.1.100 : 65530, 但是, 如果将这个作为SDP发给对端, 对方如果不在同一个子网下, 数据肯定是发送不过来的. 所以WebRTC需要提供能力, 让各端获取自己的公网IP及NAT后的UDP端口. 这套协议便是 STUN协议. \n\n [Rfc5389](https://www.rfc-editor.org/rfc/rfc5389) 规定了STUN协议细节,  简单总结下来, STUN是一个具备多公网IP的UDP服务, 侦听来自客户的udp请求, 并试图使用不同的ip及端口, 将客户udp  packet的 src ip src port内容原路进行返回. 从而检测客户的公网IP及NAT限制类型(full cone、 ip or port restrict).\n\n在IP归属地探测场景, 也可以使用该API, 让客户浏览器发送一个UDP包到server, 从而额外检测客户的UDP包IP地址的归属地. 但正如之前所说, 如果客户的udp包也是经由代理发出的, 则也无法检测出真实IP.\n\n![基于webrtc stun检测udp ip地址](./ip-detect.png)\n\n### 浏览器指纹(本质上和内网IP没有关系)\n\n![image-20230420111705929](./finger1.png)\n\n![image-20230420111619912](./finger2.png)\n","slug":"detect-ip","published":1,"updated":"2023-04-20T04:27:22.847Z","_id":"clgom9bml0000w89r3fm3bx3f","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"浅谈IP归属地检测\"><a href=\"#浅谈IP归属地检测\" class=\"headerlink\" title=\"浅谈IP归属地检测\"></a>浅谈IP归属地检测</h3><p>IP归属地检测故名思义, 是通过IP协议中的src地址来确定其所属的地理位置.  通过识别用户IP归属, 可以实现限制地区用户访问(OpenAI)、推荐地区用户喜好、展示评论用户所在城市等功能诉求. 本篇文章, 我们讲一下IP归属地检测的原理及方法, 以及翻墙绕过检测的方法.</p>\n<img src=\"/2023/04/19/detect-ip/ip-show.png\" class=\"\" title=\"b站和微博展示IP属地\">\n\n<h3 id=\"IP协议基础\"><a href=\"#IP协议基础\" class=\"headerlink\" title=\"IP协议基础\"></a>IP协议基础</h3><p>首先, 我们重温一下IP协议的基础知识. IP协议位于传统OSI7层模型 (<strong>Open Systems Interconnection model</strong> ) 中的网络层,  负责设备在复杂网络中通信时的寻址addressing、路由routing 等职责. IP协议本身是无状态、无连接、无顺序、不可靠的,  这些特性如需要均要由上层传输层如tcp协议的ack和重传机制保证. IP协议本身不care这些问题, 遇到网络拥堵、路由设备缓冲区满等情况, 均会直接将IP包丢弃.</p>\n<p>目前, IP网络层上层的主流传输层协议仍是 tcp 和 udp协议, 一些新的号称新传输层协议如quic等也是在udp协议上层进行了拓展.  换句话说, 基本上所有的服务端应用本质上均是对 tcp、udp端口的监听,  解析并响应来自客户的请求报文. </p>\n<p>不管是tcp还是udp, 由于底层都是IP协议. 在发送报文时, 客户端都会在IP层报文携带src(本机ip 192.168.1.100)和dest ip地址(内网or公网).  dest ip 会经由路由器层层寻址交由下次网关路由, 而src ip 也会在途径WAN网关时, NAT至公网IP地址. 公网IP的IP包不会再被修改, 并会经过路由表逐跳层层寻址最终抵达目标设备, 可能是一个F5、一个用户PC等, 这个过程不再详细分析了.  最终, 其实服务端可以很轻松的拿到客户请求中的公网src ip, 这个src ip最多是个代理, 但是是不会造假的, 因为造假的话服务端的响应回传client就接收不到了.</p>\n<h3 id=\"翻墙代理\"><a href=\"#翻墙代理\" class=\"headerlink\" title=\"翻墙代理\"></a>翻墙代理</h3><p>翻墙代理目前基本也是两大类, 一类是VPN, 一类是VPS.  前者是用虚拟网卡+隧道, 后者是代理服务+数据加密.  前者功能更丰富, 对server端的要求更高, 出于成本角度, 只为了翻墙基本都是采用VPS+部署代理服务.</p>\n<p>VPS就是一台境外ip、且未被墙的虚机, 可供国内ip访问连接, 并且部署了代理服务.  代理服务也有很多种, 提供的代理能力也分369等, 有只代理http的, 只代理tcp的, 也有tcp + udp均可代理的.  如果是自己搭的vps, 就可以安装个支持tcp+udp的代理, 一般直接买的SaaS多节点代理服务, 通常只支持http or tcp请求代理.</p>\n<h3 id=\"浏览器UDP通信\"><a href=\"#浏览器UDP通信\" class=\"headerlink\" title=\"浏览器UDP通信\"></a>浏览器UDP通信</h3><p>早期浏览器网页内容均由基于tcp的http1.1/2协议或 websocket协议提供, 这种场景下, 只要用户开个具备http or tcp代理能力的翻墙软件, 再在浏览器装个http代理插件, 即可隐藏自己国内ip. 但随着浏览器对http3 QUIC和webrtc api的支持, 浏览器逐步开始向udp通信变迁. 浏览器udp通信时, 如果你只将tcp包交由代理转发, 对端sever拿到的client src ip 自然还是你的udp本地出局ip.</p>\n<p>尽管如此, 对于使用了http3 QUIC和 WebRTC的网站来说, 如果想隐藏自己的大陆ip, 也只要把代理服务升级下, 让UDP包也经由代理转发路由即可. 因为不管是tcp还是udp, 只要让对应的网络层ip数据包经由代理的境外IP发出即可解决问题.</p>\n<h3 id=\"WebRTC-STUN协议\"><a href=\"#WebRTC-STUN协议\" class=\"headerlink\" title=\"WebRTC STUN协议\"></a>WebRTC STUN协议</h3><p>WebRTC是基于UDP的浏览器即时通讯模块, 通过浏览器的WebRTC api, 可以实现P2P端到端的实时数据通信, 目前已经广泛用于视频会议、文件数据传输、IM等场景.  WebRTC可以实现网络互通的任意两台设备的P2P通信, 比如, 属于同一内网的两台内网pc、或均支持公网udp通信的两台互联网PC. 做P2P通信前, 首先要知道对方的 IP地址 &amp; UDP通信端口( SDP session description protocol). WebRTC中对如何获取对方的SDP信息不做要求, 本端可以先获取到自身的IP及端口信息, 再通过自研一套IM信令互相通知, 甚至可以直接微信聊天发送给对方. 只要知道互相知道了对端SDP, 便可进行通信.</p>\n<p>传输SDP不是WebRTC考虑的问题, 但各端如何获取自己的SDP是其要解决的问题, WebRTC api中, 各端可以获取到本机的网卡ip地址, 并随机一个udp端口来进行后续通信, 如 192.168.1.100 : 65530, 但是, 如果将这个作为SDP发给对端, 对方如果不在同一个子网下, 数据肯定是发送不过来的. 所以WebRTC需要提供能力, 让各端获取自己的公网IP及NAT后的UDP端口. 这套协议便是 STUN协议. </p>\n<p> <a href=\"https://www.rfc-editor.org/rfc/rfc5389\">Rfc5389</a> 规定了STUN协议细节,  简单总结下来, STUN是一个具备多公网IP的UDP服务, 侦听来自客户的udp请求, 并试图使用不同的ip及端口, 将客户udp  packet的 src ip src port内容原路进行返回. 从而检测客户的公网IP及NAT限制类型(full cone、 ip or port restrict).</p>\n<p>在IP归属地探测场景, 也可以使用该API, 让客户浏览器发送一个UDP包到server, 从而额外检测客户的UDP包IP地址的归属地. 但正如之前所说, 如果客户的udp包也是经由代理发出的, 则也无法检测出真实IP.</p>\n<img src=\"/2023/04/19/detect-ip/ip-detect.png\" class=\"\" title=\"基于webrtc stun检测udp ip地址\">\n\n<h3 id=\"浏览器指纹-本质上和内网IP没有关系\"><a href=\"#浏览器指纹-本质上和内网IP没有关系\" class=\"headerlink\" title=\"浏览器指纹(本质上和内网IP没有关系)\"></a>浏览器指纹(本质上和内网IP没有关系)</h3><img src=\"/2023/04/19/detect-ip/finger1.png\" class=\"\" title=\"image-20230420111705929\">\n\n<img src=\"/2023/04/19/detect-ip/finger2.png\" class=\"\" title=\"image-20230420111619912\">\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"浅谈IP归属地检测\"><a href=\"#浅谈IP归属地检测\" class=\"headerlink\" title=\"浅谈IP归属地检测\"></a>浅谈IP归属地检测</h3><p>IP归属地检测故名思义, 是通过IP协议中的src地址来确定其所属的地理位置.  通过识别用户IP归属, 可以实现限制地区用户访问(OpenAI)、推荐地区用户喜好、展示评论用户所在城市等功能诉求. 本篇文章, 我们讲一下IP归属地检测的原理及方法, 以及翻墙绕过检测的方法.</p>\n<img src=\"/2023/04/19/detect-ip/ip-show.png\" class=\"\" title=\"b站和微博展示IP属地\">\n\n<h3 id=\"IP协议基础\"><a href=\"#IP协议基础\" class=\"headerlink\" title=\"IP协议基础\"></a>IP协议基础</h3><p>首先, 我们重温一下IP协议的基础知识. IP协议位于传统OSI7层模型 (<strong>Open Systems Interconnection model</strong> ) 中的网络层,  负责设备在复杂网络中通信时的寻址addressing、路由routing 等职责. IP协议本身是无状态、无连接、无顺序、不可靠的,  这些特性如需要均要由上层传输层如tcp协议的ack和重传机制保证. IP协议本身不care这些问题, 遇到网络拥堵、路由设备缓冲区满等情况, 均会直接将IP包丢弃.</p>\n<p>目前, IP网络层上层的主流传输层协议仍是 tcp 和 udp协议, 一些新的号称新传输层协议如quic等也是在udp协议上层进行了拓展.  换句话说, 基本上所有的服务端应用本质上均是对 tcp、udp端口的监听,  解析并响应来自客户的请求报文. </p>\n<p>不管是tcp还是udp, 由于底层都是IP协议. 在发送报文时, 客户端都会在IP层报文携带src(本机ip 192.168.1.100)和dest ip地址(内网or公网).  dest ip 会经由路由器层层寻址交由下次网关路由, 而src ip 也会在途径WAN网关时, NAT至公网IP地址. 公网IP的IP包不会再被修改, 并会经过路由表逐跳层层寻址最终抵达目标设备, 可能是一个F5、一个用户PC等, 这个过程不再详细分析了.  最终, 其实服务端可以很轻松的拿到客户请求中的公网src ip, 这个src ip最多是个代理, 但是是不会造假的, 因为造假的话服务端的响应回传client就接收不到了.</p>\n<h3 id=\"翻墙代理\"><a href=\"#翻墙代理\" class=\"headerlink\" title=\"翻墙代理\"></a>翻墙代理</h3><p>翻墙代理目前基本也是两大类, 一类是VPN, 一类是VPS.  前者是用虚拟网卡+隧道, 后者是代理服务+数据加密.  前者功能更丰富, 对server端的要求更高, 出于成本角度, 只为了翻墙基本都是采用VPS+部署代理服务.</p>\n<p>VPS就是一台境外ip、且未被墙的虚机, 可供国内ip访问连接, 并且部署了代理服务.  代理服务也有很多种, 提供的代理能力也分369等, 有只代理http的, 只代理tcp的, 也有tcp + udp均可代理的.  如果是自己搭的vps, 就可以安装个支持tcp+udp的代理, 一般直接买的SaaS多节点代理服务, 通常只支持http or tcp请求代理.</p>\n<h3 id=\"浏览器UDP通信\"><a href=\"#浏览器UDP通信\" class=\"headerlink\" title=\"浏览器UDP通信\"></a>浏览器UDP通信</h3><p>早期浏览器网页内容均由基于tcp的http1.1/2协议或 websocket协议提供, 这种场景下, 只要用户开个具备http or tcp代理能力的翻墙软件, 再在浏览器装个http代理插件, 即可隐藏自己国内ip. 但随着浏览器对http3 QUIC和webrtc api的支持, 浏览器逐步开始向udp通信变迁. 浏览器udp通信时, 如果你只将tcp包交由代理转发, 对端sever拿到的client src ip 自然还是你的udp本地出局ip.</p>\n<p>尽管如此, 对于使用了http3 QUIC和 WebRTC的网站来说, 如果想隐藏自己的大陆ip, 也只要把代理服务升级下, 让UDP包也经由代理转发路由即可. 因为不管是tcp还是udp, 只要让对应的网络层ip数据包经由代理的境外IP发出即可解决问题.</p>\n<h3 id=\"WebRTC-STUN协议\"><a href=\"#WebRTC-STUN协议\" class=\"headerlink\" title=\"WebRTC STUN协议\"></a>WebRTC STUN协议</h3><p>WebRTC是基于UDP的浏览器即时通讯模块, 通过浏览器的WebRTC api, 可以实现P2P端到端的实时数据通信, 目前已经广泛用于视频会议、文件数据传输、IM等场景.  WebRTC可以实现网络互通的任意两台设备的P2P通信, 比如, 属于同一内网的两台内网pc、或均支持公网udp通信的两台互联网PC. 做P2P通信前, 首先要知道对方的 IP地址 &amp; UDP通信端口( SDP session description protocol). WebRTC中对如何获取对方的SDP信息不做要求, 本端可以先获取到自身的IP及端口信息, 再通过自研一套IM信令互相通知, 甚至可以直接微信聊天发送给对方. 只要知道互相知道了对端SDP, 便可进行通信.</p>\n<p>传输SDP不是WebRTC考虑的问题, 但各端如何获取自己的SDP是其要解决的问题, WebRTC api中, 各端可以获取到本机的网卡ip地址, 并随机一个udp端口来进行后续通信, 如 192.168.1.100 : 65530, 但是, 如果将这个作为SDP发给对端, 对方如果不在同一个子网下, 数据肯定是发送不过来的. 所以WebRTC需要提供能力, 让各端获取自己的公网IP及NAT后的UDP端口. 这套协议便是 STUN协议. </p>\n<p> <a href=\"https://www.rfc-editor.org/rfc/rfc5389\">Rfc5389</a> 规定了STUN协议细节,  简单总结下来, STUN是一个具备多公网IP的UDP服务, 侦听来自客户的udp请求, 并试图使用不同的ip及端口, 将客户udp  packet的 src ip src port内容原路进行返回. 从而检测客户的公网IP及NAT限制类型(full cone、 ip or port restrict).</p>\n<p>在IP归属地探测场景, 也可以使用该API, 让客户浏览器发送一个UDP包到server, 从而额外检测客户的UDP包IP地址的归属地. 但正如之前所说, 如果客户的udp包也是经由代理发出的, 则也无法检测出真实IP.</p>\n<img src=\"/2023/04/19/detect-ip/ip-detect.png\" class=\"\" title=\"基于webrtc stun检测udp ip地址\">\n\n<h3 id=\"浏览器指纹-本质上和内网IP没有关系\"><a href=\"#浏览器指纹-本质上和内网IP没有关系\" class=\"headerlink\" title=\"浏览器指纹(本质上和内网IP没有关系)\"></a>浏览器指纹(本质上和内网IP没有关系)</h3><img src=\"/2023/04/19/detect-ip/finger1.png\" class=\"\" title=\"image-20230420111705929\">\n\n<img src=\"/2023/04/19/detect-ip/finger2.png\" class=\"\" title=\"image-20230420111619912\">\n"},{"title":"kafka-clients 0.10.2.1 空poll导致频繁youngGC的问题剖析","date":"2023-06-01T09:20:50.000Z","_content":"\n## 一、问题复现\n自研应用消费客户实时kafka信令消息， 发现eden区128M 数秒就会消耗完并频繁触发youngGC， 并加剧fullGC，\n本文排查下到底kafkaConsumer 占用eden和什么相关\n编写demo kafka用0.10.2.1版本，单线程单consumer while true poll(1000)下， 128M年轻代 平均60s 一次 youngGC， 并且总是突然的大量内存堆使用。  现象基本对的上。\n\n![gc](./p1-jvmgc.png)\n\n## 二、问题原因\n首先我们google下类似问题，发现以下相关：https://issues.apache.org/jira/browse/KAFKA-5512 \n\n概括bug：poll线程拉取消息时，为避免影响heartbeat线程，会将本次poll timeout时间设置为 Min(timeout, timeToNextHeartbeat) , 当timeToNextHeartbeat=0 时 client.poll(0)会非阻塞无停顿的读取数据。此时，若heartbeat线程仍处在wait( retryBackOff)(上一次检查还不需要发送心跳，则wait retryBackOffMs 等待下一次check)的情况下，这时一次poll过程会 while remaining>0 发起大量pollOnce 且 创建并遍历大量空数组导致频繁youngGC。 此bug被记录到github issue-3442, 并合入0.11.0版本代码\n\n为了进一步证明问题，使用新老版本kafkaClients包测试相同问题, while(true) {empty poll(1000ms) }\n\n![compare](./p2-compare.png)\n\n结论：0.10.2.1 的bug， 已与 0.11.0+ 版本修复， 虽然得到了结论确实是低版本有bug， 但是我们没有自己排查到这个问题， 接下来我们根据提示， 自己尝试定位到问题。\n\n## 三、JProfiler根因定位&源码分析\n首先我们安装社区定位问题使用的 JProfiler，JProfiler通过javaagent对class进行了插桩，我们继续运行有问题的demo代码，开启cpu统计，查看org.apache.kafka包内所有方法调用次数\n\n![jprofile1](./p3.png)\n\n发现确实，业务层代码仅仅调用了5次consumer.poll，但是pollOnce方法执行了1446次，与社区反馈的问题现象一致。\nheap中确实是出现了大量的Kafka内部对象及Collection Map等集合类，手动触发gc可全部被gc回收\n\n![jprofile2](./p4.png)\n\npoll & pollOnce问题源码定位：\n\n![code1](./p5.png)\n\n源码中可以看到，pollOnce在一个while循环中，只要没有到poll入参给定的timeout，则会无限重复执行pollOnce方法，也就是说一次poll调用，确实可能多次调用pollOnce方法，但pollOnce的入参传入的也是remaining，我们继续看pollOnce内部实现\n\n![code2](./p6.png)\n\npollOnce方法中，有一行修改client pollTimeout的代码，它会将NetworkClient 向kafka集群 poll数据的阻塞时间 设置为 入参timeout 和 距离coordinator下一次发送心跳间隔时间 中更小的那个值，如果调用至此行代码，已经到了要发送heartbeat的时间的话，pollTimeout会被设为0， 最终在nio层面 执行 selector.poll(0) , 也就是selector 直接返回nio channel就绪数据， 不阻塞。此方法也就会瞬间返回结果， 并进入下一次while循环，如果heartbeat线程 还未发送heartbeat的话， 再次立即执行完进入while循环，继续pollOnce。 直至remaining结束 或者 heartbeat线程发送 heartbeat请求到 对应coordinator broker。\n\n看到这，其实可以理解这行问题的代码用意，防止poll timeout阻塞过程中影响了 heartbeat线程发送心跳请求。\n\n但是Heartbeat心跳线程的这个逻辑导致了bug的出现：\n\n![code3](./p7.png)\n\nHeartbeat线程负责consumerGroup中的consumer client和 kafka coordinator broker定期心跳，心跳间隔通过参数 heartbeatIntervalMs 配置， 线程while true判断是否到达interval并需要发送Heartbeat请求， 没到发请求时间就 wait(retryBackOffMs) 后重试。也就是在这个retryBackOffMs 内，会导致pollOnce一直poll(0)， 并发起大量pollOnce调用， 从而导致eden区usage突然陡增，导致频繁youngGC。\n\n接下来我们通过示意图来说明bug出现的具体原因。\n\n![consumer](./p8.png)\n\n首先， 上边是一个kafka consumer的主要涵盖内容， 我们启动consumer消费线程的同时，如果使用了consumerGroup，kafka client会为consumerGroup分配一个coordinator broker，并将consumerGroup中的第一个consuemr作为leader 负责partition的assign、rebalance等工作。consumer和coordinator broker需要维持心跳来帮助判断每个consumerGroup中的consumer是否还存活，这个是靠后台Heartbeat线程来进行的。\n当触发以下条件时，会发生上述BUG：\n\n![bug](./p9.png)\n\n## 四、问题修复\n彻底修复：升级kafka-clients库 0.11+，社区修复方案： 当发现timeToNextHeartbeat=0时，会调用coordinator.notifyAll 唤醒Heartbeat立即发送心跳\n\n无法升级kafka-clients的话，调参优化：\n  + 如果没有大量的kafkaConsumer线程，则youngGC问题不会很明显，无影响则可以不修复。  \n  + 如果你的生产者稳定生产消息，消费者每次poll过程基本都能消费到消息，则无影响，可以不修复。因为一担pollOnce拉到了数据就返回了。\n  + 如果youngGC确实影响了你的应用，可以减少retryBackOffMS的大小，较小周期冲突时长。\n  + poll消息如果结果为空，sleep一段时间，减小poll频率，如果业务可接受的话。\n\n","source":"_posts/kafkaConsumerBug.md","raw":"---\ntitle: kafka-clients 0.10.2.1 空poll导致频繁youngGC的问题剖析\ndate: 2023-06-01 17:20:50\ntags:\n---\n\n## 一、问题复现\n自研应用消费客户实时kafka信令消息， 发现eden区128M 数秒就会消耗完并频繁触发youngGC， 并加剧fullGC，\n本文排查下到底kafkaConsumer 占用eden和什么相关\n编写demo kafka用0.10.2.1版本，单线程单consumer while true poll(1000)下， 128M年轻代 平均60s 一次 youngGC， 并且总是突然的大量内存堆使用。  现象基本对的上。\n\n![gc](./p1-jvmgc.png)\n\n## 二、问题原因\n首先我们google下类似问题，发现以下相关：https://issues.apache.org/jira/browse/KAFKA-5512 \n\n概括bug：poll线程拉取消息时，为避免影响heartbeat线程，会将本次poll timeout时间设置为 Min(timeout, timeToNextHeartbeat) , 当timeToNextHeartbeat=0 时 client.poll(0)会非阻塞无停顿的读取数据。此时，若heartbeat线程仍处在wait( retryBackOff)(上一次检查还不需要发送心跳，则wait retryBackOffMs 等待下一次check)的情况下，这时一次poll过程会 while remaining>0 发起大量pollOnce 且 创建并遍历大量空数组导致频繁youngGC。 此bug被记录到github issue-3442, 并合入0.11.0版本代码\n\n为了进一步证明问题，使用新老版本kafkaClients包测试相同问题, while(true) {empty poll(1000ms) }\n\n![compare](./p2-compare.png)\n\n结论：0.10.2.1 的bug， 已与 0.11.0+ 版本修复， 虽然得到了结论确实是低版本有bug， 但是我们没有自己排查到这个问题， 接下来我们根据提示， 自己尝试定位到问题。\n\n## 三、JProfiler根因定位&源码分析\n首先我们安装社区定位问题使用的 JProfiler，JProfiler通过javaagent对class进行了插桩，我们继续运行有问题的demo代码，开启cpu统计，查看org.apache.kafka包内所有方法调用次数\n\n![jprofile1](./p3.png)\n\n发现确实，业务层代码仅仅调用了5次consumer.poll，但是pollOnce方法执行了1446次，与社区反馈的问题现象一致。\nheap中确实是出现了大量的Kafka内部对象及Collection Map等集合类，手动触发gc可全部被gc回收\n\n![jprofile2](./p4.png)\n\npoll & pollOnce问题源码定位：\n\n![code1](./p5.png)\n\n源码中可以看到，pollOnce在一个while循环中，只要没有到poll入参给定的timeout，则会无限重复执行pollOnce方法，也就是说一次poll调用，确实可能多次调用pollOnce方法，但pollOnce的入参传入的也是remaining，我们继续看pollOnce内部实现\n\n![code2](./p6.png)\n\npollOnce方法中，有一行修改client pollTimeout的代码，它会将NetworkClient 向kafka集群 poll数据的阻塞时间 设置为 入参timeout 和 距离coordinator下一次发送心跳间隔时间 中更小的那个值，如果调用至此行代码，已经到了要发送heartbeat的时间的话，pollTimeout会被设为0， 最终在nio层面 执行 selector.poll(0) , 也就是selector 直接返回nio channel就绪数据， 不阻塞。此方法也就会瞬间返回结果， 并进入下一次while循环，如果heartbeat线程 还未发送heartbeat的话， 再次立即执行完进入while循环，继续pollOnce。 直至remaining结束 或者 heartbeat线程发送 heartbeat请求到 对应coordinator broker。\n\n看到这，其实可以理解这行问题的代码用意，防止poll timeout阻塞过程中影响了 heartbeat线程发送心跳请求。\n\n但是Heartbeat心跳线程的这个逻辑导致了bug的出现：\n\n![code3](./p7.png)\n\nHeartbeat线程负责consumerGroup中的consumer client和 kafka coordinator broker定期心跳，心跳间隔通过参数 heartbeatIntervalMs 配置， 线程while true判断是否到达interval并需要发送Heartbeat请求， 没到发请求时间就 wait(retryBackOffMs) 后重试。也就是在这个retryBackOffMs 内，会导致pollOnce一直poll(0)， 并发起大量pollOnce调用， 从而导致eden区usage突然陡增，导致频繁youngGC。\n\n接下来我们通过示意图来说明bug出现的具体原因。\n\n![consumer](./p8.png)\n\n首先， 上边是一个kafka consumer的主要涵盖内容， 我们启动consumer消费线程的同时，如果使用了consumerGroup，kafka client会为consumerGroup分配一个coordinator broker，并将consumerGroup中的第一个consuemr作为leader 负责partition的assign、rebalance等工作。consumer和coordinator broker需要维持心跳来帮助判断每个consumerGroup中的consumer是否还存活，这个是靠后台Heartbeat线程来进行的。\n当触发以下条件时，会发生上述BUG：\n\n![bug](./p9.png)\n\n## 四、问题修复\n彻底修复：升级kafka-clients库 0.11+，社区修复方案： 当发现timeToNextHeartbeat=0时，会调用coordinator.notifyAll 唤醒Heartbeat立即发送心跳\n\n无法升级kafka-clients的话，调参优化：\n  + 如果没有大量的kafkaConsumer线程，则youngGC问题不会很明显，无影响则可以不修复。  \n  + 如果你的生产者稳定生产消息，消费者每次poll过程基本都能消费到消息，则无影响，可以不修复。因为一担pollOnce拉到了数据就返回了。\n  + 如果youngGC确实影响了你的应用，可以减少retryBackOffMS的大小，较小周期冲突时长。\n  + poll消息如果结果为空，sleep一段时间，减小poll频率，如果业务可接受的话。\n\n","slug":"kafkaConsumerBug","published":1,"updated":"2023-06-01T09:43:32.529Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clicy8u1t0000dd9r5drpb8v5","content":"<h2 id=\"一、问题复现\"><a href=\"#一、问题复现\" class=\"headerlink\" title=\"一、问题复现\"></a>一、问题复现</h2><p>自研应用消费客户实时kafka信令消息， 发现eden区128M 数秒就会消耗完并频繁触发youngGC， 并加剧fullGC，<br>本文排查下到底kafkaConsumer 占用eden和什么相关<br>编写demo kafka用0.10.2.1版本，单线程单consumer while true poll(1000)下， 128M年轻代 平均60s 一次 youngGC， 并且总是突然的大量内存堆使用。  现象基本对的上。</p>\n<img src=\"/2023/06/01/kafkaConsumerBug/p1-jvmgc.png\" class=\"\" title=\"gc\">\n\n<h2 id=\"二、问题原因\"><a href=\"#二、问题原因\" class=\"headerlink\" title=\"二、问题原因\"></a>二、问题原因</h2><p>首先我们google下类似问题，发现以下相关：<a href=\"https://issues.apache.org/jira/browse/KAFKA-5512\">https://issues.apache.org/jira/browse/KAFKA-5512</a> </p>\n<p>概括bug：poll线程拉取消息时，为避免影响heartbeat线程，会将本次poll timeout时间设置为 Min(timeout, timeToNextHeartbeat) , 当timeToNextHeartbeat=0 时 client.poll(0)会非阻塞无停顿的读取数据。此时，若heartbeat线程仍处在wait( retryBackOff)(上一次检查还不需要发送心跳，则wait retryBackOffMs 等待下一次check)的情况下，这时一次poll过程会 while remaining&gt;0 发起大量pollOnce 且 创建并遍历大量空数组导致频繁youngGC。 此bug被记录到github issue-3442, 并合入0.11.0版本代码</p>\n<p>为了进一步证明问题，使用新老版本kafkaClients包测试相同问题, while(true) {empty poll(1000ms) }</p>\n<img src=\"/2023/06/01/kafkaConsumerBug/p2-compare.png\" class=\"\" title=\"compare\">\n\n<p>结论：0.10.2.1 的bug， 已与 0.11.0+ 版本修复， 虽然得到了结论确实是低版本有bug， 但是我们没有自己排查到这个问题， 接下来我们根据提示， 自己尝试定位到问题。</p>\n<h2 id=\"三、JProfiler根因定位-amp-源码分析\"><a href=\"#三、JProfiler根因定位-amp-源码分析\" class=\"headerlink\" title=\"三、JProfiler根因定位&amp;源码分析\"></a>三、JProfiler根因定位&amp;源码分析</h2><p>首先我们安装社区定位问题使用的 JProfiler，JProfiler通过javaagent对class进行了插桩，我们继续运行有问题的demo代码，开启cpu统计，查看org.apache.kafka包内所有方法调用次数</p>\n<img src=\"/2023/06/01/kafkaConsumerBug/p3.png\" class=\"\" title=\"jprofile1\">\n\n<p>发现确实，业务层代码仅仅调用了5次consumer.poll，但是pollOnce方法执行了1446次，与社区反馈的问题现象一致。<br>heap中确实是出现了大量的Kafka内部对象及Collection Map等集合类，手动触发gc可全部被gc回收</p>\n<img src=\"/2023/06/01/kafkaConsumerBug/p4.png\" class=\"\" title=\"jprofile2\">\n\n<p>poll &amp; pollOnce问题源码定位：</p>\n<img src=\"/2023/06/01/kafkaConsumerBug/p5.png\" class=\"\" title=\"code1\">\n\n<p>源码中可以看到，pollOnce在一个while循环中，只要没有到poll入参给定的timeout，则会无限重复执行pollOnce方法，也就是说一次poll调用，确实可能多次调用pollOnce方法，但pollOnce的入参传入的也是remaining，我们继续看pollOnce内部实现</p>\n<img src=\"/2023/06/01/kafkaConsumerBug/p6.png\" class=\"\" title=\"code2\">\n\n<p>pollOnce方法中，有一行修改client pollTimeout的代码，它会将NetworkClient 向kafka集群 poll数据的阻塞时间 设置为 入参timeout 和 距离coordinator下一次发送心跳间隔时间 中更小的那个值，如果调用至此行代码，已经到了要发送heartbeat的时间的话，pollTimeout会被设为0， 最终在nio层面 执行 selector.poll(0) , 也就是selector 直接返回nio channel就绪数据， 不阻塞。此方法也就会瞬间返回结果， 并进入下一次while循环，如果heartbeat线程 还未发送heartbeat的话， 再次立即执行完进入while循环，继续pollOnce。 直至remaining结束 或者 heartbeat线程发送 heartbeat请求到 对应coordinator broker。</p>\n<p>看到这，其实可以理解这行问题的代码用意，防止poll timeout阻塞过程中影响了 heartbeat线程发送心跳请求。</p>\n<p>但是Heartbeat心跳线程的这个逻辑导致了bug的出现：</p>\n<img src=\"/2023/06/01/kafkaConsumerBug/p7.png\" class=\"\" title=\"code3\">\n\n<p>Heartbeat线程负责consumerGroup中的consumer client和 kafka coordinator broker定期心跳，心跳间隔通过参数 heartbeatIntervalMs 配置， 线程while true判断是否到达interval并需要发送Heartbeat请求， 没到发请求时间就 wait(retryBackOffMs) 后重试。也就是在这个retryBackOffMs 内，会导致pollOnce一直poll(0)， 并发起大量pollOnce调用， 从而导致eden区usage突然陡增，导致频繁youngGC。</p>\n<p>接下来我们通过示意图来说明bug出现的具体原因。</p>\n<img src=\"/2023/06/01/kafkaConsumerBug/p8.png\" class=\"\" title=\"consumer\">\n\n<p>首先， 上边是一个kafka consumer的主要涵盖内容， 我们启动consumer消费线程的同时，如果使用了consumerGroup，kafka client会为consumerGroup分配一个coordinator broker，并将consumerGroup中的第一个consuemr作为leader 负责partition的assign、rebalance等工作。consumer和coordinator broker需要维持心跳来帮助判断每个consumerGroup中的consumer是否还存活，这个是靠后台Heartbeat线程来进行的。<br>当触发以下条件时，会发生上述BUG：</p>\n<img src=\"/2023/06/01/kafkaConsumerBug/p9.png\" class=\"\" title=\"bug\">\n\n<h2 id=\"四、问题修复\"><a href=\"#四、问题修复\" class=\"headerlink\" title=\"四、问题修复\"></a>四、问题修复</h2><p>彻底修复：升级kafka-clients库 0.11+，社区修复方案： 当发现timeToNextHeartbeat=0时，会调用coordinator.notifyAll 唤醒Heartbeat立即发送心跳</p>\n<p>无法升级kafka-clients的话，调参优化：</p>\n<ul>\n<li>如果没有大量的kafkaConsumer线程，则youngGC问题不会很明显，无影响则可以不修复。  </li>\n<li>如果你的生产者稳定生产消息，消费者每次poll过程基本都能消费到消息，则无影响，可以不修复。因为一担pollOnce拉到了数据就返回了。</li>\n<li>如果youngGC确实影响了你的应用，可以减少retryBackOffMS的大小，较小周期冲突时长。</li>\n<li>poll消息如果结果为空，sleep一段时间，减小poll频率，如果业务可接受的话。</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"一、问题复现\"><a href=\"#一、问题复现\" class=\"headerlink\" title=\"一、问题复现\"></a>一、问题复现</h2><p>自研应用消费客户实时kafka信令消息， 发现eden区128M 数秒就会消耗完并频繁触发youngGC， 并加剧fullGC，<br>本文排查下到底kafkaConsumer 占用eden和什么相关<br>编写demo kafka用0.10.2.1版本，单线程单consumer while true poll(1000)下， 128M年轻代 平均60s 一次 youngGC， 并且总是突然的大量内存堆使用。  现象基本对的上。</p>\n<img src=\"/2023/06/01/kafkaConsumerBug/p1-jvmgc.png\" class=\"\" title=\"gc\">\n\n<h2 id=\"二、问题原因\"><a href=\"#二、问题原因\" class=\"headerlink\" title=\"二、问题原因\"></a>二、问题原因</h2><p>首先我们google下类似问题，发现以下相关：<a href=\"https://issues.apache.org/jira/browse/KAFKA-5512\">https://issues.apache.org/jira/browse/KAFKA-5512</a> </p>\n<p>概括bug：poll线程拉取消息时，为避免影响heartbeat线程，会将本次poll timeout时间设置为 Min(timeout, timeToNextHeartbeat) , 当timeToNextHeartbeat=0 时 client.poll(0)会非阻塞无停顿的读取数据。此时，若heartbeat线程仍处在wait( retryBackOff)(上一次检查还不需要发送心跳，则wait retryBackOffMs 等待下一次check)的情况下，这时一次poll过程会 while remaining&gt;0 发起大量pollOnce 且 创建并遍历大量空数组导致频繁youngGC。 此bug被记录到github issue-3442, 并合入0.11.0版本代码</p>\n<p>为了进一步证明问题，使用新老版本kafkaClients包测试相同问题, while(true) {empty poll(1000ms) }</p>\n<img src=\"/2023/06/01/kafkaConsumerBug/p2-compare.png\" class=\"\" title=\"compare\">\n\n<p>结论：0.10.2.1 的bug， 已与 0.11.0+ 版本修复， 虽然得到了结论确实是低版本有bug， 但是我们没有自己排查到这个问题， 接下来我们根据提示， 自己尝试定位到问题。</p>\n<h2 id=\"三、JProfiler根因定位-amp-源码分析\"><a href=\"#三、JProfiler根因定位-amp-源码分析\" class=\"headerlink\" title=\"三、JProfiler根因定位&amp;源码分析\"></a>三、JProfiler根因定位&amp;源码分析</h2><p>首先我们安装社区定位问题使用的 JProfiler，JProfiler通过javaagent对class进行了插桩，我们继续运行有问题的demo代码，开启cpu统计，查看org.apache.kafka包内所有方法调用次数</p>\n<img src=\"/2023/06/01/kafkaConsumerBug/p3.png\" class=\"\" title=\"jprofile1\">\n\n<p>发现确实，业务层代码仅仅调用了5次consumer.poll，但是pollOnce方法执行了1446次，与社区反馈的问题现象一致。<br>heap中确实是出现了大量的Kafka内部对象及Collection Map等集合类，手动触发gc可全部被gc回收</p>\n<img src=\"/2023/06/01/kafkaConsumerBug/p4.png\" class=\"\" title=\"jprofile2\">\n\n<p>poll &amp; pollOnce问题源码定位：</p>\n<img src=\"/2023/06/01/kafkaConsumerBug/p5.png\" class=\"\" title=\"code1\">\n\n<p>源码中可以看到，pollOnce在一个while循环中，只要没有到poll入参给定的timeout，则会无限重复执行pollOnce方法，也就是说一次poll调用，确实可能多次调用pollOnce方法，但pollOnce的入参传入的也是remaining，我们继续看pollOnce内部实现</p>\n<img src=\"/2023/06/01/kafkaConsumerBug/p6.png\" class=\"\" title=\"code2\">\n\n<p>pollOnce方法中，有一行修改client pollTimeout的代码，它会将NetworkClient 向kafka集群 poll数据的阻塞时间 设置为 入参timeout 和 距离coordinator下一次发送心跳间隔时间 中更小的那个值，如果调用至此行代码，已经到了要发送heartbeat的时间的话，pollTimeout会被设为0， 最终在nio层面 执行 selector.poll(0) , 也就是selector 直接返回nio channel就绪数据， 不阻塞。此方法也就会瞬间返回结果， 并进入下一次while循环，如果heartbeat线程 还未发送heartbeat的话， 再次立即执行完进入while循环，继续pollOnce。 直至remaining结束 或者 heartbeat线程发送 heartbeat请求到 对应coordinator broker。</p>\n<p>看到这，其实可以理解这行问题的代码用意，防止poll timeout阻塞过程中影响了 heartbeat线程发送心跳请求。</p>\n<p>但是Heartbeat心跳线程的这个逻辑导致了bug的出现：</p>\n<img src=\"/2023/06/01/kafkaConsumerBug/p7.png\" class=\"\" title=\"code3\">\n\n<p>Heartbeat线程负责consumerGroup中的consumer client和 kafka coordinator broker定期心跳，心跳间隔通过参数 heartbeatIntervalMs 配置， 线程while true判断是否到达interval并需要发送Heartbeat请求， 没到发请求时间就 wait(retryBackOffMs) 后重试。也就是在这个retryBackOffMs 内，会导致pollOnce一直poll(0)， 并发起大量pollOnce调用， 从而导致eden区usage突然陡增，导致频繁youngGC。</p>\n<p>接下来我们通过示意图来说明bug出现的具体原因。</p>\n<img src=\"/2023/06/01/kafkaConsumerBug/p8.png\" class=\"\" title=\"consumer\">\n\n<p>首先， 上边是一个kafka consumer的主要涵盖内容， 我们启动consumer消费线程的同时，如果使用了consumerGroup，kafka client会为consumerGroup分配一个coordinator broker，并将consumerGroup中的第一个consuemr作为leader 负责partition的assign、rebalance等工作。consumer和coordinator broker需要维持心跳来帮助判断每个consumerGroup中的consumer是否还存活，这个是靠后台Heartbeat线程来进行的。<br>当触发以下条件时，会发生上述BUG：</p>\n<img src=\"/2023/06/01/kafkaConsumerBug/p9.png\" class=\"\" title=\"bug\">\n\n<h2 id=\"四、问题修复\"><a href=\"#四、问题修复\" class=\"headerlink\" title=\"四、问题修复\"></a>四、问题修复</h2><p>彻底修复：升级kafka-clients库 0.11+，社区修复方案： 当发现timeToNextHeartbeat=0时，会调用coordinator.notifyAll 唤醒Heartbeat立即发送心跳</p>\n<p>无法升级kafka-clients的话，调参优化：</p>\n<ul>\n<li>如果没有大量的kafkaConsumer线程，则youngGC问题不会很明显，无影响则可以不修复。  </li>\n<li>如果你的生产者稳定生产消息，消费者每次poll过程基本都能消费到消息，则无影响，可以不修复。因为一担pollOnce拉到了数据就返回了。</li>\n<li>如果youngGC确实影响了你的应用，可以减少retryBackOffMS的大小，较小周期冲突时长。</li>\n<li>poll消息如果结果为空，sleep一段时间，减小poll频率，如果业务可接受的话。</li>\n</ul>\n"},{"title":"oauth2","date":"2023-09-11T23:53:30.000Z","_content":"## 一、oauth2.0流程 & github oauth2 App registration\n授权码(code)模式是OAuth2目前最安全最复杂的授权流程, 详细流程可以看下图:\n\n![基本流程](./flow.webp)\n\n## 二、github oauth\n\n1. 账号下注册github App\n\n![注册](./github_new_app.png)\n\n2. 注册时填写callback url, 并记录好生成的 clientId & secret\n\n![registered](./github_registered.png)\n\n![callback](./github_callback.png)\n\n3. 在需要oauth2登录github时redirect至该App\n\n![oauth2](./github_oauth.png)\n\n4. 若用户授权,github会带code callback至配置的后端回调地址\n   ```\n   https://xietiandi.tech/oauth2/authorize/callback?code=b00925eb6e607dca3e77\n   ```\n\n5. 后端此时可以根据此code向github换取access_token, postman为例\n\n![ac](./github_ac.png)\n\n6. 后端可以再用access_token请求用户的github相关资源, postman为例\n\n![api](./github_api.png)\n\n","source":"_posts/oauth2.md","raw":"---\ntitle: oauth2\ndate: 2023-09-12 07:53:30\ntags:\n---\n## 一、oauth2.0流程 & github oauth2 App registration\n授权码(code)模式是OAuth2目前最安全最复杂的授权流程, 详细流程可以看下图:\n\n![基本流程](./flow.webp)\n\n## 二、github oauth\n\n1. 账号下注册github App\n\n![注册](./github_new_app.png)\n\n2. 注册时填写callback url, 并记录好生成的 clientId & secret\n\n![registered](./github_registered.png)\n\n![callback](./github_callback.png)\n\n3. 在需要oauth2登录github时redirect至该App\n\n![oauth2](./github_oauth.png)\n\n4. 若用户授权,github会带code callback至配置的后端回调地址\n   ```\n   https://xietiandi.tech/oauth2/authorize/callback?code=b00925eb6e607dca3e77\n   ```\n\n5. 后端此时可以根据此code向github换取access_token, postman为例\n\n![ac](./github_ac.png)\n\n6. 后端可以再用access_token请求用户的github相关资源, postman为例\n\n![api](./github_api.png)\n\n","slug":"oauth2","published":1,"updated":"2023-09-12T08:19:34.978Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clmg1m9980000ut9rhbkmgoz7","content":"<h2 id=\"一、oauth2-0流程-amp-github-oauth2-App-registration\"><a href=\"#一、oauth2-0流程-amp-github-oauth2-App-registration\" class=\"headerlink\" title=\"一、oauth2.0流程 &amp; github oauth2 App registration\"></a>一、oauth2.0流程 &amp; github oauth2 App registration</h2><p>授权码(code)模式是OAuth2目前最安全最复杂的授权流程, 详细流程可以看下图:</p>\n<img src=\"/2023/09/12/oauth2/flow.webp\" class=\"\" title=\"基本流程\">\n\n<h2 id=\"二、github-oauth\"><a href=\"#二、github-oauth\" class=\"headerlink\" title=\"二、github oauth\"></a>二、github oauth</h2><ol>\n<li>账号下注册github App</li>\n</ol>\n<img src=\"/2023/09/12/oauth2/github_new_app.png\" class=\"\" title=\"注册\">\n\n<ol start=\"2\">\n<li>注册时填写callback url, 并记录好生成的 clientId &amp; secret</li>\n</ol>\n<img src=\"/2023/09/12/oauth2/github_registered.png\" class=\"\" title=\"registered\">\n\n<img src=\"/2023/09/12/oauth2/github_callback.png\" class=\"\" title=\"callback\">\n\n<ol start=\"3\">\n<li>在需要oauth2登录github时redirect至该App</li>\n</ol>\n<img src=\"/2023/09/12/oauth2/github_oauth.png\" class=\"\" title=\"oauth2\">\n\n<ol start=\"4\">\n<li><p>若用户授权,github会带code callback至配置的后端回调地址</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://xietiandi.tech/oauth2/authorize/callback?code=b00925eb6e607dca3e77</span><br></pre></td></tr></table></figure></li>\n<li><p>后端此时可以根据此code向github换取access_token, postman为例</p>\n</li>\n</ol>\n<img src=\"/2023/09/12/oauth2/github_ac.png\" class=\"\" title=\"ac\">\n\n<ol start=\"6\">\n<li>后端可以再用access_token请求用户的github相关资源, postman为例</li>\n</ol>\n<img src=\"/2023/09/12/oauth2/github_api.png\" class=\"\" title=\"api\">\n\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"一、oauth2-0流程-amp-github-oauth2-App-registration\"><a href=\"#一、oauth2-0流程-amp-github-oauth2-App-registration\" class=\"headerlink\" title=\"一、oauth2.0流程 &amp; github oauth2 App registration\"></a>一、oauth2.0流程 &amp; github oauth2 App registration</h2><p>授权码(code)模式是OAuth2目前最安全最复杂的授权流程, 详细流程可以看下图:</p>\n<img src=\"/2023/09/12/oauth2/flow.webp\" class=\"\" title=\"基本流程\">\n\n<h2 id=\"二、github-oauth\"><a href=\"#二、github-oauth\" class=\"headerlink\" title=\"二、github oauth\"></a>二、github oauth</h2><ol>\n<li>账号下注册github App</li>\n</ol>\n<img src=\"/2023/09/12/oauth2/github_new_app.png\" class=\"\" title=\"注册\">\n\n<ol start=\"2\">\n<li>注册时填写callback url, 并记录好生成的 clientId &amp; secret</li>\n</ol>\n<img src=\"/2023/09/12/oauth2/github_registered.png\" class=\"\" title=\"registered\">\n\n<img src=\"/2023/09/12/oauth2/github_callback.png\" class=\"\" title=\"callback\">\n\n<ol start=\"3\">\n<li>在需要oauth2登录github时redirect至该App</li>\n</ol>\n<img src=\"/2023/09/12/oauth2/github_oauth.png\" class=\"\" title=\"oauth2\">\n\n<ol start=\"4\">\n<li><p>若用户授权,github会带code callback至配置的后端回调地址</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://xietiandi.tech/oauth2/authorize/callback?code=b00925eb6e607dca3e77</span><br></pre></td></tr></table></figure></li>\n<li><p>后端此时可以根据此code向github换取access_token, postman为例</p>\n</li>\n</ol>\n<img src=\"/2023/09/12/oauth2/github_ac.png\" class=\"\" title=\"ac\">\n\n<ol start=\"6\">\n<li>后端可以再用access_token请求用户的github相关资源, postman为例</li>\n</ol>\n<img src=\"/2023/09/12/oauth2/github_api.png\" class=\"\" title=\"api\">\n\n"},{"title":"manus-study","date":"2025-03-26T02:27:33.000Z","_content":"\n# Manus及相关技术栈\n\n### manus\n\n#### 官方示例\n\n[manus.im](https://manus.im/)\n\n**ubuntu@sanbox虚拟机**\n\n**Terminal**: execute_command\n\n![](./2025-03-26-14-20-28-image.png)\n\n**File Editor**: create_file, edit_file\n\n![](./2025-03-26-14-22-24-image.png)\n\n**Browser**: browse_file, view_page(需要vllm), scroll_up, scroll_down\n\n![](./2025-03-26-17-13-21-image.png)\n\n**用户打断**，新增了几个简历 , 之前制定的 todo.md 内容会新增\n\n![](./2025-03-26-17-14-54-image.png)\n\n**用户要求** 将结果写入excel，agent编写代码实现\n\nexecute_command(pip instatll dependencies) + write_file(python script) + execute_command(python xxx.py)\n\n![](./2025-03-26-17-28-45-image.png)\n\n最终交付了excel xlsx文件\n\n#### 其他案例replays\n\n✅ [Comprehensive Tesla Stock Analysis and Investment Insights](https://manus.im/share/xFgpHb15vKqfRPWIs3JJPJ?replay=1)\n\n❌ [Super Mario Game in Minecraft Style](https://manus.im/share/nrEydgtF8bLZFeDI8mPpUL?replay=1)\n\n#### 攻击破解\n\n<img title=\"\" src=\"./2025-03-27-15-08-32-image.png\" alt=\"\" width=\"377\">\n\nprompt破解：[Manus tools and prompts · GitHub](https://gist.github.com/jlia0/db0a9695b3ca7609c9b1a08dcbf872c9) \n\n虚拟机文件破解：[manus-open(manus sandbox) · Github](https://github.com/whit3rabbit/manus-open)  [Replay: Check Files Under /opt/.manus Path - Manus](https://manus.im/share/lLR5uWIR5Im3k9FCktVu0k?replay=1)\n\n相关资料：[分析](https://cn-sec.com/archives/3845527.html)\n\n![](./2025-03-27-14-05-43-image.png)\n\n### 相关开源项目\n\n[Building Effective AI Agents \\ Anthropic 对Agent的定义](https://www.anthropic.com/engineering/building-effective-agents)\n\n<img title=\"\" src=\"./2025-03-28-09-07-01-image.png\" alt=\"\" width=\"443\">\n\n#### OpenHands(OpenDevin)\n\n[GitHub - All-Hands-AI/OpenHands: 🙌 OpenHands: Code Less, Make More](https://github.com/All-Hands-AI/OpenHands/tree/main)\n\n![](./2025-03-27-11-34-31-image.png)\n\n<img title=\"\" src=\"./2025-03-27-14-10-23-image.png\" alt=\"\" width=\"324\">\n\n#### OpenManus\n\n[👋 OpenManus 40k star](https://github.com/mannaandpoem/OpenManus)\n\ngoogle_search搜索引擎 + browser-use浏览器 + python exec代码执行 + subprocess bash执行 + 基础文件操作 \n\n<img src=\"./2025-03-27-18-16-45-image.png\" title=\"\" alt=\"\" width=\"210\">\n\nManusAgent -> ToolCallAgent -> ReActAgent \n\n**测试prompt**：打开Bing搜索 搜索一下一招大模型的信息，多看几篇网页，总结一下重要信息\n\nmodel: google/gemini-2.0-pro-exp-02-05\n\n```json\n{\n  \"messages\": [\n    {\n      \"role\": \"system\",\n      \"content\": \"You are OpenManus, an all-capable AI assistant, aimed at solving any task presented by the user. You have various tools at your disposal that you can call upon to efficiently complete complex requests. Whether it's programming, information retrieval, file processing, or web browsing, you can handle it all.\"\n    },\n    {\n      \"role\": \"user\",\n      \"content\": \"打开Bing搜索 搜索一下一招大模型的信息，多看几篇网页，总结一下重要信息\"\n    },\n    {\n      \"role\": \"user\",\n      \"content\": \"You can interact with the computer using PythonExecute, save important content and information files through FileSaver, open browsers with BrowserUseTool, and retrieve information using BingSearch.\\n\\nPythonExecute: Execute Python code to interact with the computer system, data processing, automation tasks, etc.\\n\\nFileSaver: Save files locally, such as txt, py, html, etc.\\n\\nBrowserUseTool: Open, browse, and use web browsers.If you open a local HTML file, you must provide the absolute path to the file.\\n\\nBingSearch: Perform web information retrieval, and return ref links, you must use BrowserUseTool to fetch information from these links.\\n\\nBased on user needs, proactively select the most appropriate tool or combination of tools. For complex tasks, you can break down the problem and use different tools step by step to solve it. After using each tool, clearly explain the execution results and suggest the next steps.\\n\"\n    },\n    {\n      \"role\": \"assistant\",\n      \"content\": \"Okay, I will start by searching for information about \\\"一招大模型\\\" using Bing Search. Then, I will browse the search results and summarize the important information.\\n\\n\\n\",\n      \"tool_calls\": [\n        {\n          \"id\": \"tool_0_bing_search\",\n          \"type\": \"function\",\n          \"function\": {\n            \"name\": \"bing_search\",\n            \"arguments\": \"{\\\"num_results\\\":5,\\\"query\\\":\\\"一招大模型\\\"}\"\n          }\n        }\n      ]\n    },\n    {\n      \"role\": \"tool\",\n      \"content\": \"Observed output of cmd `bing_search` executed:\\n['https://cj.sina.com.cn/articles/view/5816954579/15ab7aed301901e374', 'https://www.modelscope.cn/models/CMB_AILab/YiZhao-12B-Chat/summary', 'https://finance.sina.cn/2025-01-03/detail-inecsvux6431783.d.html', 'https://finance.sina.com.cn/tob/2024-12-11/doc-inczafmv0853031.shtml', 'https://baijiahao.baidu.com/s?id=1818122776352809538']\",\n      \"name\": \"bing_search\",\n      \"tool_call_id\": \"tool_0_bing_search\"\n    },\n    {\n      \"role\": \"user\",\n      \"content\": \"You can interact with the computer using PythonExecute, save important content and information files through FileSaver, open browsers with BrowserUseTool, and retrieve information using BingSearch.\\n\\nPythonExecute: Execute Python code to interact with the computer system, data processing, automation tasks, etc.\\n\\nFileSaver: Save files locally, such as txt, py, html, etc.\\n\\nBrowserUseTool: Open, browse, and use web browsers.If you open a local HTML file, you must provide the absolute path to the file.\\n\\nBingSearch: Perform web information retrieval, and return ref links, you must use BrowserUseTool to fetch information from these links.\\n\\nBased on user needs, proactively select the most appropriate tool or combination of tools. For complex tasks, you can break down the problem and use different tools step by step to solve it. After using each tool, clearly explain the execution results and suggest the next steps.\\n\"\n    },\n    {\n      \"role\": \"assistant\",\n      \"content\": \"Now I will browse the search results to gather information. I will start with the first link.\\n\",\n      \"tool_calls\": [\n        {\n          \"id\": \"tool_0_browser_use\",\n          \"type\": \"function\",\n          \"function\": {\n            \"name\": \"browser_use\",\n            \"arguments\": \"{\\\"url\\\":\\\"https://cj.sina.com.cn/articles/view/5816954579/15ab7aed301901e374\\\",\\\"action\\\":\\\"navigate\\\"}\"\n          }\n        }\n      ]\n    },\n    {\n      \"role\": \"tool\",\n      \"content\": \"Observed output of cmd `browser_use` executed:\\nNavigated to https://cj.sina.com.cn/articles/view/5816954579/15ab7aed301901e374\",\n      \"name\": \"browser_use\",\n      \"tool_call_id\": \"tool_0_browser_use\"\n    },\n    {\n      \"role\": \"user\",\n      \"content\": \"You can interact with the computer using PythonExecute, save important content and information files through FileSaver, open browsers with BrowserUseTool, and retrieve information using BingSearch.\\n\\nPythonExecute: Execute Python code to interact with the computer system, data processing, automation tasks, etc.\\n\\nFileSaver: Save files locally, such as txt, py, html, etc.\\n\\nBrowserUseTool: Open, browse, and use web browsers.If you open a local HTML file, you must provide the absolute path to the file.\\n\\nBingSearch: Perform web information retrieval, and return ref links, you must use BrowserUseTool to fetch information from these links.\\n\\nBased on user needs, proactively select the most appropriate tool or combination of tools. For complex tasks, you can break down the problem and use different tools step by step to solve it. After using each tool, clearly explain the execution results and suggest the next steps.\\n\"\n    },\n    {\n      \"role\": \"assistant\",\n      \"content\": \"Now I will get the text content of the page.\\n\",\n      \"tool_calls\": [\n        {\n          \"id\": \"tool_0_browser_use\",\n          \"type\": \"function\",\n          \"function\": {\n            \"name\": \"browser_use\",\n            \"arguments\": \"{\\\"action\\\":\\\"get_text\\\"}\"\n          }\n        }\n      ]\n    },\n    {\n      \"role\": \"tool\",\n      \"content\": \"Observed output of cmd `browser_use` executed:\\n注册\\n登录\\n新浪财经APP\\n宏观经济\\nA股\\n港股\\n美股\\n基金\\n理财\\n黄金\\n期货\\n能源\\n互联网金融\\n房地产\\n更多\\n招行有“一招（YiZhao）”\\n2024年12月12日 08:01 支付之家网\\n语音播报\\n缩小字体\\n放大字体\\n微博\\n微信\\n分享\\n0\\n\\n在快速发展的数字化浪潮中，银行业正面临着一次前所未有的变革。\\n\\n近日，招商银行申请注册了“一招(YiZhao)大模型”和“招商银行一招(YiZhao)大模型”商标，这一举动不仅让人对招行的科技布局充满了期待，也透露出银行在人工智能（AI）领域的深远布局。这一商标涉及多个国际分类领域，包括广告销售、网站服务、科学仪器等，预示着招行可能会推出更多基于AI大模型技术的创新产品或服务。\\n\\n招行作为金融行业的科技创新先锋，一直以来都在数字化转型方面走在行业的前列。从推出“一卡通”到开发智能客服“招小宝”，再到利用区块链技术打造金融服务平台，招行始终致力于提升客户体验、优化服务效率。\\n\\n如今，招行提出的“一招”大模型，不仅是一次技术创新，更是对银行业服务模式的一次大胆创新，它标志着银行行业将与人工智能深度融合，进入一个全新的智能化服务时代。\\n\\n大模型与金融科技的深度融合\\n\\n以ChatGPT为代表的大模型技术，展示了强大的自然语言处理与生成能力，其应用已拓展至教育、医疗、法律等多个领域。然而，银行业作为一个数据密集且高度专业化的行业，对大模型提出了更高的要求：不仅需要对行业术语、法律法规以及复杂的客户需求进行精确理解，还需要在服务个性化、运营自动化和风险控制等方面提供专业的解决方案。\\n\\n1. 从通用模型到行业模型\\n\\n虽然像ChatGPT这样的通用模型可以处理广泛的问题，但其在金融场景中的表现需要进一步优化。例如，银行客服需要处理精准的账户查询，投资顾问需要结合客户的财务数据和市场走势提供个性化建议。这些需求要求大模型具备更强的专业化和场景化能力。\\n\\n2. 金融行业的智慧化转型\\n\\n银行业的数字化转型已迈入深水区，未来的竞争核心在于智慧化服务。大模型不仅可以作为客户的智能助手，为其提供洞察性的理财建议；也可以作为员工的数字化伙伴，帮助其提升工作效率、优化决策过程。\\n\\n招商银行信息技术部副总经理俞吴杰透露，针对AI与大语言模型，目前招行的重点在于智算平台的建设。“原来的服务器集群叫通算平台，和大模型相关的叫智算平台。智算平台既包含招行的训练平台，也包括推理平台。”他提到，招行探索大模型的目标不是建立通用模型，而是在金融行业建设垂直领域的大模型。\\n\\n招行的创新不仅局限于大模型的应用，还深入探索了低代码平台与大模型的结合。低代码开发可以大幅降低开发门槛，让业务用户也能参与到系统开发中来。而大模型的引入，使得低代码开发过程变得更加高效和智能。\\n\\n招商银行自2019年启动了企业级低代码开发平台的建设，五年来，低代码平台已成为业务系统开发的重要基础，支持零代码和低代码两种开发模式。尤其在2023年，招行进一步探索了低代码与大模型的融合，提升了开发者的体验，推动了银行业务的科技平民化。\\n\\n大模型驱动的银行业智慧化转型\\n\\n银行业的竞争日益激烈，未来的核心竞争力将在于智慧化服务。大模型技术不仅仅是在后台支持银行的智能化运作，更是在客户交互、金融服务等方面发挥着重要作用。\\n\\n在银行业中，大模型技术的落地应用正在重塑行业生态，其核心场景包括：\\n\\n1. 智能客服：更主动的客户体验\\n\\n大模型支持从被动响应向主动交互转变。传统客服主要解答客户的固定问题，而大模型赋能下的智能客服可以实时分析客户意图，提供个性化建议。例如，在客户咨询投资时，客服不仅能快速匹配合适的理财产品，还能生成详细的市场分析和风险评估。\\n\\n2. 风险控制：实时监测与动态优化\\n\\n金融风险管理是银行的核心业务之一。大模型通过对海量交易数据的实时分析，能够迅速识别异常行为，提高欺诈检测的精度。同时，它还可以结合外部政策、经济数据，动态调整风控模型，为银行提供更可靠的风险管理支持。\\n\\n3. 个性化投顾：精准洞察客户需求\\n\\n传统的理财服务往往以人工顾问为主，但其覆盖面和效率有限。大模型可以分析客户的财务状况、风险偏好以及历史行为数据，生成个性化的投资建议，从而覆盖更多长尾客户，提升服务普惠性。\\n\\n4. 内部流程优化：高效协同与智能辅助\\n\\n银行内部流程复杂，例如贷款审批、合同审阅等，通常需要耗费大量时间。大模型可以实现这些流程的自动化处理，不仅节约人力成本，还能大幅提高效率。例如，它可以在合同审阅中快速标记风险条款，并给出修改建议。\\n\\n5. 合规性与透明度：监管与服务的双赢\\n\\n金融行业的高度合规性要求对技术提出了更高标准。大模型可以实时监控业务流程，确保操作符合监管要求。同时，它还能生成易于理解的报告，帮助客户更清楚地了解自身的金融行为和合规情况。\\n\\n招行“一招”的潜力与战略意义\\n\\n此次“一招”大模型商标的申请，展示了招行在数字化与智能化转型上的战略决心。结合其多年积累的技术优势和场景深耕，“一招”有望成为银行业大模型应用的标杆。\\n\\n1. 数据、技术与场景的深度融合\\n\\n招行拥有丰富的客户数据和复杂的业务场景，这为训练和优化大模型提供了强大的基础。通过将技术与实际业务深度结合，招行能够开发出更贴近客户需求、更具竞争力的智能服务。\\n\\n2. 从银行服务到金融生态的扩展\\n\\n“一招”大模型的潜力不仅限于银行内部业务，还可能扩展到更广阔的金融生态。例如，通过开放接口，与中小企业和金融科技公司合作，提供智能风控、自动化运营等服务，助力整个行业的数字化升级。\\n\\n3. 智能化驱动的服务升级\\n\\n从“一卡通”到“掌上生活”APP，招行一直致力于提升客户体验。“一招”大模型的推出，将进一步推动银行服务从标准化向个性化、从单向服务向双向交互转型，为客户带来更加高效、贴心的金融服务。\\n\\n挑战与机遇：技术落地的关键问题\\n\\n招行在低代码与大模型领域的创新实践，标志着其数字化转型进程中的重要一步。然而，尽管大模型在银行业的应用前景广阔，但其实际落地仍面临一些挑战：\\n\\n数据安全与隐私保护\\n\\n银行掌握着大量敏感数据，大模型的开发和使用需要确保信息的安全性与合规性，避免客户隐私泄露。\\n\\n模型的可解释性与透明性\\n\\n在金融场景中，决策结果必须具备高可解释性，既要让客户信服，也要满足监管要求。这对大模型的技术设计提出了更高的要求。\\n\\n技术迭代与生态协同\\n\\n大模型技术发展迅速，银行需要保持技术敏锐度，同时建立与外部技术生态的良好协同，以实现持续的创新与突破。\\n\\n尽管面临挑战，招行凭借其在技术上的深厚积累，已经在人工智能、大模型和低代码开发方面积累了宝贵经验，未来将在智能化服务、金融生态的建设上继续推动行业的革新。\\n\\n“一招”大模型的商标申请，不仅标志着招行在人工智能领域迈出了重要一步，也揭示了未来银行业智慧化服务的趋势：以技术为驱动，从底层重塑客户体验和运营模式。\\n\\n在这个技术与金融深度融合的时代，招行以“一招”出击，向行业展示了金融科技创新的无限可能。未来，我们期待看到招行将这一“妙招”变为实招，助力客户与行业在智能时代中共创辉煌。\\n\\n注：本文为支付之家网投稿，作者系业内从业人员，文中观点仅代表作者个人观点\\n\\n0条评论|0人参与\\n网友评论\\n登录|注册\\n发布\\n相关新闻\\n加载中 \\n头条号入驻\\n支付之家网\\n支付之家网(ZFZJ.CN)官方头条号！\\n大阪严禁老人在ATM机前打电话丨试点向移动支付平台开放信用监管数据\\n今日截止，国资支付牌照挂牌转让！\\n央视曝光，2家支付机构被“另案处理”！\\n财经自媒体联盟\\n今日推荐\\n优秀作者\\n看点月榜\\nCEO下了飞机就来谈合作！为何外企纷纷看多中国？｜宅男财经\\n\\n中新经纬\\n\\n实测完DeepSeek发布的新模型，我觉得AI编程的全民普惠时刻\\n\\n数字生命卡兹克\\n\\n疯狂小杨哥要回归了？三只羊公司累计赔付近三千万 具备恢复经营条件\\n\\n雷达财经\\n\\n阿里蔡崇信：民企座谈会被低估了，人工智能市场10万亿美金\\n\\n盈利靠“节衣缩食”，虎牙的日子越来越难过了\\n\\n互联网分析师于斌\\n\\n新浪财经头条意见反馈留言板\\n\\n4000520066 欢迎批评指正\\n\\n关于头条 | 如何入驻 | 发稿平台 | 奖励机制 版权声明 | 用户协议 | 帮助中心\\nCopyright © 1996-2019 SINA Corporation\\nAll Rights Reserved 新浪公司 版权所有\\n新浪首页\\n语音播报\\n相关新闻\\n返回顶部\",\n      \"name\": \"browser_use\",\n      \"tool_call_id\": \"tool_0_browser_use\"\n    },\n    {\n      \"role\": \"user\",\n      \"content\": \"You can interact with the computer using PythonExecute, save important content and information files through FileSaver, open browsers with BrowserUseTool, and retrieve information using BingSearch.\\n\\nPythonExecute: Execute Python code to interact with the computer system, data processing, automation tasks, etc.\\n\\nFileSaver: Save files locally, such as txt, py, html, etc.\\n\\nBrowserUseTool: Open, browse, and use web browsers.If you open a local HTML file, you must provide the absolute path to the file.\\n\\nBingSearch: Perform web information retrieval, and return ref links, you must use BrowserUseTool to fetch information from these links.\\n\\nBased on user needs, proactively select the most appropriate tool or combination of tools. For complex tasks, you can break down the problem and use different tools step by step to solve it. After using each tool, clearly explain the execution results and suggest the next steps.\\n\"\n    },\n    {\n      \"role\": \"assistant\",\n      \"content\": \"The text content from the first search result is now available. It appears to be an article about \\\"一招(YiZhao)大模型\\\" from a financial perspective, specifically focusing on the application by China Merchants Bank (招商银行).\\n\\nHere's a summary of the key information:\\n\\n*   **招商银行 (China Merchants Bank) is developing an AI model called \\\"一招(YiZhao)\\\"**: They have applied for trademarks related to this model.\\n*   **Focus on Financial Applications**: The model is intended for use in various financial services, including customer service, risk control, and personalized investment advice.\\n*   **Integration with Low-Code Development**:  招商银行 is also integrating the model with low-code development platforms to improve efficiency.\\n*   **Benefits**: The article highlights potential benefits such as improved customer experience, operational efficiency, and risk management.\\n*   **Challenges**: The article also mentions challenges like data security, model explainability, and the need for continuous technological advancements.\\n\\nNow, I will proceed to the second search result to gather more information.\\n\",\n      \"tool_calls\": [\n        {\n          \"id\": \"tool_0_browser_use\",\n          \"type\": \"function\",\n          \"function\": {\n            \"name\": \"browser_use\",\n            \"arguments\": \"{\\\"url\\\":\\\"https://www.modelscope.cn/models/CMB_AILab/YiZhao-12B-Chat/summary\\\",\\\"action\\\":\\\"navigate\\\"}\"\n          }\n        }\n      ]\n    },\n    {\n      \"role\": \"tool\",\n      \"content\": \"Observed output of cmd `browser_use` executed:\\nError: Browser action 'navigate' failed: Page.goto: Timeout 30000ms exceeded.\\nCall log:\\n  - navigating to \\\"https://www.modelscope.cn/models/CMB_AILab/YiZhao-12B-Chat/summary\\\", waiting until \\\"load\\\"\\n\",\n      \"name\": \"browser_use\",\n      \"tool_call_id\": \"tool_0_browser_use\"\n    },\n    {\n      \"role\": \"user\",\n      \"content\": \"You can interact with the computer using PythonExecute, save important content and information files through FileSaver, open browsers with BrowserUseTool, and retrieve information using BingSearch.\\n\\nPythonExecute: Execute Python code to interact with the computer system, data processing, automation tasks, etc.\\n\\nFileSaver: Save files locally, such as txt, py, html, etc.\\n\\nBrowserUseTool: Open, browse, and use web browsers.If you open a local HTML file, you must provide the absolute path to the file.\\n\\nBingSearch: Perform web information retrieval, and return ref links, you must use BrowserUseTool to fetch information from these links.\\n\\nBased on user needs, proactively select the most appropriate tool or combination of tools. For complex tasks, you can break down the problem and use different tools step by step to solve it. After using each tool, clearly explain the execution results and suggest the next steps.\\n\"\n    },\n    {\n      \"role\": \"assistant\",\n      \"content\": \"The attempt to navigate to the second URL timed out. I will try again.\\n\",\n      \"tool_calls\": [\n        {\n          \"id\": \"tool_0_browser_use\",\n          \"type\": \"function\",\n          \"function\": {\n            \"name\": \"browser_use\",\n            \"arguments\": \"{\\\"url\\\":\\\"https://www.modelscope.cn/models/CMB_AILab/YiZhao-12B-Chat/summary\\\",\\\"action\\\":\\\"navigate\\\"}\"\n          }\n        }\n      ]\n    },\n    {\n      \"role\": \"tool\",\n      \"content\": \"Observed output of cmd `browser_use` executed:\\nNavigated to https://www.modelscope.cn/models/CMB_AILab/YiZhao-12B-Chat/summary\",\n      \"name\": \"browser_use\",\n      \"tool_call_id\": \"tool_0_browser_use\"\n    },\n    {\n      \"role\": \"user\",\n      \"content\": \"You can interact with the computer using PythonExecute, save important content and information files through FileSaver, open browsers with BrowserUseTool, and retrieve information using BingSearch.\\n\\nPythonExecute: Execute Python code to interact with the computer system, data processing, automation tasks, etc.\\n\\nFileSaver: Save files locally, such as txt, py, html, etc.\\n\\nBrowserUseTool: Open, browse, and use web browsers.If you open a local HTML file, you must provide the absolute path to the file.\\n\\nBingSearch: Perform web information retrieval, and return ref links, you must use BrowserUseTool to fetch information from these links.\\n\\nBased on user needs, proactively select the most appropriate tool or combination of tools. For complex tasks, you can break down the problem and use different tools step by step to solve it. After using each tool, clearly explain the execution results and suggest the next steps.\\n\"\n    },\n    {\n      \"role\": \"assistant\",\n      \"content\": \"Now I will get the text content of the page.\\n\\n\",\n      \"tool_calls\": [\n        {\n          \"id\": \"tool_0_browser_use\",\n          \"type\": \"function\",\n          \"function\": {\n            \"name\": \"browser_use\",\n            \"arguments\": \"{\\\"action\\\":\\\"get_text\\\"}\"\n          }\n        }\n      ]\n    },\n    {\n      \"role\": \"tool\",\n      \"content\": \"Observed output of cmd `browser_use` executed:\\n首页\\n模型库\\n数据集\\n创空间\\nAIGC专区\\n文档中心\\n社区\\nGitHub\\n登录 / 注册\\n一招-12B-Chat\\nCMB_AILab/YiZhao-12B-Chat\\nYiZhao\\n@招商银行人工智能实验室提供64下载2025-01-14更新\\nNotebook快速开发\\n喜欢\\n加入合集\\n模型介绍\\n模型文件\\n交流反馈3\\n一招（YiZhao)使用指南\\n\\n大模型金融能力榜单 • 模型文件 • 开源数据\\n\\n目录\\n模型介绍\\n效果评测\\n快速开始\\n声明与协议\\n最新动态\\n2024年12月10日 开源2TB高质量多模态的大模型训练数据集\\n模型介绍\\n\\n一招（YiZhao)是招商银行联合华为、智谱AI，在全国产的设备与训练框架下训练形成的金融领域大语言模型系列。我们首先在大规模高质量数据上进行预训练，再通过高质量金融数据进行后期微调（SFT），最后通过直接偏好优化（DPO）进一步优化模型，最终训练出了YiZhao-12B-Chat。YiZhao-12B-Chat具备自然语言理解、文本生成、舆情事件抽取、工具使用、对话互动等多种功能。YiZhao-12B-Chat是一个专为金融领域设计的 120亿参数大型语言模型，支持32K上下文长度。 主要特点包括：\\n\\n对海量通用语料与金融语料进行了多维度数据清洗与筛选，保证训练数据的数量和质量。\\n\\nYiZhao-12B-Chat是基于GLM（General Language Model）架构的中英双语对话模型，具有120亿参数，对问答和对话场景进行了优化。\\n\\nYiZhao-12B-Chat完全基于国产算力和国产深度学习框架MindSpore进行训练，算力和算法框架更自主可控。\\n\\n这款模型在云端私有化部署后，可以为企业和个人提供高效、灵活的智能对话解决方案。\\n\\n下载链接：\\n\\n社区\\t下载地址\\n魔搭社区（mindspore）\\thttps://www.modelscope.cn/models/CMB_AILab/YiZhao-12B-Chat/\\n魔搭社区（safetensor）\\thttps://modelscope.cn/models/CMB_AILab/YiZhao-12B-Chat-HF\\n魔乐社区 （mindspore）\\thttps://modelers.cn/models/CMB_AI_Lab/YiZhao-12B-Chat/\\n码云\\thttps://gitee.com/mindspore/mindformers/tree/dev/research/yizhao\\n效果评测\\n\\n效果评测包括通用能力评测和金融领域评测。模型在保持通用能力的基础上进一步提升了金融领域能力。\\n\\n1. 通用评测\\n\\n在通用领域评测中，我们选择当下主流的几类客观评测基准，见下表：\\n\\n能力\\t任务\\t描述\\n逻辑推理\\tARC Challenge\\tARC问题需要多种类型的知识与推理，包括定义、基本事实和属性、结构、过程与因果、目的论、代数、实验、空间/运动学、类比等，ARC问题集包含7787个自然科学问题\\n中文知识\\tCMMLU\\t67个学科中文考试题\\n数学能力\\tGSM8K\\t8.5k个样例，数学推理能力\\n通用知识\\tMMLU\\tMMLU 是一个涵盖STEM、人文学科、社会科学等57个学科领域(例如：数学、法律、伦理等)的评测基准，旨在考察大语言模型将知识运用于问题解决的能力\\n指令遵从\\tIFEval\\t确定了25种可验证的指令类型，500个包含一个或多个可验证指令的提示（prompts）\\n测试结果如下：\\n模型\\t逻辑推理\\t中文知识\\t数学能力\\t通用知识\\t指令遵从\\n\\tarc_challenge\\tcmmlu\\tgsm8k\\tmmlu\\tifeval\\n一招-12B-Chat\\t0.9331\\t0.7158\\t0.8993\\t0.7192\\t0.5432\\n小结：\\n\\nYiZhao-12B在通用评测集方面均有出色表现。\\n\\nYiZhao-12B的预训练方案并没有牺牲过多模型通用能力，而且增量训练数据中的中文金融数据，也一定程度地增强了模型的逻辑推理、中文、数学等能力。\\n\\n2. 金融评测\\n\\n金融评测主要包括以下三个测试：\\n\\n任务\\t描述\\nCCKS-IJCKG：DFMEB\\t为了推动LLM在数字金融领域的发展，并解决实际金融业务问题。招商银行联合中科院自动化所、科大讯飞股份有限公司，结合实际生产场景，推出数字金融领域评测基准（Digital Finance Model Evaluation Benchmark，DFMEB）。该评测基准包含六大场景（知识问答、文本理解、内容生成、逻辑推理、安全合规、AI智能体），涵盖69种金融任务，有利于帮助开源社区和业界快速评测公开或者自研LLM。\\nCFBenchmark-OpenFinData\\t“书生•济世”中文金融评测基准（CFBenchmark）基础版本由CFBenchmark-Basic（全部为主观题，不参与测评）和CFBenchmark-OpenFinData两部分数据组成。OpenFinData是由东方财富与上海人工智能实验室联合发布的开源金融评测数据集。该数据集代表了最真实的产业场景需求，是目前场景最全、专业性最深的金融评测数据集。它基于东方财富实际金融业务的多样化丰富场景，旨在为金融科技领域的研究者和开发者提供一个高质量的数据资源。\\nFinancelQ\\tFinanceIQ是一个专业的金融领域评测集，其涵盖了10个金融大类及36个金融小类，总计7173个单项选择题，某种程度上可客观反应模型的金融能力。\\n测试结果如下：\\n模型\\tCCKS-IJCKG：DFMEB\\tCFBenchmark-OpenFinData\\tFinancelQ\\n一招-12B-Chat\\t0.8218\\t0.8798\\t0.6867\\n小结：\\n\\nYiZhao-12B-Chat在金融测评方面表现优异。\\n\\nYiZhao-12B-Chat有着较强的专业知识能力，在金融分析、金融考核、金融安全合规、风险检查等多个专业领域维度有着出色的表现。\\n\\n快速开始\\n\\nYiZhao-12B-Chat模型已发布在魔搭社区、魔乐社区，请根据上述链接进行下载。下方为模型的推理部署使用方法。\\n\\n依赖软件\\n\\n下表列出了运行一招推理所需的环境和第三方依赖。\\n\\n软件名称\\t版本\\t作用\\nMindSpore\\t2.4.0\\t深度学习框架\\nMindSpore Transformers\\t1.3.0\\t大模型全流程开发套件\\nCANN\\t8.0.RC3.beta1\\t昇腾异构计算架构\\nsympy\\t1.13.3\\t三方依赖包\\nPython\\t3.10\\tMindSpore的使用依赖Python环境\\nGCC\\t7.3.0\\t用于编译MindSpore的C++编译器\\n\\n注：MindSpore官网介绍：https://www.mindspore.cn/\\n\\n安装指导\\n1. 安装CANN\\n\\n下载CANN社区版，选择8.0.RC3.beta1版本，按顺序执行：\\n\\n./Ascend-cann-toolkit_8.0.RC3_linux-aarch64.run --install --install-for-all --install-path=/usr/local/Ascend/\\n./Ascend-cann-kernels-910b_8.0.RC3_linux-aarch64.run --install --install-path=/usr/local/Ascend/\\n\\n\\n安装完毕后执行：\\n\\npip uninstall te topi hccl -y\\npip install sympy\\npip install /usr/local/Ascend/ascend-toolkit/latest/lib64/te-*-py3-none-any.whl\\npip install /usr/local/Ascend/ascend-toolkit/latest/lib64/hccl-*-py3-none-any.whl\\n\\n2. 安装MindSpore\\npip install https://ms-release.obs.cn-north-4.myhuaweicloud.com/2.4.0/MindSpore/unified/aarch64/mindspore-2.4.0-cp310-cp310-linux_aarch64.whl --trusted-host ms-release.obs.cn-north-4.myhuaweicloud.com -i https://pypi.tuna.tsinghua.edu.cn/simple\\n\\n\\n验证MindSpore与CANN是否安装成功：\\n\\nsource /usr/local/Ascend/ascend-toolkit/set_env.sh # 每次运行时都需要设置此环境变量\\npython -c \\\"import mindspore;mindspore.set_context(device_target='Ascend');mindspore.run_check()\\\"\\n\\n3. 安装MindSpore Transformers\\npip install mindformers==1.3.0\\n\\n4. 安装openmind-hub\\npip install openmind-hub  #如需自动下载，需要安装额外依赖openmind-hub\\n\\n代码示例\\n\\n此处提供一个代码示例，展示如何加载tokenizer和模型，并如何生成内容：\\n\\n\\nimport os\\nimport time\\nimport mindspore as ms\\nfrom mindformers.pipeline import pipeline\\n\\nos.environ[\\\"RUN_MODE\\\"] = \\\"predict\\\"\\nos.environ[\\\"MS_INTERNAL_DISABLE_CUSTOM_KERNEL_LIST\\\"] = \\\"PagedAttention\\\"\\nms.set_context(device_id=0, mode=0, device_target='Ascend', jit_config={'jit_level': 'O0', 'infer_boost': 'on'})\\n\\npipeline_task = pipeline(task=\\\"text_generation\\\",\\n                         model=\\\"CMB_AILab/YiZhao-12B-Chat\\\",  # model_path\\n                         framework='ms',\\n                         model_kwargs={\\\"use_past\\\": True},\\n                         trust_remote_code=True\\n                         )\\nwhile True:\\n    input_ = input(\\\"模型输入: \\\")\\n    template = f\\\"<|user|>{input_}<|assistant|>\\\"\\n\\n    pipeline_result = pipeline_task(template, do_sample=False, seed=int(time.time()))\\n    print(pipeline_result[0][\\\"text_generation_text\\\"][0].replace(f\\\"{input_}\\\", \\\"\\\", 1))\\n\\n声明与协议\\n声明\\n\\n我们在此声明，不要使用一招（YiZhao）模型及其衍生模型进行任何危害国家社会安全或违法的活动。同时，我们也要求使用者不要将一招（YiZhao）用于未经必要安全审查和备案的互联网服务。我们希望所有使用者遵守上述原则，确保科技发展在合法合规的环境下进行。\\n\\n我们已经尽我们所能，来确保模型训练过程中使用的数据及模型的合规性。然而，尽管我们已经做出了巨大的努力，但由于模型和数据的复杂性，仍有可能存在一些无法预见的问题。使用者应结合使用场景、使用目的、涉及数据敏感性、预期运行环境，进行必要的测试，了解了大模型局限性，评估潜在风险及使用大模型的合法性及适当性，采取必要的缓释措施，并履行必要的安全及合规义务。因使用一招（YiZhao）开源模型而导致的任何问题，包括但不限于数据安全问题、公共舆论风险，或模型被误导、滥用、传播或不当利用所带来的任何风险和问题，我们将不承担任何责任。\\n\\n协议\\n\\n社区使用一招（YiZhao）模型需要遵循《“一招（YiZhao）”许可协议》。\\n\\n如果使用方为非自然人实体，您需要通过以下联系邮箱ailab@cmbchina.com，提交《“一招（YiZhao）”许可协议》要求的申请材料。审核通过后，将特此授予您一个非排他性、全球性、不可转让、不可再许可、可撤销和免版税的有限许可，但仅限于被许可方内部的使用、复制、分发以及修改，并且应当遵守《“一招（YiZhao）”许可协议》。\\n\\n作者：\\n招商银行人工智能实验室\\n  \\n模型 2\\n数据集 0\\n创空间 0\\n收录本模型的合集（ 1 ）\\nAIOps\\n2025.03.20\\n3\\n0\\n\\n分享\\n\\n© 2022-2025 ModelScope.cn 版权所有\",\n      \"name\": \"browser_use\",\n      \"tool_call_id\": \"tool_0_browser_use\"\n    },\n    {\n      \"role\": \"user\",\n      \"content\": \"You can interact with the computer using PythonExecute, save important content and information files through FileSaver, open browsers with BrowserUseTool, and retrieve information using BingSearch.\\n\\nPythonExecute: Execute Python code to interact with the computer system, data processing, automation tasks, etc.\\n\\nFileSaver: Save files locally, such as txt, py, html, etc.\\n\\nBrowserUseTool: Open, browse, and use web browsers.If you open a local HTML file, you must provide the absolute path to the file.\\n\\nBingSearch: Perform web information retrieval, and return ref links, you must use BrowserUseTool to fetch information from these links.\\n\\nBased on user needs, proactively select the most appropriate tool or combination of tools. For complex tasks, you can break down the problem and use different tools step by step to solve it. After using each tool, clearly explain the execution results and suggest the next steps.\\n\"\n    }\n  ],\n  \"model\": \"google/gemini-2.0-flash-lite-preview-02-05:free\",\n  \"max_tokens\": 128000,\n  \"temperature\": 0,\n  \"tool_choice\": \"auto\",\n  \"tools\": [\n    {\n      \"type\": \"function\",\n      \"function\": {\n        \"name\": \"python_execute\",\n        \"description\": \"Executes Python code string. Note: Only print outputs are visible, function return values are not captured. Use print statements to see results.\",\n        \"parameters\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"code\": {\n              \"type\": \"string\",\n              \"description\": \"The Python code to execute.\"\n            }\n          },\n          \"required\": [\n            \"code\"\n          ]\n        }\n      }\n    },\n    {\n      \"type\": \"function\",\n      \"function\": {\n        \"name\": \"bing_search\",\n        \"description\": \"执行必应搜索并返回相关链接列表。\\n当需要获取互联网信息或英文内容时建议使用此工具。\\n工具返回与搜索查询匹配的URL列表。后续可以通过browser_use工具去进行访问URL\",\n        \"parameters\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"query\": {\n              \"type\": \"string\",\n              \"description\": \"(必填) 提交给必应的搜索关键词\"\n            },\n            \"num_results\": {\n              \"type\": \"integer\",\n              \"description\": \"(可选) 返回的搜索结果数量，默认5\",\n              \"default\": 5\n            }\n          },\n          \"required\": [\n            \"query\"\n          ]\n        }\n      }\n    }\n  ]\n}\n```\n\n#### LangManus\n\n[ 🦜🤖 LangManus 5.2k star](https://github.com/langmanus/langmanus/tree/main)\n\n基于langchain生态multiAgents实现类似功能，tavily搜索引擎 + jina爬虫 + browser-use浏览器 + pythonREPL代码执行 + subprocess bash执行 + 基础文件操作\n\n<img title=\"\" src=\"./2025-03-27-14-29-59-image.png\" alt=\"\" width=\"504\" data-align=\"left\">\n\n系统由以下智能体协同工作：\n\n1. **协调员（Coordinator）**：工作流程的入口点，处理初始交互并路由任务\n2. **规划员（Planner）**：分析任务并制定执行策略\n3. **主管（Supervisor）**：监督和管理其他智能体的执行\n4. **研究员（Researcher）**：收集和分析信息\n5. **程序员（Coder）**：负责代码生成和修改\n6. **浏览器（Browser）**：执行网页浏览和信息检索 \n7. **汇报员（Reporter）**：生成工作流结果的报告和总结\n\n实现这些agents一共只用到了以下tools\n\n<img title=\"\" src=\"./2025-03-27-14-51-50-image.png\" alt=\"\" width=\"223\" data-align=\"left\">\n\n由supervisor控制loop和结束, prompt如下\n\n```markdown\nYou are a supervisor coordinating a team of specialized workers to complete tasks. Your team consists of: [{{ TEAM_MEMBERS|join(\", \") }}].\n\nFor each user request, you will:\n\nAnalyze the request and determine which worker is best suited to handle it next\nRespond with ONLY a JSON object in the format: {\"next\": \"worker_name\"}\nReview their response and either:\nChoose the next worker if more work is needed (e.g., {\"next\": \"researcher\"})\nRespond with {\"next\": \"FINISH\"} when the task is complete\nAlways respond with a valid JSON object containing only the 'next' key and a single value: either a worker's name or 'FINISH'.\n\nTeam Members\n{% for agent in TEAM_MEMBERS %}\n\n{{agent}}: {{ TEAM_MEMBER_CONFIGRATIONS[agent][\"desc_for_llm\"] }} {% endfor %}\n```\n\n### 开源基础组件\n\n#### Browser-use\n\n[GitHub - browser-use/browser-use 🤖  49K star](https://github.com/browser-use/browser-use)\n\n🌐 Browser-use is the easiest way to connect your AI agents with the browser. 它集成了开源浏览器自动化工具playwright来实现api控制浏览器行为，并内置了一个Agent，通过react让 llm loop执行直到完成用户指令。基本用法如下\n\n```python\nfrom langchain_openai import ChatOpenAI\nfrom browser_use import Agent\nimport asyncio\nfrom dotenv import load_dotenv\nload_dotenv()\n\nasync def main():\n    agent = Agent(\n        task=\"Compare the price of gpt-4o and DeepSeek-V3\",\n        llm=ChatOpenAI(model=\"gpt-4o\"),\n        use_vision=True,  \n    )\n    await agent.run()\n\nasyncio.run(main())\n```\n\n内置的浏览器tools：\n\n```\ngo_to_url\ngo_back\nwait\nsearch_google\nclick_element\ninput_text\nswitch_tab\nopen_tab\nextract_content\nscroll_down\nscroll_up\nsend_keys\nscroll_to_text\nget_dropdown_options\nselect_dropdown_option\ndone\n```\n\nLLM实际调用日志：react过程\n\n**测试prompt**：打开Bing搜索 搜索一下一招大模型的信息，多看几篇网页，总结一下重要信息\n\nmodel: groq/deepseek-r1-distill-qwen-32b\n\n```json\n{\n  \"messages\": [\n    {\n      \"content\": \"You are an AI agent designed to automate browser tasks. Your goal is to accomplish the ultimate task following the rules.\\n\\n# Input Format\\nTask\\nPrevious steps\\nCurrent URL\\nOpen Tabs\\nInteractive Elements\\n[index]<type>text</type>\\n- index: Numeric identifier for interaction\\n- type: HTML element type (button, input, etc.)\\n- text: Element description\\nExample:\\n[33]<button>Submit Form</button>\\n\\n- Only elements with numeric indexes in [] are interactive\\n- elements without [] provide only context\\n\\n# Response Rules\\n1. RESPONSE FORMAT: You must ALWAYS respond with valid JSON in this exact format:\\n{\\\"current_state\\\": {\\\"evaluation_previous_goal\\\": \\\"Success|Failed|Unknown - Analyze the current elements and the image to check if the previous goals/actions are successful like intended by the task. Mention if something unexpected happened. Shortly state why/why not\\\",\\n\\\"memory\\\": \\\"Description of what has been done and what you need to remember. Be very specific. Count here ALWAYS how many times you have done something and how many remain. E.g. 0 out of 10 websites analyzed. Continue with abc and xyz\\\",\\n\\\"next_goal\\\": \\\"What needs to be done with the next immediate action\\\"},\\n\\\"action\\\":[{\\\"one_action_name\\\": {// action-specific parameter}}, // ... more actions in sequence]}\\n\\n2. ACTIONS: You can specify multiple actions in the list to be executed in sequence. But always specify only one action name per item. Use maximum {max_actions} actions per sequence.\\nCommon action sequences:\\n- Form filling: [{\\\"input_text\\\": {\\\"index\\\": 1, \\\"text\\\": \\\"username\\\"}}, {\\\"input_text\\\": {\\\"index\\\": 2, \\\"text\\\": \\\"password\\\"}}, {\\\"click_element\\\": {\\\"index\\\": 3}}]\\n- Navigation and extraction: [{\\\"go_to_url\\\": {\\\"url\\\": \\\"https://example.com\\\"}}, {\\\"extract_content\\\": {\\\"goal\\\": \\\"extract the names\\\"}}]\\n- Actions are executed in the given order\\n- If the page changes after an action, the sequence is interrupted and you get the new state.\\n- Only provide the action sequence until an action which changes the page state significantly.\\n- Try to be efficient, e.g. fill forms at once, or chain actions where nothing changes on the page\\n- only use multiple actions if it makes sense.\\n\\n3. ELEMENT INTERACTION:\\n- Only use indexes of the interactive elements\\n- Elements marked with \\\"[]Non-interactive text\\\" are non-interactive\\n\\n4. NAVIGATION & ERROR HANDLING:\\n- If no suitable elements exist, use other functions to complete the task\\n- If stuck, try alternative approaches - like going back to a previous page, new search, new tab etc.\\n- Handle popups/cookies by accepting or closing them\\n- Use scroll to find elements you are looking for\\n- If you want to research something, open a new tab instead of using the current tab\\n- If captcha pops up, try to solve it - else try a different approach\\n- If the page is not fully loaded, use wait action\\n\\n5. TASK COMPLETION:\\n- Use the done action as the last action as soon as the ultimate task is complete\\n- Dont use \\\"done\\\" before you are done with everything the user asked you, except you reach the last step of max_steps. \\n- If you reach your last step, use the done action even if the task is not fully finished. Provide all the information you have gathered so far. If the ultimate task is completly finished set success to true. If not everything the user asked for is completed set success in done to false!\\n- If you have to do something repeatedly for example the task says for \\\"each\\\", or \\\"for all\\\", or \\\"x times\\\", count always inside \\\"memory\\\" how many times you have done it and how many remain. Don't stop until you have completed like the task asked you. Only call done after the last step.\\n- Don't hallucinate actions\\n- Make sure you include everything you found out for the ultimate task in the done text parameter. Do not just say you are done, but include the requested information of the task. \\n\\n6. VISUAL CONTEXT:\\n- When an image is provided, use it to understand the page layout\\n- Bounding boxes with labels on their top right corner correspond to element indexes\\n\\n7. Form filling:\\n- If you fill an input field and your action sequence is interrupted, most often something changed e.g. suggestions popped up under the field.\\n\\n8. Long tasks:\\n- Keep track of the status and subresults in the memory. \\n\\n9. Extraction:\\n- If your task is to find information - call extract_content on the specific pages to get and store the information.\\nYour responses must be always JSON with the specified format. \",\n      \"role\": \"system\"\n    },\n    {\n      \"content\": \"Context for the taskAvailable actions: Complete task - with return text and if the task is finished (success=True) or not yet  completly finished (success=False), because last step is reached: \\n{done: {'text': {'type': 'string'}, 'success': {'type': 'boolean'}}}\\nSearch the query in Google in the current tab, the query should be a search query like humans search in Google, concrete and not vague or super long. More the single most important items. input example: {\\\"query\\\": \\\"your words\\\"}: \\n{search_google: {'query': {'type': 'string'}}}\\nNavigate to URL in the current tab: \\n{go_to_url: {'url': {'type': 'string'}}}\\nGo back: \\n{go_back: {}}\\nWait for x seconds default 3: \\n{wait: {'seconds': {'default': 3, 'type': 'integer'}}}\\nClick element: \\n{click_element: {'index': {'type': 'integer'}, 'xpath': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None}}}\\nInput text into a input interactive element: \\n{input_text: {'index': {'type': 'integer'}, 'text': {'type': 'string'}, 'xpath': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None}}}\\nSwitch tab: \\n{switch_tab: {'page_id': {'type': 'integer'}}}\\nOpen url in new tab: \\n{open_tab: {'url': {'type': 'string'}}}\\nExtract page content to retrieve specific information from the page, e.g. all company names, a specifc description, all information about, links with companies in structured format or simply links: \\n{extract_content: {'goal': {'type': 'string'}}}\\nScroll down the page by pixel amount - if no amount is specified, scroll down one page: \\n{scroll_down: {'amount': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None}}}\\nScroll up the page by pixel amount - if no amount is specified, scroll up one page: \\n{scroll_up: {'amount': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None}}}\\nSend strings of special keys like Escape,Backspace, Insert, PageDown, Delete, Enter, Shortcuts such as `Control+o`, `Control+Shift+T` are supported as well. This gets used in keyboard.press. : \\n{send_keys: {'keys': {'type': 'string'}}}\\nIf you dont find something which you want to interact with, scroll to it: \\n{scroll_to_text: {'text': {'type': 'string'}}}\\nGet all options from a native dropdown: \\n{get_dropdown_options: {'index': {'type': 'integer'}}}\\nSelect dropdown option for interactive element index by the text of the option you want to select: \\n{select_dropdown_option: {'index': {'type': 'integer'}, 'text': {'type': 'string'}}}Your ultimate task is: \\\"\\\"\\\"打开Bing搜索 搜索一下一招大模型的信息，多看几篇网页，总结一下重要信息\\\"\\\"\\\". If you achieved your ultimate task, stop everything and use the done action in the next step to complete the task. If not, continue as usual.Example output:Your ultimate task is: \\\"\\\"\\\"打开Bing搜索 搜索一下一招大模型的信息，多看几篇网页，总结一下重要信息\\\"\\\"\\\". If you achieved your ultimate task, stop everything and use the done action in the next step to complete the task. If not, continue as usual.Example output:Your ultimate task is: \\\"\\\"\\\"打开Bing搜索 搜索一下一招大模型的信息，多看几篇网页，总结一下重要信息\\\"\\\"\\\". If you achieved your ultimate task, stop everything and use the done action in the next step to complete the task. If not, continue as usual.Example output:Your ultimate task is: \\\"\\\"\\\"打开Bing搜索 搜索一下一招大模型的信息，多看几篇网页，总结一下重要信息\\\"\\\"\\\". If you achieved your ultimate task, stop everything and use the done action in the next step to complete the task. If not, continue as usual.Example output:\",\n      \"role\": \"user\"\n    },\n    {\n      \"content\": \"[{\\\"name\\\": \\\"AgentOutput\\\", \\\"args\\\": {\\\"current_state\\\": {\\\"evaluation_previous_goal\\\": \\\"Success - I opend the first page\\\", \\\"memory\\\": \\\"Starting with the new task. I have completed 1/10 steps\\\", \\\"next_goal\\\": \\\"Click on company a\\\"}, \\\"action\\\": [{\\\"click_element\\\": {\\\"index\\\": 0}}]}, \\\"id\\\": \\\"1\\\", \\\"type\\\": \\\"tool_call\\\"}]\",\n      \"role\": \"assistant\"\n    },\n    {\n      \"content\": \"Browser started[Your task history memory starts here]\",\n      \"role\": \"user\"\n    },\n    {\n      \"content\": \"[{\\\"name\\\": \\\"AgentOutput\\\", \\\"args\\\": {\\\"current_state\\\": {\\\"evaluation_previous_goal\\\": \\\"Unknown - Analyze the current elements and the image to understand the starting point\\\", \\\"memory\\\": \\\"Starting with the new task. I have completed 0/10 steps. Need to open Bing search and perform the search query.\\\", \\\"next_goal\\\": \\\"Navigate to Bing search\\\"}, \\\"action\\\": [{\\\"go_to_url\\\": {\\\"url\\\": \\\"https://www.bing.com\\\"}}]}, \\\"id\\\": \\\"2\\\", \\\"type\\\": \\\"tool_call\\\"}]\",\n      \"role\": \"assistant\"\n    },\n    {\n      \"content\": \"Action result: 🔗  Navigated to https://www.bing.com\",\n      \"role\": \"user\"\n    },\n    {\n      \"content\": \"[{\\\"name\\\": \\\"AgentOutput\\\", \\\"args\\\": {\\\"current_state\\\": {\\\"evaluation_previous_goal\\\": \\\"Success - Successfully navigated to Bing search page\\\", \\\"memory\\\": \\\"Starting with the new task. I have completed 1/10 steps. I have navigated to Bing search and need to perform the search query.\\\", \\\"next_goal\\\": \\\"Perform the search query for '\\\\u4e00\\\\u62db\\\\u5927\\\\u6a21\\\\u578b'\\\"}, \\\"action\\\": [{\\\"input_text\\\": {\\\"index\\\": 11, \\\"text\\\": \\\"\\\\u4e00\\\\u62db\\\\u5927\\\\u6a21\\\\u578b\\\"}}, {\\\"click_element\\\": {\\\"index\\\": 12}}, {\\\"wait\\\": {\\\"seconds\\\": 3}}]}, \\\"id\\\": \\\"3\\\", \\\"type\\\": \\\"tool_call\\\"}]\",\n      \"role\": \"assistant\"\n    },\n    {\n      \"content\": \"Action result: ⌨️  Input 一招大模型 into index 11Action result: Something new appeared after action 1 / 3\",\n      \"role\": \"user\"\n    },\n    {\n      \"content\": \"[{\\\"name\\\": \\\"AgentOutput\\\", \\\"args\\\": {\\\"current_state\\\": {\\\"evaluation_previous_goal\\\": \\\"Success - Successfully navigated to Bing search page and performed the search query.\\\", \\\"memory\\\": \\\"Starting with the new task. I have completed 1/10 steps. I have navigated to Bing search and performed the search query. Need to click on the search results to view more information.\\\", \\\"next_goal\\\": \\\"Click on the first search result to view the webpage\\\"}, \\\"action\\\": [{\\\"click_element\\\": {\\\"index\\\": 16}}, {\\\"wait\\\": {\\\"seconds\\\": 3}}, {\\\"extract_content\\\": {\\\"goal\\\": \\\"extract information about \\\\u4e00\\\\u62db\\\\u5927\\\\u6a21\\\\u578b\\\"}}]}, \\\"id\\\": \\\"4\\\", \\\"type\\\": \\\"tool_call\\\"}]\",\n      \"role\": \"assistant\"\n    },\n    {\n      \"content\": \"Action result: 🖱️  Clicked button with index 16: Action result: 🕒  Waiting for 3 secondsAction result: 📄  Extracted from page\\n: <think>\\n好，我现在需要处理用户的查询，目标是从给定的页面内容中提取关于“一招大模型”的信息，并以JSON格式返回。首先，我得仔细阅读用户提供的页面内容，理解其中的结构和信息分布。\\n\\n页面看起来像是一个搜索结果页面，包含多个搜索结果条目，每个条目都有标题、来源和简要描述。此外，还有图片搜索结果和其他相关搜索链接。我的任务是从这些内容中提取所有与“一招大模型”相关的信息。\\n\\n首先，我会浏览每个搜索结果条目，看看它们是否提到了“一招大模型”。例如，第一个结果来自新浪财经，提到招商银行提出了“一招”大模型，这是一次技术创新，也是服务模式的创新。这表明“一招大模型”是招商银行开发的，用于金融领域的AI模型。\\n\\n接下来，第二个结果是图片搜索，显示了多个相关图片，但可能对提取文本信息帮助不大，所以可以暂时忽略。第三个结果来自ModelScope社区，详细说明了“一招”大模型是由招商银行与华为、智谱AI合作开发的，使用全国产设备和框架，专注于金融领域。这部分信息非常重要，因为它提供了开发背景和合作伙伴。\\n\\n第四个到第十个结果来自不同的新闻网站，如网易、新浪财经、亿欧、搜狐和百家号，都报道了招商银行申请了“一招大模型”的商标，涉及金融创新和AI技术的应用。这些信息补充了“一招大模型”的商标注册情况和其在金融领域的应用前景。\\n\\n在提取信息时，我需要确保涵盖以下几点：\\n1. “一招大模型”的定义和用途。\\n2. 开发背景，包括合作方和开发环境。\\n3. 商标注册情况及其意义。\\n4. 该模型对金融行业的影响。\\n\\n此外，我还需要注意信息的来源是否可靠，比如是否来自官方渠道或知名新闻网站。例如，新浪财经和搜狐的报道提供了详细的背景信息，而ModelScope社区则提供了技术细节。\\n\\n在整理信息时，我会将每个关键点分类，如定义、开发背景、商标注册和影响，确保结构清晰。同时，要避免重复信息，比如多个来源都提到商标注册，但具体内容相似，可以合并描述。\\n\\n最后，我会将提取的信息组织成JSON格式，确保每个字段准确无误，并且信息全面。这样，用户就能清楚地了解“一招大模型”的各个方面，包括其开发、应用和影响。\\n</think>\\n\\n```json\\n{\\n  \\\"extracted_information\\\": [\\n    {\\n      \\\"title\\\": \\\"一招大模型\\\",\\n      \\\"description\\\": \\\"一招大模型是由招商银行股份有限公司申请注册的商标，主要用于金融领域的人工智能技术应用。该模型旨在推动银行业服务模式的创新，标志着银行行业将与人工智能深度融合，进入一个全新的智能化服务时代。\\\",\\n      \\\"source\\\": \\\"新浪财经网\\\",\\n      \\\"date\\\": \\\"2024年12月12日\\\"\\n    },\\n    {\\n      \\\"title\\\": \\\"一招大模型的商标申请\\\",\\n      \\\"description\\\": \\\"招商银行股份有限公司申请注册了“一招（YiZhao）大模型”和“招商银行一招（YiZhao）大模型”商标，国际分类为广告销售、科学仪器等。这一举措表明招商银行在人工智能领域的战略布局。\\\",\\n      \\\"source\\\": \\\"新浪财经\\\",\\n      \\\"date\\\": \\\"2024年12月11日\\\"\\n    },\\n    {\\n      \\\"title\\\": \\\"一招大模型的技术背景\\\",\\n      \\\"description\\\": \\\"一招大模型是由招商银行联合华为、智谱AI，在全国产的设备与训练框架下训练形成的金融领域大语言模型系列。该模型首先在大规模高质量数据上进行预训练，再通过高质量金融数据进行后期优化。\\\",\\n      \\\"source\\\": \\\"ModelScope 魔搭社区\\\",\\n      \\\"date\\\": \\\"2024年12月\\\"\\n    },\\n    {\\n      \\\"title\\\": \\\"一招大模型的行业影响\\\",\\n      \\\"description\\\": \\\"一招大模型的提出不仅是技术创新，更是对银行业服务模式的一次大胆创新。它标志着银行行业将与人工智能深度融合，进入一个全新的智能化服务时代。\\\",\\n      \\\"source\\\": \\\"网易\\\",\\n      \\\"date\\\": \\\"2024年12月12日\\\"\\n    },\\n    {\\n      \\\"title\\\": \\\"一招大模型的商标申请\\\",\\n      \\\"description\\\": \\\"招商银行股份有限公司申请注册了“一招大模型”及相关商标，旨在推动人工智能技术在金融领域的应用与发展。\\\",\\n      \\\"source\\\": \\\"亿欧\\\",\\n      \\\"date\\\": \\\"2024年12月11日\\\"\\n    }\\n  ],\\n  \\\"related_searches\\\": [\\n    \\\"一招大模型商标\\\",\\n    \\\"招行一招大模型\\\",\\n    \\\"招商银行一招大模型\\\",\\n    \\\"招行大模型\\\",\\n    \\\"招商银行申请大模型\\\",\\n    \\\"招商银行大模型\\\"\\n  ]\\n}\\n```\\n\\n[Task history memory ends]\\n[Current state starts here]\\nThe following is one-time information - if you need to remember it write it to memory:\\nCurrent url: https://www.bing.com/search?q=%e4%b8%80%e6%8b%9b%e5%a4%a7%e6%a8%a1%e5%9e%8b&qs=UT&pq=%e4%b8%80%e6%8b%9b%e5%a4%a7%e6%a8%a1%e5%9e%8b&sc=1-5&cvid=90B5926ACCCE4AF78697D50732768863&FORM=QBLH&sp=1&lq=0\\nAvailable tabs:\\n[TabInfo(page_id=0, url='https://www.bing.com/search?q=%e4%b8%80%e6%8b%9b%e5%a4%a7%e6%a8%a1%e5%9e%8b&qs=UT&pq=%e4%b8%80%e6%8b%9b%e5%a4%a7%e6%a8%a1%e5%9e%8b&sc=1-5&cvid=90B5926ACCCE4AF78697D50732768863&FORM=QBLH&sp=1&lq=0', title='一招大模型 - 搜索')]\\nInteractive elements from top layer of the current page inside the viewport:\\n... 26 pixels above - scroll or extract content to see more ...\\n跳至内容\\n[0]<a />\\n[1]<input 在此处输入你的搜索 — 输入时会显示搜索建议;q;一招大模型;search/>\\n[2]<div 语音搜索;button/>\\n[3]<div false;使用图像搜索;button/>\\n[4]<a “搜索”按钮/>\\n[5]<input go;搜索;submit/>\\n[6]<a />\\n[7]<input submit;登录/>\\n[8]<a Microsoft Rewards;false;button/>\\n[9]<a 设置和快速链接;false;button/>\\n[10]<a 全部/>\\n[11]<a 图片/>\\n[12]<a 视频/>\\n[13]<a 地图/>\\n[14]<a 资讯/>\\n[15]<a Dropdown Menu;button>更多/>\\n[16]<a 工具/>\\n约 1,070,000 个结果\\n[17]<div />\\n[18]<a 新浪财经网/>\\n[19]<img />\\n[20]<div https://cj.sina.com.cn › articles › view/>\\n[21]<h2 />\\n[22]<a 招行有“一招（YiZhao）” - 新浪财经网/>\\n2024年12月12日\\n· 如今，招行提出的“一招”大模型，不仅是一次技术创新，更是对银行业服务模式的一次大胆创新，它标志着银行行业将与人工智能深度融合，进入一个全新的智能化服务时代。\\n[23]<a 一招大模型的图片>一招大模型的图片\\nbing.com › images/>\\n[24]<div 单击以向右滚动;button/>\\n[25]<div listitem>finance.sina.com.cn/>\\n[26]<a 搜索 一招大模型 的图像. finance.sina.com.cn. 550 × 170 · png/>\\n[27]<img />\\n[28]<a 招商银行申请大模型商标：一招大模型_新浪财经_新浪网/>\\n[29]<div listitem>zhuanzhi.ai/>\\n[30]<a 搜索 一招大模型 的图像. www.zhuanzhi.ai. 1080 × 608 · jpeg/>\\n[31]<img />\\n[32]<a 【ChatGPT系列报告】国内大模型概览，42页ppt - 专知VIP/>\\n[33]<div listitem>sohu.com/>\\n[34]<a 搜索 一招大模型 的图像. www.sohu.com. 1273 × 806 · jpeg/>\\n[35]<img />\\n[36]<a 招商银行申请 “一招（YiZhao）大模型”商标-北京四海龙知识产权_金融_为客户提供_人工智能/>\\n招商银行申请 “一招（YiZhao）大模型”商标-北京四海龙知识产权_金融_为客户提供_人工智能\\n什么是大模型？（超详细）大模型从入门到精通，看这一篇就够了-CSDN博客\\n查看全部\\n[37]<a 查看所有图像/>\\n[38]<div />\\n[39]<a ModelScope 魔搭社区/>\\n[40]<img />\\n[41]<div https://www.modelscope.cn › models › CMB_AILab › summary/>\\n[42]<h2 />\\n[43]<a 魔搭社区/>\\n一招（YiZhao)是招商银行联合华为、智谱AI，在全国产的设备与训练框架下训练形成的金融领域大语言模型系列。 我们首先在大规模高质量数据上进行预训练，再通过高质量金融数据进行后期 …\\n[44]<div />\\n[45]<a 网易/>\\n[46]<img />\\n[47]<div https://www.163.com › dy › article/>\\n[48]<h2 />\\n[49]<a 招行有“一招（YiZhao）”|风控|金融|银行业 ... - 网易/>\\n2024年12月12日\\n· 如今，招行提出的“一招”大模型，不仅是一次技术创新，更是对银行业服务模式的一次大胆创新，它标志着银行行业将与人工智能深度融合，进入一个全新的智能化服务时代。\\n[50]<div />\\n[51]<a 新浪财经/>\\n[52]<img />\\n[53]<div https://finance.sina.com.cn › tob/>\\n[54]<h2 />\\n[55]<a 招商银行申请大模型商标：一招大模型 - 新浪财经/>\\n新浪科技讯12月11日上午消息，天眼查知识产权信息显示，近日，招商银行股份有限公司申请注册“一招（YiZhao）大模型”“招商银行一招（YiZhao）大 ...\\n[56]<div />\\n[57]<a 亿欧/>\\n[58]<img />\\n[59]<div https://www.iyiou.com › data/>\\n[60]<h2 />\\n[61]<a 招商银行申请注册“一招大模型”商标，聚焦人工智能领域发展/>\\n2024年12月11日\\n· 招商银行股份有限公司近日申请注册“一招大模型”及相关商标，旨在推动人工智能技术在金融领域的应用与发展。 近日，根据天眼查知识产权信息显示，招商银行股份有限公 …\\n[62]<div />\\n[63]<a 搜狐/>\\n[64]<img />\\n[65]<div https://www.sohu.com/>\\n[66]<h2 />\\n[67]<a 招商银行申请‘一招大模型’商标：金融创新的未来或将从此开启！/>\\n2024年12月11日\\n· 近日，招商银行股份有限公司在知识产权领域迈出了新的一步，成功申请了‘一招（YiZhao）大模型’及‘招商银行一招（YiZhao）大模型’的商标。 这一消息于12月11日披露，引 …\\n[68]<div />\\n[69]<a 百家号/>\\n[70]<img />\\n[71]<div https://baijiahao.baidu.com/>\\n[72]<h2 />\\n[73]<a 招商银行布局AI，申请“一招大模型”商标待审 - 百家号/>\\n2024年12月11日\\n· 近期，招商银行股份有限公司在知识产权保护方面有新动作，据天眼查平台披露的信息，该行已正式提交了两项商标申请，分别为“一招（YiZhao）大模型”与“招商银行一 …\\n[74]<div />\\n[75]<a 搜狐/>\\n[76]<img />\\n[77]<div https://www.sohu.com/>\\n[78]<h2 />\\n[79]<a 招商银行再出大招，申请AI商标意在金融科技新潮流_YiZhao_尖 …/>\\n[80]<div />\\n[81]<a 百家号/>\\n[82]<img />\\n[83]<div https://baijiahao.baidu.com/>\\n[84]<h2 />\\n[85]<a 招商银行申请大模型商标：一招大模型 - 百家号/>\\n[86]<div />\\n[87]<a 腾讯网/>\\n[88]<img />\\n[89]<div https://news.qq.com › rain/>\\n[90]<h2 />\\n[91]<a 招商银行注册“一招大模型”商标 - 腾讯网/>\\n[92]<a 一招大模型商标/>\\n[93]<a 招行一招大模型/>\\n[94]<a 招商银行一招大模型/>\\n[95]<a 招行大模型/>\\n[96]<a 招商银行申请大模型/>\\n[97]<a 招商银行大模型/>\\n[98]<a 招商银行大模型商标/>\\n[99]<a 招商银行商标一招/>\\n[100]<a 第 1 页>1/>\\n[101]<a 第 2 页>2/>\\n[102]<a 第 3 页>3/>\\n[103]<a 第 4 页>4/>\\n[104]<a 下一页/>\\n相关搜索\\n[105]<a 一招大模型商标/>\\n[106]<a 招行一招大模型/>\\n[107]<a 招商银行一招大模型/>\\n[108]<a 招行大模型/>\\n[109]<a 招商银行申请大模型/>\\n[110]<a 招商银行大模型/>\\n[111]<a 招商银行大模型商标/>\\n[112]<a 招商银行商标一招/>\\n[113]<a 隐私声明和 Cookie/>\\n[114]<a 法律声明/>\\n[115]<a 广告/>\\n[116]<a 关于我们的广告/>\\n[117]<a 帮助/>\\n[118]<a button>反馈/>\\n[119]<a 消费者健康隐私/>\\n... 1294 pixels below - scroll or extract content to see more ...\\nCurrent step: 4/100Current date and time: 2025-03-27 17:53\\n\",\n      \"role\": \"user\"\n    }\n  ],\n  \"model\": \"deepseek-r1-distill-qwen-32b\",\n  \"stream\": false,\n  \"temperature\": 0\n}\n```\n\n##### [microsoft/*playwright* 71k star](https://github.com/microsoft/playwright)\n\n***Playwright*** is a framework for Web Testing and Automation. It allows testing Chromium, Firefox and WebKit with a single API.\n\n提供js、python、java等sdk允许不用语言通过playwright api操作浏览器\n\n#### Computer-use\n\n##### [claude-3-5-sonnet-20241022 computer-use-demo](https://github.com/anthropics/anthropic-quickstarts/tree/main/computer-use-demo)\n\n1022发布的开源demo，已经可以完成浏览网页，亚马逊购物，画图等功能。llm支持的actions如下：\n\n<img src=\"./2025-03-27-16-12-45-image.png\" title=\"\" alt=\"\" width=\"412\">\n\ncomputer-use-demo代码中会loop调用anthropic api并执行tool action直到llm返回中不包含tool action\n\n**\"用画图画一只猫\"**\n\n![](./2025-03-27-15-45-22-image.png)\n\n##### [OpenAI Computer-use-example](https://platform.openai.com/docs/guides/tools-computer-use)\n\n支持的actions：\n\n```markdown\nscreenshot\nclick\ndouble_click\ntype\nkeypress\nmove\nscroll\nwait\ndrag\n```\n\n![Computer use diagram](https://cdn.openai.com/API/docs/images/cua_diagram.png)\n\n##### [E2B computer-use agent](https://surf.e2b.dev/)\n\n一家为AI提供云虚拟化环境的公司，用开源大模型实现了较好的效果。\n\n<img title=\"\" src=\"./2025-03-27-11-23-48-image.png\" alt=\"\" width=\"539\">\n\n##### [微软 omniParser omniTool](https://github.com/microsoft/OmniParser/)\n\n![](./2025-03-27-15-37-02-image.png)\n\n##### [OS-ATLAS: Foundation Action Model for Generalist GUI Agents](https://arxiv.org/abs/2410.23218)\n\n## MCP及Agent接入\n\n[Introduction - Model Context Protocol](https://modelcontextprotocol.io/introduction)\n\n提供一套标准协议，方便第三方能力(tools, prompts, resources等)快速接入LLM Agents\n\n![](./2025-03-28-09-16-47-image.png)\n\n#### MCP core concepts\n\n![](./2025-03-28-09-22-54-image.png)\n\nofficial java sdk \n\n![](./2025-03-28-09-01-24-image.png)\n\n#### MCP的支持及有趣案例\n\n**LLM App**：Claude destop, OpenAI desktop，Cursor, VS code Cline\n\n**开源社区**：langchain，dify\n\nMCP server案例：\n\n建模引擎：blender, unity\n\n![](./2025-03-28-13-40-50-image.png)\n\n办公类：邮件、会议等\n\n游戏类：steam, minecraft\n\n地图类：谷歌、百度、高德地图\n\nStock类：实时股价、选股\n\nIOT: HomeAssistant，智能家居\n\n#### Open-Source MCP Servers\n\n[GitHub - punkpeye/awesome-mcp-servers: A collection of MCP servers.](https://github.com/punkpeye/awesome-mcp-servers)\n\n[Open-Source MCP servers | Glama](https://glama.ai/mcp/servers)\n\n[MCP.SO](https://mcp.so/)\n\n#### Cline测试\n\nCline安装配置过程略，mcp server仅安装playwright\n\n###### 测试结果\n\ntask prompt：上网搜索一下有关一招大模型的信息，挑几篇网页详细阅读一下，整理出一篇介绍并保存到本地yizhao.md文件，注意标好引用链接地址。\n\n![](./2025-03-28-09-46-40-image.png)\n\n![](./2025-03-28-09-47-23-image.png)\n\n![](./2025-03-28-09-49-17-image.png)\n\n![](./2025-03-28-09-51-33-image.png)\n\n![](./2025-03-28-09-52-06-image.png)\n\n![](./2025-03-28-09-53-16-image.png)\n\n![](./2025-03-28-09-53-54-image.png)\n\n![](./2025-03-28-09-54-36-image.png)\n\n###### cline prompt log\n\ncline systemPrompt 12k tokens，然后loop执行action\n[prompt](./cline-exec-req.txt)\n\n##### 行内cline、mcp、大模型测试：\n\n见内网\n\n总行团队一些案例\n\n#### MCP发展\n\nlangchain社区：[MCP: Flash in the Pan or Future Standard?](https://blog.langchain.dev/mcp-fad-or-fixture/)\n```\n","source":"_posts/manus-study.md","raw":"---\ntitle: manus-study\ndate: 2025-03-26 10:27:33\ntags:\n\n---\n\n# Manus及相关技术栈\n\n### manus\n\n#### 官方示例\n\n[manus.im](https://manus.im/)\n\n**ubuntu@sanbox虚拟机**\n\n**Terminal**: execute_command\n\n![](./2025-03-26-14-20-28-image.png)\n\n**File Editor**: create_file, edit_file\n\n![](./2025-03-26-14-22-24-image.png)\n\n**Browser**: browse_file, view_page(需要vllm), scroll_up, scroll_down\n\n![](./2025-03-26-17-13-21-image.png)\n\n**用户打断**，新增了几个简历 , 之前制定的 todo.md 内容会新增\n\n![](./2025-03-26-17-14-54-image.png)\n\n**用户要求** 将结果写入excel，agent编写代码实现\n\nexecute_command(pip instatll dependencies) + write_file(python script) + execute_command(python xxx.py)\n\n![](./2025-03-26-17-28-45-image.png)\n\n最终交付了excel xlsx文件\n\n#### 其他案例replays\n\n✅ [Comprehensive Tesla Stock Analysis and Investment Insights](https://manus.im/share/xFgpHb15vKqfRPWIs3JJPJ?replay=1)\n\n❌ [Super Mario Game in Minecraft Style](https://manus.im/share/nrEydgtF8bLZFeDI8mPpUL?replay=1)\n\n#### 攻击破解\n\n<img title=\"\" src=\"./2025-03-27-15-08-32-image.png\" alt=\"\" width=\"377\">\n\nprompt破解：[Manus tools and prompts · GitHub](https://gist.github.com/jlia0/db0a9695b3ca7609c9b1a08dcbf872c9) \n\n虚拟机文件破解：[manus-open(manus sandbox) · Github](https://github.com/whit3rabbit/manus-open)  [Replay: Check Files Under /opt/.manus Path - Manus](https://manus.im/share/lLR5uWIR5Im3k9FCktVu0k?replay=1)\n\n相关资料：[分析](https://cn-sec.com/archives/3845527.html)\n\n![](./2025-03-27-14-05-43-image.png)\n\n### 相关开源项目\n\n[Building Effective AI Agents \\ Anthropic 对Agent的定义](https://www.anthropic.com/engineering/building-effective-agents)\n\n<img title=\"\" src=\"./2025-03-28-09-07-01-image.png\" alt=\"\" width=\"443\">\n\n#### OpenHands(OpenDevin)\n\n[GitHub - All-Hands-AI/OpenHands: 🙌 OpenHands: Code Less, Make More](https://github.com/All-Hands-AI/OpenHands/tree/main)\n\n![](./2025-03-27-11-34-31-image.png)\n\n<img title=\"\" src=\"./2025-03-27-14-10-23-image.png\" alt=\"\" width=\"324\">\n\n#### OpenManus\n\n[👋 OpenManus 40k star](https://github.com/mannaandpoem/OpenManus)\n\ngoogle_search搜索引擎 + browser-use浏览器 + python exec代码执行 + subprocess bash执行 + 基础文件操作 \n\n<img src=\"./2025-03-27-18-16-45-image.png\" title=\"\" alt=\"\" width=\"210\">\n\nManusAgent -> ToolCallAgent -> ReActAgent \n\n**测试prompt**：打开Bing搜索 搜索一下一招大模型的信息，多看几篇网页，总结一下重要信息\n\nmodel: google/gemini-2.0-pro-exp-02-05\n\n```json\n{\n  \"messages\": [\n    {\n      \"role\": \"system\",\n      \"content\": \"You are OpenManus, an all-capable AI assistant, aimed at solving any task presented by the user. You have various tools at your disposal that you can call upon to efficiently complete complex requests. Whether it's programming, information retrieval, file processing, or web browsing, you can handle it all.\"\n    },\n    {\n      \"role\": \"user\",\n      \"content\": \"打开Bing搜索 搜索一下一招大模型的信息，多看几篇网页，总结一下重要信息\"\n    },\n    {\n      \"role\": \"user\",\n      \"content\": \"You can interact with the computer using PythonExecute, save important content and information files through FileSaver, open browsers with BrowserUseTool, and retrieve information using BingSearch.\\n\\nPythonExecute: Execute Python code to interact with the computer system, data processing, automation tasks, etc.\\n\\nFileSaver: Save files locally, such as txt, py, html, etc.\\n\\nBrowserUseTool: Open, browse, and use web browsers.If you open a local HTML file, you must provide the absolute path to the file.\\n\\nBingSearch: Perform web information retrieval, and return ref links, you must use BrowserUseTool to fetch information from these links.\\n\\nBased on user needs, proactively select the most appropriate tool or combination of tools. For complex tasks, you can break down the problem and use different tools step by step to solve it. After using each tool, clearly explain the execution results and suggest the next steps.\\n\"\n    },\n    {\n      \"role\": \"assistant\",\n      \"content\": \"Okay, I will start by searching for information about \\\"一招大模型\\\" using Bing Search. Then, I will browse the search results and summarize the important information.\\n\\n\\n\",\n      \"tool_calls\": [\n        {\n          \"id\": \"tool_0_bing_search\",\n          \"type\": \"function\",\n          \"function\": {\n            \"name\": \"bing_search\",\n            \"arguments\": \"{\\\"num_results\\\":5,\\\"query\\\":\\\"一招大模型\\\"}\"\n          }\n        }\n      ]\n    },\n    {\n      \"role\": \"tool\",\n      \"content\": \"Observed output of cmd `bing_search` executed:\\n['https://cj.sina.com.cn/articles/view/5816954579/15ab7aed301901e374', 'https://www.modelscope.cn/models/CMB_AILab/YiZhao-12B-Chat/summary', 'https://finance.sina.cn/2025-01-03/detail-inecsvux6431783.d.html', 'https://finance.sina.com.cn/tob/2024-12-11/doc-inczafmv0853031.shtml', 'https://baijiahao.baidu.com/s?id=1818122776352809538']\",\n      \"name\": \"bing_search\",\n      \"tool_call_id\": \"tool_0_bing_search\"\n    },\n    {\n      \"role\": \"user\",\n      \"content\": \"You can interact with the computer using PythonExecute, save important content and information files through FileSaver, open browsers with BrowserUseTool, and retrieve information using BingSearch.\\n\\nPythonExecute: Execute Python code to interact with the computer system, data processing, automation tasks, etc.\\n\\nFileSaver: Save files locally, such as txt, py, html, etc.\\n\\nBrowserUseTool: Open, browse, and use web browsers.If you open a local HTML file, you must provide the absolute path to the file.\\n\\nBingSearch: Perform web information retrieval, and return ref links, you must use BrowserUseTool to fetch information from these links.\\n\\nBased on user needs, proactively select the most appropriate tool or combination of tools. For complex tasks, you can break down the problem and use different tools step by step to solve it. After using each tool, clearly explain the execution results and suggest the next steps.\\n\"\n    },\n    {\n      \"role\": \"assistant\",\n      \"content\": \"Now I will browse the search results to gather information. I will start with the first link.\\n\",\n      \"tool_calls\": [\n        {\n          \"id\": \"tool_0_browser_use\",\n          \"type\": \"function\",\n          \"function\": {\n            \"name\": \"browser_use\",\n            \"arguments\": \"{\\\"url\\\":\\\"https://cj.sina.com.cn/articles/view/5816954579/15ab7aed301901e374\\\",\\\"action\\\":\\\"navigate\\\"}\"\n          }\n        }\n      ]\n    },\n    {\n      \"role\": \"tool\",\n      \"content\": \"Observed output of cmd `browser_use` executed:\\nNavigated to https://cj.sina.com.cn/articles/view/5816954579/15ab7aed301901e374\",\n      \"name\": \"browser_use\",\n      \"tool_call_id\": \"tool_0_browser_use\"\n    },\n    {\n      \"role\": \"user\",\n      \"content\": \"You can interact with the computer using PythonExecute, save important content and information files through FileSaver, open browsers with BrowserUseTool, and retrieve information using BingSearch.\\n\\nPythonExecute: Execute Python code to interact with the computer system, data processing, automation tasks, etc.\\n\\nFileSaver: Save files locally, such as txt, py, html, etc.\\n\\nBrowserUseTool: Open, browse, and use web browsers.If you open a local HTML file, you must provide the absolute path to the file.\\n\\nBingSearch: Perform web information retrieval, and return ref links, you must use BrowserUseTool to fetch information from these links.\\n\\nBased on user needs, proactively select the most appropriate tool or combination of tools. For complex tasks, you can break down the problem and use different tools step by step to solve it. After using each tool, clearly explain the execution results and suggest the next steps.\\n\"\n    },\n    {\n      \"role\": \"assistant\",\n      \"content\": \"Now I will get the text content of the page.\\n\",\n      \"tool_calls\": [\n        {\n          \"id\": \"tool_0_browser_use\",\n          \"type\": \"function\",\n          \"function\": {\n            \"name\": \"browser_use\",\n            \"arguments\": \"{\\\"action\\\":\\\"get_text\\\"}\"\n          }\n        }\n      ]\n    },\n    {\n      \"role\": \"tool\",\n      \"content\": \"Observed output of cmd `browser_use` executed:\\n注册\\n登录\\n新浪财经APP\\n宏观经济\\nA股\\n港股\\n美股\\n基金\\n理财\\n黄金\\n期货\\n能源\\n互联网金融\\n房地产\\n更多\\n招行有“一招（YiZhao）”\\n2024年12月12日 08:01 支付之家网\\n语音播报\\n缩小字体\\n放大字体\\n微博\\n微信\\n分享\\n0\\n\\n在快速发展的数字化浪潮中，银行业正面临着一次前所未有的变革。\\n\\n近日，招商银行申请注册了“一招(YiZhao)大模型”和“招商银行一招(YiZhao)大模型”商标，这一举动不仅让人对招行的科技布局充满了期待，也透露出银行在人工智能（AI）领域的深远布局。这一商标涉及多个国际分类领域，包括广告销售、网站服务、科学仪器等，预示着招行可能会推出更多基于AI大模型技术的创新产品或服务。\\n\\n招行作为金融行业的科技创新先锋，一直以来都在数字化转型方面走在行业的前列。从推出“一卡通”到开发智能客服“招小宝”，再到利用区块链技术打造金融服务平台，招行始终致力于提升客户体验、优化服务效率。\\n\\n如今，招行提出的“一招”大模型，不仅是一次技术创新，更是对银行业服务模式的一次大胆创新，它标志着银行行业将与人工智能深度融合，进入一个全新的智能化服务时代。\\n\\n大模型与金融科技的深度融合\\n\\n以ChatGPT为代表的大模型技术，展示了强大的自然语言处理与生成能力，其应用已拓展至教育、医疗、法律等多个领域。然而，银行业作为一个数据密集且高度专业化的行业，对大模型提出了更高的要求：不仅需要对行业术语、法律法规以及复杂的客户需求进行精确理解，还需要在服务个性化、运营自动化和风险控制等方面提供专业的解决方案。\\n\\n1. 从通用模型到行业模型\\n\\n虽然像ChatGPT这样的通用模型可以处理广泛的问题，但其在金融场景中的表现需要进一步优化。例如，银行客服需要处理精准的账户查询，投资顾问需要结合客户的财务数据和市场走势提供个性化建议。这些需求要求大模型具备更强的专业化和场景化能力。\\n\\n2. 金融行业的智慧化转型\\n\\n银行业的数字化转型已迈入深水区，未来的竞争核心在于智慧化服务。大模型不仅可以作为客户的智能助手，为其提供洞察性的理财建议；也可以作为员工的数字化伙伴，帮助其提升工作效率、优化决策过程。\\n\\n招商银行信息技术部副总经理俞吴杰透露，针对AI与大语言模型，目前招行的重点在于智算平台的建设。“原来的服务器集群叫通算平台，和大模型相关的叫智算平台。智算平台既包含招行的训练平台，也包括推理平台。”他提到，招行探索大模型的目标不是建立通用模型，而是在金融行业建设垂直领域的大模型。\\n\\n招行的创新不仅局限于大模型的应用，还深入探索了低代码平台与大模型的结合。低代码开发可以大幅降低开发门槛，让业务用户也能参与到系统开发中来。而大模型的引入，使得低代码开发过程变得更加高效和智能。\\n\\n招商银行自2019年启动了企业级低代码开发平台的建设，五年来，低代码平台已成为业务系统开发的重要基础，支持零代码和低代码两种开发模式。尤其在2023年，招行进一步探索了低代码与大模型的融合，提升了开发者的体验，推动了银行业务的科技平民化。\\n\\n大模型驱动的银行业智慧化转型\\n\\n银行业的竞争日益激烈，未来的核心竞争力将在于智慧化服务。大模型技术不仅仅是在后台支持银行的智能化运作，更是在客户交互、金融服务等方面发挥着重要作用。\\n\\n在银行业中，大模型技术的落地应用正在重塑行业生态，其核心场景包括：\\n\\n1. 智能客服：更主动的客户体验\\n\\n大模型支持从被动响应向主动交互转变。传统客服主要解答客户的固定问题，而大模型赋能下的智能客服可以实时分析客户意图，提供个性化建议。例如，在客户咨询投资时，客服不仅能快速匹配合适的理财产品，还能生成详细的市场分析和风险评估。\\n\\n2. 风险控制：实时监测与动态优化\\n\\n金融风险管理是银行的核心业务之一。大模型通过对海量交易数据的实时分析，能够迅速识别异常行为，提高欺诈检测的精度。同时，它还可以结合外部政策、经济数据，动态调整风控模型，为银行提供更可靠的风险管理支持。\\n\\n3. 个性化投顾：精准洞察客户需求\\n\\n传统的理财服务往往以人工顾问为主，但其覆盖面和效率有限。大模型可以分析客户的财务状况、风险偏好以及历史行为数据，生成个性化的投资建议，从而覆盖更多长尾客户，提升服务普惠性。\\n\\n4. 内部流程优化：高效协同与智能辅助\\n\\n银行内部流程复杂，例如贷款审批、合同审阅等，通常需要耗费大量时间。大模型可以实现这些流程的自动化处理，不仅节约人力成本，还能大幅提高效率。例如，它可以在合同审阅中快速标记风险条款，并给出修改建议。\\n\\n5. 合规性与透明度：监管与服务的双赢\\n\\n金融行业的高度合规性要求对技术提出了更高标准。大模型可以实时监控业务流程，确保操作符合监管要求。同时，它还能生成易于理解的报告，帮助客户更清楚地了解自身的金融行为和合规情况。\\n\\n招行“一招”的潜力与战略意义\\n\\n此次“一招”大模型商标的申请，展示了招行在数字化与智能化转型上的战略决心。结合其多年积累的技术优势和场景深耕，“一招”有望成为银行业大模型应用的标杆。\\n\\n1. 数据、技术与场景的深度融合\\n\\n招行拥有丰富的客户数据和复杂的业务场景，这为训练和优化大模型提供了强大的基础。通过将技术与实际业务深度结合，招行能够开发出更贴近客户需求、更具竞争力的智能服务。\\n\\n2. 从银行服务到金融生态的扩展\\n\\n“一招”大模型的潜力不仅限于银行内部业务，还可能扩展到更广阔的金融生态。例如，通过开放接口，与中小企业和金融科技公司合作，提供智能风控、自动化运营等服务，助力整个行业的数字化升级。\\n\\n3. 智能化驱动的服务升级\\n\\n从“一卡通”到“掌上生活”APP，招行一直致力于提升客户体验。“一招”大模型的推出，将进一步推动银行服务从标准化向个性化、从单向服务向双向交互转型，为客户带来更加高效、贴心的金融服务。\\n\\n挑战与机遇：技术落地的关键问题\\n\\n招行在低代码与大模型领域的创新实践，标志着其数字化转型进程中的重要一步。然而，尽管大模型在银行业的应用前景广阔，但其实际落地仍面临一些挑战：\\n\\n数据安全与隐私保护\\n\\n银行掌握着大量敏感数据，大模型的开发和使用需要确保信息的安全性与合规性，避免客户隐私泄露。\\n\\n模型的可解释性与透明性\\n\\n在金融场景中，决策结果必须具备高可解释性，既要让客户信服，也要满足监管要求。这对大模型的技术设计提出了更高的要求。\\n\\n技术迭代与生态协同\\n\\n大模型技术发展迅速，银行需要保持技术敏锐度，同时建立与外部技术生态的良好协同，以实现持续的创新与突破。\\n\\n尽管面临挑战，招行凭借其在技术上的深厚积累，已经在人工智能、大模型和低代码开发方面积累了宝贵经验，未来将在智能化服务、金融生态的建设上继续推动行业的革新。\\n\\n“一招”大模型的商标申请，不仅标志着招行在人工智能领域迈出了重要一步，也揭示了未来银行业智慧化服务的趋势：以技术为驱动，从底层重塑客户体验和运营模式。\\n\\n在这个技术与金融深度融合的时代，招行以“一招”出击，向行业展示了金融科技创新的无限可能。未来，我们期待看到招行将这一“妙招”变为实招，助力客户与行业在智能时代中共创辉煌。\\n\\n注：本文为支付之家网投稿，作者系业内从业人员，文中观点仅代表作者个人观点\\n\\n0条评论|0人参与\\n网友评论\\n登录|注册\\n发布\\n相关新闻\\n加载中 \\n头条号入驻\\n支付之家网\\n支付之家网(ZFZJ.CN)官方头条号！\\n大阪严禁老人在ATM机前打电话丨试点向移动支付平台开放信用监管数据\\n今日截止，国资支付牌照挂牌转让！\\n央视曝光，2家支付机构被“另案处理”！\\n财经自媒体联盟\\n今日推荐\\n优秀作者\\n看点月榜\\nCEO下了飞机就来谈合作！为何外企纷纷看多中国？｜宅男财经\\n\\n中新经纬\\n\\n实测完DeepSeek发布的新模型，我觉得AI编程的全民普惠时刻\\n\\n数字生命卡兹克\\n\\n疯狂小杨哥要回归了？三只羊公司累计赔付近三千万 具备恢复经营条件\\n\\n雷达财经\\n\\n阿里蔡崇信：民企座谈会被低估了，人工智能市场10万亿美金\\n\\n盈利靠“节衣缩食”，虎牙的日子越来越难过了\\n\\n互联网分析师于斌\\n\\n新浪财经头条意见反馈留言板\\n\\n4000520066 欢迎批评指正\\n\\n关于头条 | 如何入驻 | 发稿平台 | 奖励机制 版权声明 | 用户协议 | 帮助中心\\nCopyright © 1996-2019 SINA Corporation\\nAll Rights Reserved 新浪公司 版权所有\\n新浪首页\\n语音播报\\n相关新闻\\n返回顶部\",\n      \"name\": \"browser_use\",\n      \"tool_call_id\": \"tool_0_browser_use\"\n    },\n    {\n      \"role\": \"user\",\n      \"content\": \"You can interact with the computer using PythonExecute, save important content and information files through FileSaver, open browsers with BrowserUseTool, and retrieve information using BingSearch.\\n\\nPythonExecute: Execute Python code to interact with the computer system, data processing, automation tasks, etc.\\n\\nFileSaver: Save files locally, such as txt, py, html, etc.\\n\\nBrowserUseTool: Open, browse, and use web browsers.If you open a local HTML file, you must provide the absolute path to the file.\\n\\nBingSearch: Perform web information retrieval, and return ref links, you must use BrowserUseTool to fetch information from these links.\\n\\nBased on user needs, proactively select the most appropriate tool or combination of tools. For complex tasks, you can break down the problem and use different tools step by step to solve it. After using each tool, clearly explain the execution results and suggest the next steps.\\n\"\n    },\n    {\n      \"role\": \"assistant\",\n      \"content\": \"The text content from the first search result is now available. It appears to be an article about \\\"一招(YiZhao)大模型\\\" from a financial perspective, specifically focusing on the application by China Merchants Bank (招商银行).\\n\\nHere's a summary of the key information:\\n\\n*   **招商银行 (China Merchants Bank) is developing an AI model called \\\"一招(YiZhao)\\\"**: They have applied for trademarks related to this model.\\n*   **Focus on Financial Applications**: The model is intended for use in various financial services, including customer service, risk control, and personalized investment advice.\\n*   **Integration with Low-Code Development**:  招商银行 is also integrating the model with low-code development platforms to improve efficiency.\\n*   **Benefits**: The article highlights potential benefits such as improved customer experience, operational efficiency, and risk management.\\n*   **Challenges**: The article also mentions challenges like data security, model explainability, and the need for continuous technological advancements.\\n\\nNow, I will proceed to the second search result to gather more information.\\n\",\n      \"tool_calls\": [\n        {\n          \"id\": \"tool_0_browser_use\",\n          \"type\": \"function\",\n          \"function\": {\n            \"name\": \"browser_use\",\n            \"arguments\": \"{\\\"url\\\":\\\"https://www.modelscope.cn/models/CMB_AILab/YiZhao-12B-Chat/summary\\\",\\\"action\\\":\\\"navigate\\\"}\"\n          }\n        }\n      ]\n    },\n    {\n      \"role\": \"tool\",\n      \"content\": \"Observed output of cmd `browser_use` executed:\\nError: Browser action 'navigate' failed: Page.goto: Timeout 30000ms exceeded.\\nCall log:\\n  - navigating to \\\"https://www.modelscope.cn/models/CMB_AILab/YiZhao-12B-Chat/summary\\\", waiting until \\\"load\\\"\\n\",\n      \"name\": \"browser_use\",\n      \"tool_call_id\": \"tool_0_browser_use\"\n    },\n    {\n      \"role\": \"user\",\n      \"content\": \"You can interact with the computer using PythonExecute, save important content and information files through FileSaver, open browsers with BrowserUseTool, and retrieve information using BingSearch.\\n\\nPythonExecute: Execute Python code to interact with the computer system, data processing, automation tasks, etc.\\n\\nFileSaver: Save files locally, such as txt, py, html, etc.\\n\\nBrowserUseTool: Open, browse, and use web browsers.If you open a local HTML file, you must provide the absolute path to the file.\\n\\nBingSearch: Perform web information retrieval, and return ref links, you must use BrowserUseTool to fetch information from these links.\\n\\nBased on user needs, proactively select the most appropriate tool or combination of tools. For complex tasks, you can break down the problem and use different tools step by step to solve it. After using each tool, clearly explain the execution results and suggest the next steps.\\n\"\n    },\n    {\n      \"role\": \"assistant\",\n      \"content\": \"The attempt to navigate to the second URL timed out. I will try again.\\n\",\n      \"tool_calls\": [\n        {\n          \"id\": \"tool_0_browser_use\",\n          \"type\": \"function\",\n          \"function\": {\n            \"name\": \"browser_use\",\n            \"arguments\": \"{\\\"url\\\":\\\"https://www.modelscope.cn/models/CMB_AILab/YiZhao-12B-Chat/summary\\\",\\\"action\\\":\\\"navigate\\\"}\"\n          }\n        }\n      ]\n    },\n    {\n      \"role\": \"tool\",\n      \"content\": \"Observed output of cmd `browser_use` executed:\\nNavigated to https://www.modelscope.cn/models/CMB_AILab/YiZhao-12B-Chat/summary\",\n      \"name\": \"browser_use\",\n      \"tool_call_id\": \"tool_0_browser_use\"\n    },\n    {\n      \"role\": \"user\",\n      \"content\": \"You can interact with the computer using PythonExecute, save important content and information files through FileSaver, open browsers with BrowserUseTool, and retrieve information using BingSearch.\\n\\nPythonExecute: Execute Python code to interact with the computer system, data processing, automation tasks, etc.\\n\\nFileSaver: Save files locally, such as txt, py, html, etc.\\n\\nBrowserUseTool: Open, browse, and use web browsers.If you open a local HTML file, you must provide the absolute path to the file.\\n\\nBingSearch: Perform web information retrieval, and return ref links, you must use BrowserUseTool to fetch information from these links.\\n\\nBased on user needs, proactively select the most appropriate tool or combination of tools. For complex tasks, you can break down the problem and use different tools step by step to solve it. After using each tool, clearly explain the execution results and suggest the next steps.\\n\"\n    },\n    {\n      \"role\": \"assistant\",\n      \"content\": \"Now I will get the text content of the page.\\n\\n\",\n      \"tool_calls\": [\n        {\n          \"id\": \"tool_0_browser_use\",\n          \"type\": \"function\",\n          \"function\": {\n            \"name\": \"browser_use\",\n            \"arguments\": \"{\\\"action\\\":\\\"get_text\\\"}\"\n          }\n        }\n      ]\n    },\n    {\n      \"role\": \"tool\",\n      \"content\": \"Observed output of cmd `browser_use` executed:\\n首页\\n模型库\\n数据集\\n创空间\\nAIGC专区\\n文档中心\\n社区\\nGitHub\\n登录 / 注册\\n一招-12B-Chat\\nCMB_AILab/YiZhao-12B-Chat\\nYiZhao\\n@招商银行人工智能实验室提供64下载2025-01-14更新\\nNotebook快速开发\\n喜欢\\n加入合集\\n模型介绍\\n模型文件\\n交流反馈3\\n一招（YiZhao)使用指南\\n\\n大模型金融能力榜单 • 模型文件 • 开源数据\\n\\n目录\\n模型介绍\\n效果评测\\n快速开始\\n声明与协议\\n最新动态\\n2024年12月10日 开源2TB高质量多模态的大模型训练数据集\\n模型介绍\\n\\n一招（YiZhao)是招商银行联合华为、智谱AI，在全国产的设备与训练框架下训练形成的金融领域大语言模型系列。我们首先在大规模高质量数据上进行预训练，再通过高质量金融数据进行后期微调（SFT），最后通过直接偏好优化（DPO）进一步优化模型，最终训练出了YiZhao-12B-Chat。YiZhao-12B-Chat具备自然语言理解、文本生成、舆情事件抽取、工具使用、对话互动等多种功能。YiZhao-12B-Chat是一个专为金融领域设计的 120亿参数大型语言模型，支持32K上下文长度。 主要特点包括：\\n\\n对海量通用语料与金融语料进行了多维度数据清洗与筛选，保证训练数据的数量和质量。\\n\\nYiZhao-12B-Chat是基于GLM（General Language Model）架构的中英双语对话模型，具有120亿参数，对问答和对话场景进行了优化。\\n\\nYiZhao-12B-Chat完全基于国产算力和国产深度学习框架MindSpore进行训练，算力和算法框架更自主可控。\\n\\n这款模型在云端私有化部署后，可以为企业和个人提供高效、灵活的智能对话解决方案。\\n\\n下载链接：\\n\\n社区\\t下载地址\\n魔搭社区（mindspore）\\thttps://www.modelscope.cn/models/CMB_AILab/YiZhao-12B-Chat/\\n魔搭社区（safetensor）\\thttps://modelscope.cn/models/CMB_AILab/YiZhao-12B-Chat-HF\\n魔乐社区 （mindspore）\\thttps://modelers.cn/models/CMB_AI_Lab/YiZhao-12B-Chat/\\n码云\\thttps://gitee.com/mindspore/mindformers/tree/dev/research/yizhao\\n效果评测\\n\\n效果评测包括通用能力评测和金融领域评测。模型在保持通用能力的基础上进一步提升了金融领域能力。\\n\\n1. 通用评测\\n\\n在通用领域评测中，我们选择当下主流的几类客观评测基准，见下表：\\n\\n能力\\t任务\\t描述\\n逻辑推理\\tARC Challenge\\tARC问题需要多种类型的知识与推理，包括定义、基本事实和属性、结构、过程与因果、目的论、代数、实验、空间/运动学、类比等，ARC问题集包含7787个自然科学问题\\n中文知识\\tCMMLU\\t67个学科中文考试题\\n数学能力\\tGSM8K\\t8.5k个样例，数学推理能力\\n通用知识\\tMMLU\\tMMLU 是一个涵盖STEM、人文学科、社会科学等57个学科领域(例如：数学、法律、伦理等)的评测基准，旨在考察大语言模型将知识运用于问题解决的能力\\n指令遵从\\tIFEval\\t确定了25种可验证的指令类型，500个包含一个或多个可验证指令的提示（prompts）\\n测试结果如下：\\n模型\\t逻辑推理\\t中文知识\\t数学能力\\t通用知识\\t指令遵从\\n\\tarc_challenge\\tcmmlu\\tgsm8k\\tmmlu\\tifeval\\n一招-12B-Chat\\t0.9331\\t0.7158\\t0.8993\\t0.7192\\t0.5432\\n小结：\\n\\nYiZhao-12B在通用评测集方面均有出色表现。\\n\\nYiZhao-12B的预训练方案并没有牺牲过多模型通用能力，而且增量训练数据中的中文金融数据，也一定程度地增强了模型的逻辑推理、中文、数学等能力。\\n\\n2. 金融评测\\n\\n金融评测主要包括以下三个测试：\\n\\n任务\\t描述\\nCCKS-IJCKG：DFMEB\\t为了推动LLM在数字金融领域的发展，并解决实际金融业务问题。招商银行联合中科院自动化所、科大讯飞股份有限公司，结合实际生产场景，推出数字金融领域评测基准（Digital Finance Model Evaluation Benchmark，DFMEB）。该评测基准包含六大场景（知识问答、文本理解、内容生成、逻辑推理、安全合规、AI智能体），涵盖69种金融任务，有利于帮助开源社区和业界快速评测公开或者自研LLM。\\nCFBenchmark-OpenFinData\\t“书生•济世”中文金融评测基准（CFBenchmark）基础版本由CFBenchmark-Basic（全部为主观题，不参与测评）和CFBenchmark-OpenFinData两部分数据组成。OpenFinData是由东方财富与上海人工智能实验室联合发布的开源金融评测数据集。该数据集代表了最真实的产业场景需求，是目前场景最全、专业性最深的金融评测数据集。它基于东方财富实际金融业务的多样化丰富场景，旨在为金融科技领域的研究者和开发者提供一个高质量的数据资源。\\nFinancelQ\\tFinanceIQ是一个专业的金融领域评测集，其涵盖了10个金融大类及36个金融小类，总计7173个单项选择题，某种程度上可客观反应模型的金融能力。\\n测试结果如下：\\n模型\\tCCKS-IJCKG：DFMEB\\tCFBenchmark-OpenFinData\\tFinancelQ\\n一招-12B-Chat\\t0.8218\\t0.8798\\t0.6867\\n小结：\\n\\nYiZhao-12B-Chat在金融测评方面表现优异。\\n\\nYiZhao-12B-Chat有着较强的专业知识能力，在金融分析、金融考核、金融安全合规、风险检查等多个专业领域维度有着出色的表现。\\n\\n快速开始\\n\\nYiZhao-12B-Chat模型已发布在魔搭社区、魔乐社区，请根据上述链接进行下载。下方为模型的推理部署使用方法。\\n\\n依赖软件\\n\\n下表列出了运行一招推理所需的环境和第三方依赖。\\n\\n软件名称\\t版本\\t作用\\nMindSpore\\t2.4.0\\t深度学习框架\\nMindSpore Transformers\\t1.3.0\\t大模型全流程开发套件\\nCANN\\t8.0.RC3.beta1\\t昇腾异构计算架构\\nsympy\\t1.13.3\\t三方依赖包\\nPython\\t3.10\\tMindSpore的使用依赖Python环境\\nGCC\\t7.3.0\\t用于编译MindSpore的C++编译器\\n\\n注：MindSpore官网介绍：https://www.mindspore.cn/\\n\\n安装指导\\n1. 安装CANN\\n\\n下载CANN社区版，选择8.0.RC3.beta1版本，按顺序执行：\\n\\n./Ascend-cann-toolkit_8.0.RC3_linux-aarch64.run --install --install-for-all --install-path=/usr/local/Ascend/\\n./Ascend-cann-kernels-910b_8.0.RC3_linux-aarch64.run --install --install-path=/usr/local/Ascend/\\n\\n\\n安装完毕后执行：\\n\\npip uninstall te topi hccl -y\\npip install sympy\\npip install /usr/local/Ascend/ascend-toolkit/latest/lib64/te-*-py3-none-any.whl\\npip install /usr/local/Ascend/ascend-toolkit/latest/lib64/hccl-*-py3-none-any.whl\\n\\n2. 安装MindSpore\\npip install https://ms-release.obs.cn-north-4.myhuaweicloud.com/2.4.0/MindSpore/unified/aarch64/mindspore-2.4.0-cp310-cp310-linux_aarch64.whl --trusted-host ms-release.obs.cn-north-4.myhuaweicloud.com -i https://pypi.tuna.tsinghua.edu.cn/simple\\n\\n\\n验证MindSpore与CANN是否安装成功：\\n\\nsource /usr/local/Ascend/ascend-toolkit/set_env.sh # 每次运行时都需要设置此环境变量\\npython -c \\\"import mindspore;mindspore.set_context(device_target='Ascend');mindspore.run_check()\\\"\\n\\n3. 安装MindSpore Transformers\\npip install mindformers==1.3.0\\n\\n4. 安装openmind-hub\\npip install openmind-hub  #如需自动下载，需要安装额外依赖openmind-hub\\n\\n代码示例\\n\\n此处提供一个代码示例，展示如何加载tokenizer和模型，并如何生成内容：\\n\\n\\nimport os\\nimport time\\nimport mindspore as ms\\nfrom mindformers.pipeline import pipeline\\n\\nos.environ[\\\"RUN_MODE\\\"] = \\\"predict\\\"\\nos.environ[\\\"MS_INTERNAL_DISABLE_CUSTOM_KERNEL_LIST\\\"] = \\\"PagedAttention\\\"\\nms.set_context(device_id=0, mode=0, device_target='Ascend', jit_config={'jit_level': 'O0', 'infer_boost': 'on'})\\n\\npipeline_task = pipeline(task=\\\"text_generation\\\",\\n                         model=\\\"CMB_AILab/YiZhao-12B-Chat\\\",  # model_path\\n                         framework='ms',\\n                         model_kwargs={\\\"use_past\\\": True},\\n                         trust_remote_code=True\\n                         )\\nwhile True:\\n    input_ = input(\\\"模型输入: \\\")\\n    template = f\\\"<|user|>{input_}<|assistant|>\\\"\\n\\n    pipeline_result = pipeline_task(template, do_sample=False, seed=int(time.time()))\\n    print(pipeline_result[0][\\\"text_generation_text\\\"][0].replace(f\\\"{input_}\\\", \\\"\\\", 1))\\n\\n声明与协议\\n声明\\n\\n我们在此声明，不要使用一招（YiZhao）模型及其衍生模型进行任何危害国家社会安全或违法的活动。同时，我们也要求使用者不要将一招（YiZhao）用于未经必要安全审查和备案的互联网服务。我们希望所有使用者遵守上述原则，确保科技发展在合法合规的环境下进行。\\n\\n我们已经尽我们所能，来确保模型训练过程中使用的数据及模型的合规性。然而，尽管我们已经做出了巨大的努力，但由于模型和数据的复杂性，仍有可能存在一些无法预见的问题。使用者应结合使用场景、使用目的、涉及数据敏感性、预期运行环境，进行必要的测试，了解了大模型局限性，评估潜在风险及使用大模型的合法性及适当性，采取必要的缓释措施，并履行必要的安全及合规义务。因使用一招（YiZhao）开源模型而导致的任何问题，包括但不限于数据安全问题、公共舆论风险，或模型被误导、滥用、传播或不当利用所带来的任何风险和问题，我们将不承担任何责任。\\n\\n协议\\n\\n社区使用一招（YiZhao）模型需要遵循《“一招（YiZhao）”许可协议》。\\n\\n如果使用方为非自然人实体，您需要通过以下联系邮箱ailab@cmbchina.com，提交《“一招（YiZhao）”许可协议》要求的申请材料。审核通过后，将特此授予您一个非排他性、全球性、不可转让、不可再许可、可撤销和免版税的有限许可，但仅限于被许可方内部的使用、复制、分发以及修改，并且应当遵守《“一招（YiZhao）”许可协议》。\\n\\n作者：\\n招商银行人工智能实验室\\n  \\n模型 2\\n数据集 0\\n创空间 0\\n收录本模型的合集（ 1 ）\\nAIOps\\n2025.03.20\\n3\\n0\\n\\n分享\\n\\n© 2022-2025 ModelScope.cn 版权所有\",\n      \"name\": \"browser_use\",\n      \"tool_call_id\": \"tool_0_browser_use\"\n    },\n    {\n      \"role\": \"user\",\n      \"content\": \"You can interact with the computer using PythonExecute, save important content and information files through FileSaver, open browsers with BrowserUseTool, and retrieve information using BingSearch.\\n\\nPythonExecute: Execute Python code to interact with the computer system, data processing, automation tasks, etc.\\n\\nFileSaver: Save files locally, such as txt, py, html, etc.\\n\\nBrowserUseTool: Open, browse, and use web browsers.If you open a local HTML file, you must provide the absolute path to the file.\\n\\nBingSearch: Perform web information retrieval, and return ref links, you must use BrowserUseTool to fetch information from these links.\\n\\nBased on user needs, proactively select the most appropriate tool or combination of tools. For complex tasks, you can break down the problem and use different tools step by step to solve it. After using each tool, clearly explain the execution results and suggest the next steps.\\n\"\n    }\n  ],\n  \"model\": \"google/gemini-2.0-flash-lite-preview-02-05:free\",\n  \"max_tokens\": 128000,\n  \"temperature\": 0,\n  \"tool_choice\": \"auto\",\n  \"tools\": [\n    {\n      \"type\": \"function\",\n      \"function\": {\n        \"name\": \"python_execute\",\n        \"description\": \"Executes Python code string. Note: Only print outputs are visible, function return values are not captured. Use print statements to see results.\",\n        \"parameters\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"code\": {\n              \"type\": \"string\",\n              \"description\": \"The Python code to execute.\"\n            }\n          },\n          \"required\": [\n            \"code\"\n          ]\n        }\n      }\n    },\n    {\n      \"type\": \"function\",\n      \"function\": {\n        \"name\": \"bing_search\",\n        \"description\": \"执行必应搜索并返回相关链接列表。\\n当需要获取互联网信息或英文内容时建议使用此工具。\\n工具返回与搜索查询匹配的URL列表。后续可以通过browser_use工具去进行访问URL\",\n        \"parameters\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"query\": {\n              \"type\": \"string\",\n              \"description\": \"(必填) 提交给必应的搜索关键词\"\n            },\n            \"num_results\": {\n              \"type\": \"integer\",\n              \"description\": \"(可选) 返回的搜索结果数量，默认5\",\n              \"default\": 5\n            }\n          },\n          \"required\": [\n            \"query\"\n          ]\n        }\n      }\n    }\n  ]\n}\n```\n\n#### LangManus\n\n[ 🦜🤖 LangManus 5.2k star](https://github.com/langmanus/langmanus/tree/main)\n\n基于langchain生态multiAgents实现类似功能，tavily搜索引擎 + jina爬虫 + browser-use浏览器 + pythonREPL代码执行 + subprocess bash执行 + 基础文件操作\n\n<img title=\"\" src=\"./2025-03-27-14-29-59-image.png\" alt=\"\" width=\"504\" data-align=\"left\">\n\n系统由以下智能体协同工作：\n\n1. **协调员（Coordinator）**：工作流程的入口点，处理初始交互并路由任务\n2. **规划员（Planner）**：分析任务并制定执行策略\n3. **主管（Supervisor）**：监督和管理其他智能体的执行\n4. **研究员（Researcher）**：收集和分析信息\n5. **程序员（Coder）**：负责代码生成和修改\n6. **浏览器（Browser）**：执行网页浏览和信息检索 \n7. **汇报员（Reporter）**：生成工作流结果的报告和总结\n\n实现这些agents一共只用到了以下tools\n\n<img title=\"\" src=\"./2025-03-27-14-51-50-image.png\" alt=\"\" width=\"223\" data-align=\"left\">\n\n由supervisor控制loop和结束, prompt如下\n\n```markdown\nYou are a supervisor coordinating a team of specialized workers to complete tasks. Your team consists of: [{{ TEAM_MEMBERS|join(\", \") }}].\n\nFor each user request, you will:\n\nAnalyze the request and determine which worker is best suited to handle it next\nRespond with ONLY a JSON object in the format: {\"next\": \"worker_name\"}\nReview their response and either:\nChoose the next worker if more work is needed (e.g., {\"next\": \"researcher\"})\nRespond with {\"next\": \"FINISH\"} when the task is complete\nAlways respond with a valid JSON object containing only the 'next' key and a single value: either a worker's name or 'FINISH'.\n\nTeam Members\n{% for agent in TEAM_MEMBERS %}\n\n{{agent}}: {{ TEAM_MEMBER_CONFIGRATIONS[agent][\"desc_for_llm\"] }} {% endfor %}\n```\n\n### 开源基础组件\n\n#### Browser-use\n\n[GitHub - browser-use/browser-use 🤖  49K star](https://github.com/browser-use/browser-use)\n\n🌐 Browser-use is the easiest way to connect your AI agents with the browser. 它集成了开源浏览器自动化工具playwright来实现api控制浏览器行为，并内置了一个Agent，通过react让 llm loop执行直到完成用户指令。基本用法如下\n\n```python\nfrom langchain_openai import ChatOpenAI\nfrom browser_use import Agent\nimport asyncio\nfrom dotenv import load_dotenv\nload_dotenv()\n\nasync def main():\n    agent = Agent(\n        task=\"Compare the price of gpt-4o and DeepSeek-V3\",\n        llm=ChatOpenAI(model=\"gpt-4o\"),\n        use_vision=True,  \n    )\n    await agent.run()\n\nasyncio.run(main())\n```\n\n内置的浏览器tools：\n\n```\ngo_to_url\ngo_back\nwait\nsearch_google\nclick_element\ninput_text\nswitch_tab\nopen_tab\nextract_content\nscroll_down\nscroll_up\nsend_keys\nscroll_to_text\nget_dropdown_options\nselect_dropdown_option\ndone\n```\n\nLLM实际调用日志：react过程\n\n**测试prompt**：打开Bing搜索 搜索一下一招大模型的信息，多看几篇网页，总结一下重要信息\n\nmodel: groq/deepseek-r1-distill-qwen-32b\n\n```json\n{\n  \"messages\": [\n    {\n      \"content\": \"You are an AI agent designed to automate browser tasks. Your goal is to accomplish the ultimate task following the rules.\\n\\n# Input Format\\nTask\\nPrevious steps\\nCurrent URL\\nOpen Tabs\\nInteractive Elements\\n[index]<type>text</type>\\n- index: Numeric identifier for interaction\\n- type: HTML element type (button, input, etc.)\\n- text: Element description\\nExample:\\n[33]<button>Submit Form</button>\\n\\n- Only elements with numeric indexes in [] are interactive\\n- elements without [] provide only context\\n\\n# Response Rules\\n1. RESPONSE FORMAT: You must ALWAYS respond with valid JSON in this exact format:\\n{\\\"current_state\\\": {\\\"evaluation_previous_goal\\\": \\\"Success|Failed|Unknown - Analyze the current elements and the image to check if the previous goals/actions are successful like intended by the task. Mention if something unexpected happened. Shortly state why/why not\\\",\\n\\\"memory\\\": \\\"Description of what has been done and what you need to remember. Be very specific. Count here ALWAYS how many times you have done something and how many remain. E.g. 0 out of 10 websites analyzed. Continue with abc and xyz\\\",\\n\\\"next_goal\\\": \\\"What needs to be done with the next immediate action\\\"},\\n\\\"action\\\":[{\\\"one_action_name\\\": {// action-specific parameter}}, // ... more actions in sequence]}\\n\\n2. ACTIONS: You can specify multiple actions in the list to be executed in sequence. But always specify only one action name per item. Use maximum {max_actions} actions per sequence.\\nCommon action sequences:\\n- Form filling: [{\\\"input_text\\\": {\\\"index\\\": 1, \\\"text\\\": \\\"username\\\"}}, {\\\"input_text\\\": {\\\"index\\\": 2, \\\"text\\\": \\\"password\\\"}}, {\\\"click_element\\\": {\\\"index\\\": 3}}]\\n- Navigation and extraction: [{\\\"go_to_url\\\": {\\\"url\\\": \\\"https://example.com\\\"}}, {\\\"extract_content\\\": {\\\"goal\\\": \\\"extract the names\\\"}}]\\n- Actions are executed in the given order\\n- If the page changes after an action, the sequence is interrupted and you get the new state.\\n- Only provide the action sequence until an action which changes the page state significantly.\\n- Try to be efficient, e.g. fill forms at once, or chain actions where nothing changes on the page\\n- only use multiple actions if it makes sense.\\n\\n3. ELEMENT INTERACTION:\\n- Only use indexes of the interactive elements\\n- Elements marked with \\\"[]Non-interactive text\\\" are non-interactive\\n\\n4. NAVIGATION & ERROR HANDLING:\\n- If no suitable elements exist, use other functions to complete the task\\n- If stuck, try alternative approaches - like going back to a previous page, new search, new tab etc.\\n- Handle popups/cookies by accepting or closing them\\n- Use scroll to find elements you are looking for\\n- If you want to research something, open a new tab instead of using the current tab\\n- If captcha pops up, try to solve it - else try a different approach\\n- If the page is not fully loaded, use wait action\\n\\n5. TASK COMPLETION:\\n- Use the done action as the last action as soon as the ultimate task is complete\\n- Dont use \\\"done\\\" before you are done with everything the user asked you, except you reach the last step of max_steps. \\n- If you reach your last step, use the done action even if the task is not fully finished. Provide all the information you have gathered so far. If the ultimate task is completly finished set success to true. If not everything the user asked for is completed set success in done to false!\\n- If you have to do something repeatedly for example the task says for \\\"each\\\", or \\\"for all\\\", or \\\"x times\\\", count always inside \\\"memory\\\" how many times you have done it and how many remain. Don't stop until you have completed like the task asked you. Only call done after the last step.\\n- Don't hallucinate actions\\n- Make sure you include everything you found out for the ultimate task in the done text parameter. Do not just say you are done, but include the requested information of the task. \\n\\n6. VISUAL CONTEXT:\\n- When an image is provided, use it to understand the page layout\\n- Bounding boxes with labels on their top right corner correspond to element indexes\\n\\n7. Form filling:\\n- If you fill an input field and your action sequence is interrupted, most often something changed e.g. suggestions popped up under the field.\\n\\n8. Long tasks:\\n- Keep track of the status and subresults in the memory. \\n\\n9. Extraction:\\n- If your task is to find information - call extract_content on the specific pages to get and store the information.\\nYour responses must be always JSON with the specified format. \",\n      \"role\": \"system\"\n    },\n    {\n      \"content\": \"Context for the taskAvailable actions: Complete task - with return text and if the task is finished (success=True) or not yet  completly finished (success=False), because last step is reached: \\n{done: {'text': {'type': 'string'}, 'success': {'type': 'boolean'}}}\\nSearch the query in Google in the current tab, the query should be a search query like humans search in Google, concrete and not vague or super long. More the single most important items. input example: {\\\"query\\\": \\\"your words\\\"}: \\n{search_google: {'query': {'type': 'string'}}}\\nNavigate to URL in the current tab: \\n{go_to_url: {'url': {'type': 'string'}}}\\nGo back: \\n{go_back: {}}\\nWait for x seconds default 3: \\n{wait: {'seconds': {'default': 3, 'type': 'integer'}}}\\nClick element: \\n{click_element: {'index': {'type': 'integer'}, 'xpath': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None}}}\\nInput text into a input interactive element: \\n{input_text: {'index': {'type': 'integer'}, 'text': {'type': 'string'}, 'xpath': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None}}}\\nSwitch tab: \\n{switch_tab: {'page_id': {'type': 'integer'}}}\\nOpen url in new tab: \\n{open_tab: {'url': {'type': 'string'}}}\\nExtract page content to retrieve specific information from the page, e.g. all company names, a specifc description, all information about, links with companies in structured format or simply links: \\n{extract_content: {'goal': {'type': 'string'}}}\\nScroll down the page by pixel amount - if no amount is specified, scroll down one page: \\n{scroll_down: {'amount': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None}}}\\nScroll up the page by pixel amount - if no amount is specified, scroll up one page: \\n{scroll_up: {'amount': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None}}}\\nSend strings of special keys like Escape,Backspace, Insert, PageDown, Delete, Enter, Shortcuts such as `Control+o`, `Control+Shift+T` are supported as well. This gets used in keyboard.press. : \\n{send_keys: {'keys': {'type': 'string'}}}\\nIf you dont find something which you want to interact with, scroll to it: \\n{scroll_to_text: {'text': {'type': 'string'}}}\\nGet all options from a native dropdown: \\n{get_dropdown_options: {'index': {'type': 'integer'}}}\\nSelect dropdown option for interactive element index by the text of the option you want to select: \\n{select_dropdown_option: {'index': {'type': 'integer'}, 'text': {'type': 'string'}}}Your ultimate task is: \\\"\\\"\\\"打开Bing搜索 搜索一下一招大模型的信息，多看几篇网页，总结一下重要信息\\\"\\\"\\\". If you achieved your ultimate task, stop everything and use the done action in the next step to complete the task. If not, continue as usual.Example output:Your ultimate task is: \\\"\\\"\\\"打开Bing搜索 搜索一下一招大模型的信息，多看几篇网页，总结一下重要信息\\\"\\\"\\\". If you achieved your ultimate task, stop everything and use the done action in the next step to complete the task. If not, continue as usual.Example output:Your ultimate task is: \\\"\\\"\\\"打开Bing搜索 搜索一下一招大模型的信息，多看几篇网页，总结一下重要信息\\\"\\\"\\\". If you achieved your ultimate task, stop everything and use the done action in the next step to complete the task. If not, continue as usual.Example output:Your ultimate task is: \\\"\\\"\\\"打开Bing搜索 搜索一下一招大模型的信息，多看几篇网页，总结一下重要信息\\\"\\\"\\\". If you achieved your ultimate task, stop everything and use the done action in the next step to complete the task. If not, continue as usual.Example output:\",\n      \"role\": \"user\"\n    },\n    {\n      \"content\": \"[{\\\"name\\\": \\\"AgentOutput\\\", \\\"args\\\": {\\\"current_state\\\": {\\\"evaluation_previous_goal\\\": \\\"Success - I opend the first page\\\", \\\"memory\\\": \\\"Starting with the new task. I have completed 1/10 steps\\\", \\\"next_goal\\\": \\\"Click on company a\\\"}, \\\"action\\\": [{\\\"click_element\\\": {\\\"index\\\": 0}}]}, \\\"id\\\": \\\"1\\\", \\\"type\\\": \\\"tool_call\\\"}]\",\n      \"role\": \"assistant\"\n    },\n    {\n      \"content\": \"Browser started[Your task history memory starts here]\",\n      \"role\": \"user\"\n    },\n    {\n      \"content\": \"[{\\\"name\\\": \\\"AgentOutput\\\", \\\"args\\\": {\\\"current_state\\\": {\\\"evaluation_previous_goal\\\": \\\"Unknown - Analyze the current elements and the image to understand the starting point\\\", \\\"memory\\\": \\\"Starting with the new task. I have completed 0/10 steps. Need to open Bing search and perform the search query.\\\", \\\"next_goal\\\": \\\"Navigate to Bing search\\\"}, \\\"action\\\": [{\\\"go_to_url\\\": {\\\"url\\\": \\\"https://www.bing.com\\\"}}]}, \\\"id\\\": \\\"2\\\", \\\"type\\\": \\\"tool_call\\\"}]\",\n      \"role\": \"assistant\"\n    },\n    {\n      \"content\": \"Action result: 🔗  Navigated to https://www.bing.com\",\n      \"role\": \"user\"\n    },\n    {\n      \"content\": \"[{\\\"name\\\": \\\"AgentOutput\\\", \\\"args\\\": {\\\"current_state\\\": {\\\"evaluation_previous_goal\\\": \\\"Success - Successfully navigated to Bing search page\\\", \\\"memory\\\": \\\"Starting with the new task. I have completed 1/10 steps. I have navigated to Bing search and need to perform the search query.\\\", \\\"next_goal\\\": \\\"Perform the search query for '\\\\u4e00\\\\u62db\\\\u5927\\\\u6a21\\\\u578b'\\\"}, \\\"action\\\": [{\\\"input_text\\\": {\\\"index\\\": 11, \\\"text\\\": \\\"\\\\u4e00\\\\u62db\\\\u5927\\\\u6a21\\\\u578b\\\"}}, {\\\"click_element\\\": {\\\"index\\\": 12}}, {\\\"wait\\\": {\\\"seconds\\\": 3}}]}, \\\"id\\\": \\\"3\\\", \\\"type\\\": \\\"tool_call\\\"}]\",\n      \"role\": \"assistant\"\n    },\n    {\n      \"content\": \"Action result: ⌨️  Input 一招大模型 into index 11Action result: Something new appeared after action 1 / 3\",\n      \"role\": \"user\"\n    },\n    {\n      \"content\": \"[{\\\"name\\\": \\\"AgentOutput\\\", \\\"args\\\": {\\\"current_state\\\": {\\\"evaluation_previous_goal\\\": \\\"Success - Successfully navigated to Bing search page and performed the search query.\\\", \\\"memory\\\": \\\"Starting with the new task. I have completed 1/10 steps. I have navigated to Bing search and performed the search query. Need to click on the search results to view more information.\\\", \\\"next_goal\\\": \\\"Click on the first search result to view the webpage\\\"}, \\\"action\\\": [{\\\"click_element\\\": {\\\"index\\\": 16}}, {\\\"wait\\\": {\\\"seconds\\\": 3}}, {\\\"extract_content\\\": {\\\"goal\\\": \\\"extract information about \\\\u4e00\\\\u62db\\\\u5927\\\\u6a21\\\\u578b\\\"}}]}, \\\"id\\\": \\\"4\\\", \\\"type\\\": \\\"tool_call\\\"}]\",\n      \"role\": \"assistant\"\n    },\n    {\n      \"content\": \"Action result: 🖱️  Clicked button with index 16: Action result: 🕒  Waiting for 3 secondsAction result: 📄  Extracted from page\\n: <think>\\n好，我现在需要处理用户的查询，目标是从给定的页面内容中提取关于“一招大模型”的信息，并以JSON格式返回。首先，我得仔细阅读用户提供的页面内容，理解其中的结构和信息分布。\\n\\n页面看起来像是一个搜索结果页面，包含多个搜索结果条目，每个条目都有标题、来源和简要描述。此外，还有图片搜索结果和其他相关搜索链接。我的任务是从这些内容中提取所有与“一招大模型”相关的信息。\\n\\n首先，我会浏览每个搜索结果条目，看看它们是否提到了“一招大模型”。例如，第一个结果来自新浪财经，提到招商银行提出了“一招”大模型，这是一次技术创新，也是服务模式的创新。这表明“一招大模型”是招商银行开发的，用于金融领域的AI模型。\\n\\n接下来，第二个结果是图片搜索，显示了多个相关图片，但可能对提取文本信息帮助不大，所以可以暂时忽略。第三个结果来自ModelScope社区，详细说明了“一招”大模型是由招商银行与华为、智谱AI合作开发的，使用全国产设备和框架，专注于金融领域。这部分信息非常重要，因为它提供了开发背景和合作伙伴。\\n\\n第四个到第十个结果来自不同的新闻网站，如网易、新浪财经、亿欧、搜狐和百家号，都报道了招商银行申请了“一招大模型”的商标，涉及金融创新和AI技术的应用。这些信息补充了“一招大模型”的商标注册情况和其在金融领域的应用前景。\\n\\n在提取信息时，我需要确保涵盖以下几点：\\n1. “一招大模型”的定义和用途。\\n2. 开发背景，包括合作方和开发环境。\\n3. 商标注册情况及其意义。\\n4. 该模型对金融行业的影响。\\n\\n此外，我还需要注意信息的来源是否可靠，比如是否来自官方渠道或知名新闻网站。例如，新浪财经和搜狐的报道提供了详细的背景信息，而ModelScope社区则提供了技术细节。\\n\\n在整理信息时，我会将每个关键点分类，如定义、开发背景、商标注册和影响，确保结构清晰。同时，要避免重复信息，比如多个来源都提到商标注册，但具体内容相似，可以合并描述。\\n\\n最后，我会将提取的信息组织成JSON格式，确保每个字段准确无误，并且信息全面。这样，用户就能清楚地了解“一招大模型”的各个方面，包括其开发、应用和影响。\\n</think>\\n\\n```json\\n{\\n  \\\"extracted_information\\\": [\\n    {\\n      \\\"title\\\": \\\"一招大模型\\\",\\n      \\\"description\\\": \\\"一招大模型是由招商银行股份有限公司申请注册的商标，主要用于金融领域的人工智能技术应用。该模型旨在推动银行业服务模式的创新，标志着银行行业将与人工智能深度融合，进入一个全新的智能化服务时代。\\\",\\n      \\\"source\\\": \\\"新浪财经网\\\",\\n      \\\"date\\\": \\\"2024年12月12日\\\"\\n    },\\n    {\\n      \\\"title\\\": \\\"一招大模型的商标申请\\\",\\n      \\\"description\\\": \\\"招商银行股份有限公司申请注册了“一招（YiZhao）大模型”和“招商银行一招（YiZhao）大模型”商标，国际分类为广告销售、科学仪器等。这一举措表明招商银行在人工智能领域的战略布局。\\\",\\n      \\\"source\\\": \\\"新浪财经\\\",\\n      \\\"date\\\": \\\"2024年12月11日\\\"\\n    },\\n    {\\n      \\\"title\\\": \\\"一招大模型的技术背景\\\",\\n      \\\"description\\\": \\\"一招大模型是由招商银行联合华为、智谱AI，在全国产的设备与训练框架下训练形成的金融领域大语言模型系列。该模型首先在大规模高质量数据上进行预训练，再通过高质量金融数据进行后期优化。\\\",\\n      \\\"source\\\": \\\"ModelScope 魔搭社区\\\",\\n      \\\"date\\\": \\\"2024年12月\\\"\\n    },\\n    {\\n      \\\"title\\\": \\\"一招大模型的行业影响\\\",\\n      \\\"description\\\": \\\"一招大模型的提出不仅是技术创新，更是对银行业服务模式的一次大胆创新。它标志着银行行业将与人工智能深度融合，进入一个全新的智能化服务时代。\\\",\\n      \\\"source\\\": \\\"网易\\\",\\n      \\\"date\\\": \\\"2024年12月12日\\\"\\n    },\\n    {\\n      \\\"title\\\": \\\"一招大模型的商标申请\\\",\\n      \\\"description\\\": \\\"招商银行股份有限公司申请注册了“一招大模型”及相关商标，旨在推动人工智能技术在金融领域的应用与发展。\\\",\\n      \\\"source\\\": \\\"亿欧\\\",\\n      \\\"date\\\": \\\"2024年12月11日\\\"\\n    }\\n  ],\\n  \\\"related_searches\\\": [\\n    \\\"一招大模型商标\\\",\\n    \\\"招行一招大模型\\\",\\n    \\\"招商银行一招大模型\\\",\\n    \\\"招行大模型\\\",\\n    \\\"招商银行申请大模型\\\",\\n    \\\"招商银行大模型\\\"\\n  ]\\n}\\n```\\n\\n[Task history memory ends]\\n[Current state starts here]\\nThe following is one-time information - if you need to remember it write it to memory:\\nCurrent url: https://www.bing.com/search?q=%e4%b8%80%e6%8b%9b%e5%a4%a7%e6%a8%a1%e5%9e%8b&qs=UT&pq=%e4%b8%80%e6%8b%9b%e5%a4%a7%e6%a8%a1%e5%9e%8b&sc=1-5&cvid=90B5926ACCCE4AF78697D50732768863&FORM=QBLH&sp=1&lq=0\\nAvailable tabs:\\n[TabInfo(page_id=0, url='https://www.bing.com/search?q=%e4%b8%80%e6%8b%9b%e5%a4%a7%e6%a8%a1%e5%9e%8b&qs=UT&pq=%e4%b8%80%e6%8b%9b%e5%a4%a7%e6%a8%a1%e5%9e%8b&sc=1-5&cvid=90B5926ACCCE4AF78697D50732768863&FORM=QBLH&sp=1&lq=0', title='一招大模型 - 搜索')]\\nInteractive elements from top layer of the current page inside the viewport:\\n... 26 pixels above - scroll or extract content to see more ...\\n跳至内容\\n[0]<a />\\n[1]<input 在此处输入你的搜索 — 输入时会显示搜索建议;q;一招大模型;search/>\\n[2]<div 语音搜索;button/>\\n[3]<div false;使用图像搜索;button/>\\n[4]<a “搜索”按钮/>\\n[5]<input go;搜索;submit/>\\n[6]<a />\\n[7]<input submit;登录/>\\n[8]<a Microsoft Rewards;false;button/>\\n[9]<a 设置和快速链接;false;button/>\\n[10]<a 全部/>\\n[11]<a 图片/>\\n[12]<a 视频/>\\n[13]<a 地图/>\\n[14]<a 资讯/>\\n[15]<a Dropdown Menu;button>更多/>\\n[16]<a 工具/>\\n约 1,070,000 个结果\\n[17]<div />\\n[18]<a 新浪财经网/>\\n[19]<img />\\n[20]<div https://cj.sina.com.cn › articles › view/>\\n[21]<h2 />\\n[22]<a 招行有“一招（YiZhao）” - 新浪财经网/>\\n2024年12月12日\\n· 如今，招行提出的“一招”大模型，不仅是一次技术创新，更是对银行业服务模式的一次大胆创新，它标志着银行行业将与人工智能深度融合，进入一个全新的智能化服务时代。\\n[23]<a 一招大模型的图片>一招大模型的图片\\nbing.com › images/>\\n[24]<div 单击以向右滚动;button/>\\n[25]<div listitem>finance.sina.com.cn/>\\n[26]<a 搜索 一招大模型 的图像. finance.sina.com.cn. 550 × 170 · png/>\\n[27]<img />\\n[28]<a 招商银行申请大模型商标：一招大模型_新浪财经_新浪网/>\\n[29]<div listitem>zhuanzhi.ai/>\\n[30]<a 搜索 一招大模型 的图像. www.zhuanzhi.ai. 1080 × 608 · jpeg/>\\n[31]<img />\\n[32]<a 【ChatGPT系列报告】国内大模型概览，42页ppt - 专知VIP/>\\n[33]<div listitem>sohu.com/>\\n[34]<a 搜索 一招大模型 的图像. www.sohu.com. 1273 × 806 · jpeg/>\\n[35]<img />\\n[36]<a 招商银行申请 “一招（YiZhao）大模型”商标-北京四海龙知识产权_金融_为客户提供_人工智能/>\\n招商银行申请 “一招（YiZhao）大模型”商标-北京四海龙知识产权_金融_为客户提供_人工智能\\n什么是大模型？（超详细）大模型从入门到精通，看这一篇就够了-CSDN博客\\n查看全部\\n[37]<a 查看所有图像/>\\n[38]<div />\\n[39]<a ModelScope 魔搭社区/>\\n[40]<img />\\n[41]<div https://www.modelscope.cn › models › CMB_AILab › summary/>\\n[42]<h2 />\\n[43]<a 魔搭社区/>\\n一招（YiZhao)是招商银行联合华为、智谱AI，在全国产的设备与训练框架下训练形成的金融领域大语言模型系列。 我们首先在大规模高质量数据上进行预训练，再通过高质量金融数据进行后期 …\\n[44]<div />\\n[45]<a 网易/>\\n[46]<img />\\n[47]<div https://www.163.com › dy › article/>\\n[48]<h2 />\\n[49]<a 招行有“一招（YiZhao）”|风控|金融|银行业 ... - 网易/>\\n2024年12月12日\\n· 如今，招行提出的“一招”大模型，不仅是一次技术创新，更是对银行业服务模式的一次大胆创新，它标志着银行行业将与人工智能深度融合，进入一个全新的智能化服务时代。\\n[50]<div />\\n[51]<a 新浪财经/>\\n[52]<img />\\n[53]<div https://finance.sina.com.cn › tob/>\\n[54]<h2 />\\n[55]<a 招商银行申请大模型商标：一招大模型 - 新浪财经/>\\n新浪科技讯12月11日上午消息，天眼查知识产权信息显示，近日，招商银行股份有限公司申请注册“一招（YiZhao）大模型”“招商银行一招（YiZhao）大 ...\\n[56]<div />\\n[57]<a 亿欧/>\\n[58]<img />\\n[59]<div https://www.iyiou.com › data/>\\n[60]<h2 />\\n[61]<a 招商银行申请注册“一招大模型”商标，聚焦人工智能领域发展/>\\n2024年12月11日\\n· 招商银行股份有限公司近日申请注册“一招大模型”及相关商标，旨在推动人工智能技术在金融领域的应用与发展。 近日，根据天眼查知识产权信息显示，招商银行股份有限公 …\\n[62]<div />\\n[63]<a 搜狐/>\\n[64]<img />\\n[65]<div https://www.sohu.com/>\\n[66]<h2 />\\n[67]<a 招商银行申请‘一招大模型’商标：金融创新的未来或将从此开启！/>\\n2024年12月11日\\n· 近日，招商银行股份有限公司在知识产权领域迈出了新的一步，成功申请了‘一招（YiZhao）大模型’及‘招商银行一招（YiZhao）大模型’的商标。 这一消息于12月11日披露，引 …\\n[68]<div />\\n[69]<a 百家号/>\\n[70]<img />\\n[71]<div https://baijiahao.baidu.com/>\\n[72]<h2 />\\n[73]<a 招商银行布局AI，申请“一招大模型”商标待审 - 百家号/>\\n2024年12月11日\\n· 近期，招商银行股份有限公司在知识产权保护方面有新动作，据天眼查平台披露的信息，该行已正式提交了两项商标申请，分别为“一招（YiZhao）大模型”与“招商银行一 …\\n[74]<div />\\n[75]<a 搜狐/>\\n[76]<img />\\n[77]<div https://www.sohu.com/>\\n[78]<h2 />\\n[79]<a 招商银行再出大招，申请AI商标意在金融科技新潮流_YiZhao_尖 …/>\\n[80]<div />\\n[81]<a 百家号/>\\n[82]<img />\\n[83]<div https://baijiahao.baidu.com/>\\n[84]<h2 />\\n[85]<a 招商银行申请大模型商标：一招大模型 - 百家号/>\\n[86]<div />\\n[87]<a 腾讯网/>\\n[88]<img />\\n[89]<div https://news.qq.com › rain/>\\n[90]<h2 />\\n[91]<a 招商银行注册“一招大模型”商标 - 腾讯网/>\\n[92]<a 一招大模型商标/>\\n[93]<a 招行一招大模型/>\\n[94]<a 招商银行一招大模型/>\\n[95]<a 招行大模型/>\\n[96]<a 招商银行申请大模型/>\\n[97]<a 招商银行大模型/>\\n[98]<a 招商银行大模型商标/>\\n[99]<a 招商银行商标一招/>\\n[100]<a 第 1 页>1/>\\n[101]<a 第 2 页>2/>\\n[102]<a 第 3 页>3/>\\n[103]<a 第 4 页>4/>\\n[104]<a 下一页/>\\n相关搜索\\n[105]<a 一招大模型商标/>\\n[106]<a 招行一招大模型/>\\n[107]<a 招商银行一招大模型/>\\n[108]<a 招行大模型/>\\n[109]<a 招商银行申请大模型/>\\n[110]<a 招商银行大模型/>\\n[111]<a 招商银行大模型商标/>\\n[112]<a 招商银行商标一招/>\\n[113]<a 隐私声明和 Cookie/>\\n[114]<a 法律声明/>\\n[115]<a 广告/>\\n[116]<a 关于我们的广告/>\\n[117]<a 帮助/>\\n[118]<a button>反馈/>\\n[119]<a 消费者健康隐私/>\\n... 1294 pixels below - scroll or extract content to see more ...\\nCurrent step: 4/100Current date and time: 2025-03-27 17:53\\n\",\n      \"role\": \"user\"\n    }\n  ],\n  \"model\": \"deepseek-r1-distill-qwen-32b\",\n  \"stream\": false,\n  \"temperature\": 0\n}\n```\n\n##### [microsoft/*playwright* 71k star](https://github.com/microsoft/playwright)\n\n***Playwright*** is a framework for Web Testing and Automation. It allows testing Chromium, Firefox and WebKit with a single API.\n\n提供js、python、java等sdk允许不用语言通过playwright api操作浏览器\n\n#### Computer-use\n\n##### [claude-3-5-sonnet-20241022 computer-use-demo](https://github.com/anthropics/anthropic-quickstarts/tree/main/computer-use-demo)\n\n1022发布的开源demo，已经可以完成浏览网页，亚马逊购物，画图等功能。llm支持的actions如下：\n\n<img src=\"./2025-03-27-16-12-45-image.png\" title=\"\" alt=\"\" width=\"412\">\n\ncomputer-use-demo代码中会loop调用anthropic api并执行tool action直到llm返回中不包含tool action\n\n**\"用画图画一只猫\"**\n\n![](./2025-03-27-15-45-22-image.png)\n\n##### [OpenAI Computer-use-example](https://platform.openai.com/docs/guides/tools-computer-use)\n\n支持的actions：\n\n```markdown\nscreenshot\nclick\ndouble_click\ntype\nkeypress\nmove\nscroll\nwait\ndrag\n```\n\n![Computer use diagram](https://cdn.openai.com/API/docs/images/cua_diagram.png)\n\n##### [E2B computer-use agent](https://surf.e2b.dev/)\n\n一家为AI提供云虚拟化环境的公司，用开源大模型实现了较好的效果。\n\n<img title=\"\" src=\"./2025-03-27-11-23-48-image.png\" alt=\"\" width=\"539\">\n\n##### [微软 omniParser omniTool](https://github.com/microsoft/OmniParser/)\n\n![](./2025-03-27-15-37-02-image.png)\n\n##### [OS-ATLAS: Foundation Action Model for Generalist GUI Agents](https://arxiv.org/abs/2410.23218)\n\n## MCP及Agent接入\n\n[Introduction - Model Context Protocol](https://modelcontextprotocol.io/introduction)\n\n提供一套标准协议，方便第三方能力(tools, prompts, resources等)快速接入LLM Agents\n\n![](./2025-03-28-09-16-47-image.png)\n\n#### MCP core concepts\n\n![](./2025-03-28-09-22-54-image.png)\n\nofficial java sdk \n\n![](./2025-03-28-09-01-24-image.png)\n\n#### MCP的支持及有趣案例\n\n**LLM App**：Claude destop, OpenAI desktop，Cursor, VS code Cline\n\n**开源社区**：langchain，dify\n\nMCP server案例：\n\n建模引擎：blender, unity\n\n![](./2025-03-28-13-40-50-image.png)\n\n办公类：邮件、会议等\n\n游戏类：steam, minecraft\n\n地图类：谷歌、百度、高德地图\n\nStock类：实时股价、选股\n\nIOT: HomeAssistant，智能家居\n\n#### Open-Source MCP Servers\n\n[GitHub - punkpeye/awesome-mcp-servers: A collection of MCP servers.](https://github.com/punkpeye/awesome-mcp-servers)\n\n[Open-Source MCP servers | Glama](https://glama.ai/mcp/servers)\n\n[MCP.SO](https://mcp.so/)\n\n#### Cline测试\n\nCline安装配置过程略，mcp server仅安装playwright\n\n###### 测试结果\n\ntask prompt：上网搜索一下有关一招大模型的信息，挑几篇网页详细阅读一下，整理出一篇介绍并保存到本地yizhao.md文件，注意标好引用链接地址。\n\n![](./2025-03-28-09-46-40-image.png)\n\n![](./2025-03-28-09-47-23-image.png)\n\n![](./2025-03-28-09-49-17-image.png)\n\n![](./2025-03-28-09-51-33-image.png)\n\n![](./2025-03-28-09-52-06-image.png)\n\n![](./2025-03-28-09-53-16-image.png)\n\n![](./2025-03-28-09-53-54-image.png)\n\n![](./2025-03-28-09-54-36-image.png)\n\n###### cline prompt log\n\ncline systemPrompt 12k tokens，然后loop执行action\n[prompt](./cline-exec-req.txt)\n\n##### 行内cline、mcp、大模型测试：\n\n见内网\n\n总行团队一些案例\n\n#### MCP发展\n\nlangchain社区：[MCP: Flash in the Pan or Future Standard?](https://blog.langchain.dev/mcp-fad-or-fixture/)\n```\n","slug":"manus-study","published":1,"updated":"2025-03-28T06:53:43.832Z","_id":"cm8seq06q0000oi9r075rhwl1","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"Manus及相关技术栈\"><a href=\"#Manus及相关技术栈\" class=\"headerlink\" title=\"Manus及相关技术栈\"></a>Manus及相关技术栈</h1><h3 id=\"manus\"><a href=\"#manus\" class=\"headerlink\" title=\"manus\"></a>manus</h3><h4 id=\"官方示例\"><a href=\"#官方示例\" class=\"headerlink\" title=\"官方示例\"></a>官方示例</h4><p><a href=\"https://manus.im/\">manus.im</a></p>\n<p><strong>ubuntu@sanbox虚拟机</strong></p>\n<p><strong>Terminal</strong>: execute_command</p>\n<img src=\"/2025/03/26/manus-study/2025-03-26-14-20-28-image.png\" class=\"\">\n\n<p><strong>File Editor</strong>: create_file, edit_file</p>\n<img src=\"/2025/03/26/manus-study/2025-03-26-14-22-24-image.png\" class=\"\">\n\n<p><strong>Browser</strong>: browse_file, view_page(需要vllm), scroll_up, scroll_down</p>\n<img src=\"/2025/03/26/manus-study/2025-03-26-17-13-21-image.png\" class=\"\">\n\n<p><strong>用户打断</strong>，新增了几个简历 , 之前制定的 todo.md 内容会新增</p>\n<img src=\"/2025/03/26/manus-study/2025-03-26-17-14-54-image.png\" class=\"\">\n\n<p><strong>用户要求</strong> 将结果写入excel，agent编写代码实现</p>\n<p>execute_command(pip instatll dependencies) + write_file(python script) + execute_command(python xxx.py)</p>\n<img src=\"/2025/03/26/manus-study/2025-03-26-17-28-45-image.png\" class=\"\">\n\n<p>最终交付了excel xlsx文件</p>\n<h4 id=\"其他案例replays\"><a href=\"#其他案例replays\" class=\"headerlink\" title=\"其他案例replays\"></a>其他案例replays</h4><p>✅ <a href=\"https://manus.im/share/xFgpHb15vKqfRPWIs3JJPJ?replay=1\">Comprehensive Tesla Stock Analysis and Investment Insights</a></p>\n<p>❌ <a href=\"https://manus.im/share/nrEydgtF8bLZFeDI8mPpUL?replay=1\">Super Mario Game in Minecraft Style</a></p>\n<h4 id=\"攻击破解\"><a href=\"#攻击破解\" class=\"headerlink\" title=\"攻击破解\"></a>攻击破解</h4><img title=\"\" src=\"./2025-03-27-15-08-32-image.png\" alt=\"\" width=\"377\">\n\n<p>prompt破解：<a href=\"https://gist.github.com/jlia0/db0a9695b3ca7609c9b1a08dcbf872c9\">Manus tools and prompts · GitHub</a> </p>\n<p>虚拟机文件破解：<a href=\"https://github.com/whit3rabbit/manus-open\">manus-open(manus sandbox) · Github</a>  <a href=\"https://manus.im/share/lLR5uWIR5Im3k9FCktVu0k?replay=1\">Replay: Check Files Under /opt/.manus Path - Manus</a></p>\n<p>相关资料：<a href=\"https://cn-sec.com/archives/3845527.html\">分析</a></p>\n<img src=\"/2025/03/26/manus-study/2025-03-27-14-05-43-image.png\" class=\"\">\n\n<h3 id=\"相关开源项目\"><a href=\"#相关开源项目\" class=\"headerlink\" title=\"相关开源项目\"></a>相关开源项目</h3><p><a href=\"https://www.anthropic.com/engineering/building-effective-agents\">Building Effective AI Agents \\ Anthropic 对Agent的定义</a></p>\n<img title=\"\" src=\"./2025-03-28-09-07-01-image.png\" alt=\"\" width=\"443\">\n\n<h4 id=\"OpenHands-OpenDevin\"><a href=\"#OpenHands-OpenDevin\" class=\"headerlink\" title=\"OpenHands(OpenDevin)\"></a>OpenHands(OpenDevin)</h4><p><a href=\"https://github.com/All-Hands-AI/OpenHands/tree/main\">GitHub - All-Hands-AI/OpenHands: 🙌 OpenHands: Code Less, Make More</a></p>\n<img src=\"/2025/03/26/manus-study/2025-03-27-11-34-31-image.png\" class=\"\">\n\n<img title=\"\" src=\"./2025-03-27-14-10-23-image.png\" alt=\"\" width=\"324\">\n\n<h4 id=\"OpenManus\"><a href=\"#OpenManus\" class=\"headerlink\" title=\"OpenManus\"></a>OpenManus</h4><p><a href=\"https://github.com/mannaandpoem/OpenManus\">👋 OpenManus 40k star</a></p>\n<p>google_search搜索引擎 + browser-use浏览器 + python exec代码执行 + subprocess bash执行 + 基础文件操作 </p>\n<img src=\"./2025-03-27-18-16-45-image.png\" title=\"\" alt=\"\" width=\"210\">\n\n<p>ManusAgent -&gt; ToolCallAgent -&gt; ReActAgent </p>\n<p><strong>测试prompt</strong>：打开Bing搜索 搜索一下一招大模型的信息，多看几篇网页，总结一下重要信息</p>\n<p>model: google/gemini-2.0-pro-exp-02-05</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;messages&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;system&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;You are OpenManus, an all-capable AI assistant, aimed at solving any task presented by the user. You have various tools at your disposal that you can call upon to efficiently complete complex requests. Whether it&#x27;s programming, information retrieval, file processing, or web browsing, you can handle it all.&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;user&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;打开Bing搜索 搜索一下一招大模型的信息，多看几篇网页，总结一下重要信息&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;user&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;You can interact with the computer using PythonExecute, save important content and information files through FileSaver, open browsers with BrowserUseTool, and retrieve information using BingSearch.\\n\\nPythonExecute: Execute Python code to interact with the computer system, data processing, automation tasks, etc.\\n\\nFileSaver: Save files locally, such as txt, py, html, etc.\\n\\nBrowserUseTool: Open, browse, and use web browsers.If you open a local HTML file, you must provide the absolute path to the file.\\n\\nBingSearch: Perform web information retrieval, and return ref links, you must use BrowserUseTool to fetch information from these links.\\n\\nBased on user needs, proactively select the most appropriate tool or combination of tools. For complex tasks, you can break down the problem and use different tools step by step to solve it. After using each tool, clearly explain the execution results and suggest the next steps.\\n&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;assistant&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Okay, I will start by searching for information about \\&quot;一招大模型\\&quot; using Bing Search. Then, I will browse the search results and summarize the important information.\\n\\n\\n&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;tool_calls&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;id&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tool_0_bing_search&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;function&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;function&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;bing_search&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;arguments&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&#123;\\&quot;num_results\\&quot;:5,\\&quot;query\\&quot;:\\&quot;一招大模型\\&quot;&#125;&quot;</span></span><br><span class=\"line\">          <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">      <span class=\"punctuation\">]</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tool&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Observed output of cmd `bing_search` executed:\\n[&#x27;https://cj.sina.com.cn/articles/view/5816954579/15ab7aed301901e374&#x27;, &#x27;https://www.modelscope.cn/models/CMB_AILab/YiZhao-12B-Chat/summary&#x27;, &#x27;https://finance.sina.cn/2025-01-03/detail-inecsvux6431783.d.html&#x27;, &#x27;https://finance.sina.com.cn/tob/2024-12-11/doc-inczafmv0853031.shtml&#x27;, &#x27;https://baijiahao.baidu.com/s?id=1818122776352809538&#x27;]&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;bing_search&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;tool_call_id&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tool_0_bing_search&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;user&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;You can interact with the computer using PythonExecute, save important content and information files through FileSaver, open browsers with BrowserUseTool, and retrieve information using BingSearch.\\n\\nPythonExecute: Execute Python code to interact with the computer system, data processing, automation tasks, etc.\\n\\nFileSaver: Save files locally, such as txt, py, html, etc.\\n\\nBrowserUseTool: Open, browse, and use web browsers.If you open a local HTML file, you must provide the absolute path to the file.\\n\\nBingSearch: Perform web information retrieval, and return ref links, you must use BrowserUseTool to fetch information from these links.\\n\\nBased on user needs, proactively select the most appropriate tool or combination of tools. For complex tasks, you can break down the problem and use different tools step by step to solve it. After using each tool, clearly explain the execution results and suggest the next steps.\\n&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;assistant&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Now I will browse the search results to gather information. I will start with the first link.\\n&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;tool_calls&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;id&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tool_0_browser_use&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;function&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;function&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;browser_use&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;arguments&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&#123;\\&quot;url\\&quot;:\\&quot;https://cj.sina.com.cn/articles/view/5816954579/15ab7aed301901e374\\&quot;,\\&quot;action\\&quot;:\\&quot;navigate\\&quot;&#125;&quot;</span></span><br><span class=\"line\">          <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">      <span class=\"punctuation\">]</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tool&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Observed output of cmd `browser_use` executed:\\nNavigated to https://cj.sina.com.cn/articles/view/5816954579/15ab7aed301901e374&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;browser_use&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;tool_call_id&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tool_0_browser_use&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;user&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;You can interact with the computer using PythonExecute, save important content and information files through FileSaver, open browsers with BrowserUseTool, and retrieve information using BingSearch.\\n\\nPythonExecute: Execute Python code to interact with the computer system, data processing, automation tasks, etc.\\n\\nFileSaver: Save files locally, such as txt, py, html, etc.\\n\\nBrowserUseTool: Open, browse, and use web browsers.If you open a local HTML file, you must provide the absolute path to the file.\\n\\nBingSearch: Perform web information retrieval, and return ref links, you must use BrowserUseTool to fetch information from these links.\\n\\nBased on user needs, proactively select the most appropriate tool or combination of tools. For complex tasks, you can break down the problem and use different tools step by step to solve it. After using each tool, clearly explain the execution results and suggest the next steps.\\n&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;assistant&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Now I will get the text content of the page.\\n&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;tool_calls&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;id&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tool_0_browser_use&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;function&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;function&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;browser_use&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;arguments&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&#123;\\&quot;action\\&quot;:\\&quot;get_text\\&quot;&#125;&quot;</span></span><br><span class=\"line\">          <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">      <span class=\"punctuation\">]</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tool&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Observed output of cmd `browser_use` executed:\\n注册\\n登录\\n新浪财经APP\\n宏观经济\\nA股\\n港股\\n美股\\n基金\\n理财\\n黄金\\n期货\\n能源\\n互联网金融\\n房地产\\n更多\\n招行有“一招（YiZhao）”\\n2024年12月12日 08:01 支付之家网\\n语音播报\\n缩小字体\\n放大字体\\n微博\\n微信\\n分享\\n0\\n\\n在快速发展的数字化浪潮中，银行业正面临着一次前所未有的变革。\\n\\n近日，招商银行申请注册了“一招(YiZhao)大模型”和“招商银行一招(YiZhao)大模型”商标，这一举动不仅让人对招行的科技布局充满了期待，也透露出银行在人工智能（AI）领域的深远布局。这一商标涉及多个国际分类领域，包括广告销售、网站服务、科学仪器等，预示着招行可能会推出更多基于AI大模型技术的创新产品或服务。\\n\\n招行作为金融行业的科技创新先锋，一直以来都在数字化转型方面走在行业的前列。从推出“一卡通”到开发智能客服“招小宝”，再到利用区块链技术打造金融服务平台，招行始终致力于提升客户体验、优化服务效率。\\n\\n如今，招行提出的“一招”大模型，不仅是一次技术创新，更是对银行业服务模式的一次大胆创新，它标志着银行行业将与人工智能深度融合，进入一个全新的智能化服务时代。\\n\\n大模型与金融科技的深度融合\\n\\n以ChatGPT为代表的大模型技术，展示了强大的自然语言处理与生成能力，其应用已拓展至教育、医疗、法律等多个领域。然而，银行业作为一个数据密集且高度专业化的行业，对大模型提出了更高的要求：不仅需要对行业术语、法律法规以及复杂的客户需求进行精确理解，还需要在服务个性化、运营自动化和风险控制等方面提供专业的解决方案。\\n\\n1. 从通用模型到行业模型\\n\\n虽然像ChatGPT这样的通用模型可以处理广泛的问题，但其在金融场景中的表现需要进一步优化。例如，银行客服需要处理精准的账户查询，投资顾问需要结合客户的财务数据和市场走势提供个性化建议。这些需求要求大模型具备更强的专业化和场景化能力。\\n\\n2. 金融行业的智慧化转型\\n\\n银行业的数字化转型已迈入深水区，未来的竞争核心在于智慧化服务。大模型不仅可以作为客户的智能助手，为其提供洞察性的理财建议；也可以作为员工的数字化伙伴，帮助其提升工作效率、优化决策过程。\\n\\n招商银行信息技术部副总经理俞吴杰透露，针对AI与大语言模型，目前招行的重点在于智算平台的建设。“原来的服务器集群叫通算平台，和大模型相关的叫智算平台。智算平台既包含招行的训练平台，也包括推理平台。”他提到，招行探索大模型的目标不是建立通用模型，而是在金融行业建设垂直领域的大模型。\\n\\n招行的创新不仅局限于大模型的应用，还深入探索了低代码平台与大模型的结合。低代码开发可以大幅降低开发门槛，让业务用户也能参与到系统开发中来。而大模型的引入，使得低代码开发过程变得更加高效和智能。\\n\\n招商银行自2019年启动了企业级低代码开发平台的建设，五年来，低代码平台已成为业务系统开发的重要基础，支持零代码和低代码两种开发模式。尤其在2023年，招行进一步探索了低代码与大模型的融合，提升了开发者的体验，推动了银行业务的科技平民化。\\n\\n大模型驱动的银行业智慧化转型\\n\\n银行业的竞争日益激烈，未来的核心竞争力将在于智慧化服务。大模型技术不仅仅是在后台支持银行的智能化运作，更是在客户交互、金融服务等方面发挥着重要作用。\\n\\n在银行业中，大模型技术的落地应用正在重塑行业生态，其核心场景包括：\\n\\n1. 智能客服：更主动的客户体验\\n\\n大模型支持从被动响应向主动交互转变。传统客服主要解答客户的固定问题，而大模型赋能下的智能客服可以实时分析客户意图，提供个性化建议。例如，在客户咨询投资时，客服不仅能快速匹配合适的理财产品，还能生成详细的市场分析和风险评估。\\n\\n2. 风险控制：实时监测与动态优化\\n\\n金融风险管理是银行的核心业务之一。大模型通过对海量交易数据的实时分析，能够迅速识别异常行为，提高欺诈检测的精度。同时，它还可以结合外部政策、经济数据，动态调整风控模型，为银行提供更可靠的风险管理支持。\\n\\n3. 个性化投顾：精准洞察客户需求\\n\\n传统的理财服务往往以人工顾问为主，但其覆盖面和效率有限。大模型可以分析客户的财务状况、风险偏好以及历史行为数据，生成个性化的投资建议，从而覆盖更多长尾客户，提升服务普惠性。\\n\\n4. 内部流程优化：高效协同与智能辅助\\n\\n银行内部流程复杂，例如贷款审批、合同审阅等，通常需要耗费大量时间。大模型可以实现这些流程的自动化处理，不仅节约人力成本，还能大幅提高效率。例如，它可以在合同审阅中快速标记风险条款，并给出修改建议。\\n\\n5. 合规性与透明度：监管与服务的双赢\\n\\n金融行业的高度合规性要求对技术提出了更高标准。大模型可以实时监控业务流程，确保操作符合监管要求。同时，它还能生成易于理解的报告，帮助客户更清楚地了解自身的金融行为和合规情况。\\n\\n招行“一招”的潜力与战略意义\\n\\n此次“一招”大模型商标的申请，展示了招行在数字化与智能化转型上的战略决心。结合其多年积累的技术优势和场景深耕，“一招”有望成为银行业大模型应用的标杆。\\n\\n1. 数据、技术与场景的深度融合\\n\\n招行拥有丰富的客户数据和复杂的业务场景，这为训练和优化大模型提供了强大的基础。通过将技术与实际业务深度结合，招行能够开发出更贴近客户需求、更具竞争力的智能服务。\\n\\n2. 从银行服务到金融生态的扩展\\n\\n“一招”大模型的潜力不仅限于银行内部业务，还可能扩展到更广阔的金融生态。例如，通过开放接口，与中小企业和金融科技公司合作，提供智能风控、自动化运营等服务，助力整个行业的数字化升级。\\n\\n3. 智能化驱动的服务升级\\n\\n从“一卡通”到“掌上生活”APP，招行一直致力于提升客户体验。“一招”大模型的推出，将进一步推动银行服务从标准化向个性化、从单向服务向双向交互转型，为客户带来更加高效、贴心的金融服务。\\n\\n挑战与机遇：技术落地的关键问题\\n\\n招行在低代码与大模型领域的创新实践，标志着其数字化转型进程中的重要一步。然而，尽管大模型在银行业的应用前景广阔，但其实际落地仍面临一些挑战：\\n\\n数据安全与隐私保护\\n\\n银行掌握着大量敏感数据，大模型的开发和使用需要确保信息的安全性与合规性，避免客户隐私泄露。\\n\\n模型的可解释性与透明性\\n\\n在金融场景中，决策结果必须具备高可解释性，既要让客户信服，也要满足监管要求。这对大模型的技术设计提出了更高的要求。\\n\\n技术迭代与生态协同\\n\\n大模型技术发展迅速，银行需要保持技术敏锐度，同时建立与外部技术生态的良好协同，以实现持续的创新与突破。\\n\\n尽管面临挑战，招行凭借其在技术上的深厚积累，已经在人工智能、大模型和低代码开发方面积累了宝贵经验，未来将在智能化服务、金融生态的建设上继续推动行业的革新。\\n\\n“一招”大模型的商标申请，不仅标志着招行在人工智能领域迈出了重要一步，也揭示了未来银行业智慧化服务的趋势：以技术为驱动，从底层重塑客户体验和运营模式。\\n\\n在这个技术与金融深度融合的时代，招行以“一招”出击，向行业展示了金融科技创新的无限可能。未来，我们期待看到招行将这一“妙招”变为实招，助力客户与行业在智能时代中共创辉煌。\\n\\n注：本文为支付之家网投稿，作者系业内从业人员，文中观点仅代表作者个人观点\\n\\n0条评论|0人参与\\n网友评论\\n登录|注册\\n发布\\n相关新闻\\n加载中 \\n头条号入驻\\n支付之家网\\n支付之家网(ZFZJ.CN)官方头条号！\\n大阪严禁老人在ATM机前打电话丨试点向移动支付平台开放信用监管数据\\n今日截止，国资支付牌照挂牌转让！\\n央视曝光，2家支付机构被“另案处理”！\\n财经自媒体联盟\\n今日推荐\\n优秀作者\\n看点月榜\\nCEO下了飞机就来谈合作！为何外企纷纷看多中国？｜宅男财经\\n\\n中新经纬\\n\\n实测完DeepSeek发布的新模型，我觉得AI编程的全民普惠时刻\\n\\n数字生命卡兹克\\n\\n疯狂小杨哥要回归了？三只羊公司累计赔付近三千万 具备恢复经营条件\\n\\n雷达财经\\n\\n阿里蔡崇信：民企座谈会被低估了，人工智能市场10万亿美金\\n\\n盈利靠“节衣缩食”，虎牙的日子越来越难过了\\n\\n互联网分析师于斌\\n\\n新浪财经头条意见反馈留言板\\n\\n4000520066 欢迎批评指正\\n\\n关于头条 | 如何入驻 | 发稿平台 | 奖励机制 版权声明 | 用户协议 | 帮助中心\\nCopyright © 1996-2019 SINA Corporation\\nAll Rights Reserved 新浪公司 版权所有\\n新浪首页\\n语音播报\\n相关新闻\\n返回顶部&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;browser_use&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;tool_call_id&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tool_0_browser_use&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;user&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;You can interact with the computer using PythonExecute, save important content and information files through FileSaver, open browsers with BrowserUseTool, and retrieve information using BingSearch.\\n\\nPythonExecute: Execute Python code to interact with the computer system, data processing, automation tasks, etc.\\n\\nFileSaver: Save files locally, such as txt, py, html, etc.\\n\\nBrowserUseTool: Open, browse, and use web browsers.If you open a local HTML file, you must provide the absolute path to the file.\\n\\nBingSearch: Perform web information retrieval, and return ref links, you must use BrowserUseTool to fetch information from these links.\\n\\nBased on user needs, proactively select the most appropriate tool or combination of tools. For complex tasks, you can break down the problem and use different tools step by step to solve it. After using each tool, clearly explain the execution results and suggest the next steps.\\n&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;assistant&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;The text content from the first search result is now available. It appears to be an article about \\&quot;一招(YiZhao)大模型\\&quot; from a financial perspective, specifically focusing on the application by China Merchants Bank (招商银行).\\n\\nHere&#x27;s a summary of the key information:\\n\\n*   **招商银行 (China Merchants Bank) is developing an AI model called \\&quot;一招(YiZhao)\\&quot;**: They have applied for trademarks related to this model.\\n*   **Focus on Financial Applications**: The model is intended for use in various financial services, including customer service, risk control, and personalized investment advice.\\n*   **Integration with Low-Code Development**:  招商银行 is also integrating the model with low-code development platforms to improve efficiency.\\n*   **Benefits**: The article highlights potential benefits such as improved customer experience, operational efficiency, and risk management.\\n*   **Challenges**: The article also mentions challenges like data security, model explainability, and the need for continuous technological advancements.\\n\\nNow, I will proceed to the second search result to gather more information.\\n&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;tool_calls&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;id&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tool_0_browser_use&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;function&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;function&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;browser_use&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;arguments&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&#123;\\&quot;url\\&quot;:\\&quot;https://www.modelscope.cn/models/CMB_AILab/YiZhao-12B-Chat/summary\\&quot;,\\&quot;action\\&quot;:\\&quot;navigate\\&quot;&#125;&quot;</span></span><br><span class=\"line\">          <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">      <span class=\"punctuation\">]</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tool&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Observed output of cmd `browser_use` executed:\\nError: Browser action &#x27;navigate&#x27; failed: Page.goto: Timeout 30000ms exceeded.\\nCall log:\\n  - navigating to \\&quot;https://www.modelscope.cn/models/CMB_AILab/YiZhao-12B-Chat/summary\\&quot;, waiting until \\&quot;load\\&quot;\\n&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;browser_use&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;tool_call_id&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tool_0_browser_use&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;user&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;You can interact with the computer using PythonExecute, save important content and information files through FileSaver, open browsers with BrowserUseTool, and retrieve information using BingSearch.\\n\\nPythonExecute: Execute Python code to interact with the computer system, data processing, automation tasks, etc.\\n\\nFileSaver: Save files locally, such as txt, py, html, etc.\\n\\nBrowserUseTool: Open, browse, and use web browsers.If you open a local HTML file, you must provide the absolute path to the file.\\n\\nBingSearch: Perform web information retrieval, and return ref links, you must use BrowserUseTool to fetch information from these links.\\n\\nBased on user needs, proactively select the most appropriate tool or combination of tools. For complex tasks, you can break down the problem and use different tools step by step to solve it. After using each tool, clearly explain the execution results and suggest the next steps.\\n&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;assistant&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;The attempt to navigate to the second URL timed out. I will try again.\\n&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;tool_calls&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;id&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tool_0_browser_use&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;function&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;function&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;browser_use&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;arguments&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&#123;\\&quot;url\\&quot;:\\&quot;https://www.modelscope.cn/models/CMB_AILab/YiZhao-12B-Chat/summary\\&quot;,\\&quot;action\\&quot;:\\&quot;navigate\\&quot;&#125;&quot;</span></span><br><span class=\"line\">          <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">      <span class=\"punctuation\">]</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tool&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Observed output of cmd `browser_use` executed:\\nNavigated to https://www.modelscope.cn/models/CMB_AILab/YiZhao-12B-Chat/summary&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;browser_use&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;tool_call_id&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tool_0_browser_use&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;user&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;You can interact with the computer using PythonExecute, save important content and information files through FileSaver, open browsers with BrowserUseTool, and retrieve information using BingSearch.\\n\\nPythonExecute: Execute Python code to interact with the computer system, data processing, automation tasks, etc.\\n\\nFileSaver: Save files locally, such as txt, py, html, etc.\\n\\nBrowserUseTool: Open, browse, and use web browsers.If you open a local HTML file, you must provide the absolute path to the file.\\n\\nBingSearch: Perform web information retrieval, and return ref links, you must use BrowserUseTool to fetch information from these links.\\n\\nBased on user needs, proactively select the most appropriate tool or combination of tools. For complex tasks, you can break down the problem and use different tools step by step to solve it. After using each tool, clearly explain the execution results and suggest the next steps.\\n&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;assistant&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Now I will get the text content of the page.\\n\\n&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;tool_calls&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;id&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tool_0_browser_use&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;function&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;function&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;browser_use&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;arguments&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&#123;\\&quot;action\\&quot;:\\&quot;get_text\\&quot;&#125;&quot;</span></span><br><span class=\"line\">          <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">      <span class=\"punctuation\">]</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tool&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Observed output of cmd `browser_use` executed:\\n首页\\n模型库\\n数据集\\n创空间\\nAIGC专区\\n文档中心\\n社区\\nGitHub\\n登录 / 注册\\n一招-12B-Chat\\nCMB_AILab/YiZhao-12B-Chat\\nYiZhao\\n@招商银行人工智能实验室提供64下载2025-01-14更新\\nNotebook快速开发\\n喜欢\\n加入合集\\n模型介绍\\n模型文件\\n交流反馈3\\n一招（YiZhao)使用指南\\n\\n大模型金融能力榜单 • 模型文件 • 开源数据\\n\\n目录\\n模型介绍\\n效果评测\\n快速开始\\n声明与协议\\n最新动态\\n2024年12月10日 开源2TB高质量多模态的大模型训练数据集\\n模型介绍\\n\\n一招（YiZhao)是招商银行联合华为、智谱AI，在全国产的设备与训练框架下训练形成的金融领域大语言模型系列。我们首先在大规模高质量数据上进行预训练，再通过高质量金融数据进行后期微调（SFT），最后通过直接偏好优化（DPO）进一步优化模型，最终训练出了YiZhao-12B-Chat。YiZhao-12B-Chat具备自然语言理解、文本生成、舆情事件抽取、工具使用、对话互动等多种功能。YiZhao-12B-Chat是一个专为金融领域设计的 120亿参数大型语言模型，支持32K上下文长度。 主要特点包括：\\n\\n对海量通用语料与金融语料进行了多维度数据清洗与筛选，保证训练数据的数量和质量。\\n\\nYiZhao-12B-Chat是基于GLM（General Language Model）架构的中英双语对话模型，具有120亿参数，对问答和对话场景进行了优化。\\n\\nYiZhao-12B-Chat完全基于国产算力和国产深度学习框架MindSpore进行训练，算力和算法框架更自主可控。\\n\\n这款模型在云端私有化部署后，可以为企业和个人提供高效、灵活的智能对话解决方案。\\n\\n下载链接：\\n\\n社区\\t下载地址\\n魔搭社区（mindspore）\\thttps://www.modelscope.cn/models/CMB_AILab/YiZhao-12B-Chat/\\n魔搭社区（safetensor）\\thttps://modelscope.cn/models/CMB_AILab/YiZhao-12B-Chat-HF\\n魔乐社区 （mindspore）\\thttps://modelers.cn/models/CMB_AI_Lab/YiZhao-12B-Chat/\\n码云\\thttps://gitee.com/mindspore/mindformers/tree/dev/research/yizhao\\n效果评测\\n\\n效果评测包括通用能力评测和金融领域评测。模型在保持通用能力的基础上进一步提升了金融领域能力。\\n\\n1. 通用评测\\n\\n在通用领域评测中，我们选择当下主流的几类客观评测基准，见下表：\\n\\n能力\\t任务\\t描述\\n逻辑推理\\tARC Challenge\\tARC问题需要多种类型的知识与推理，包括定义、基本事实和属性、结构、过程与因果、目的论、代数、实验、空间/运动学、类比等，ARC问题集包含7787个自然科学问题\\n中文知识\\tCMMLU\\t67个学科中文考试题\\n数学能力\\tGSM8K\\t8.5k个样例，数学推理能力\\n通用知识\\tMMLU\\tMMLU 是一个涵盖STEM、人文学科、社会科学等57个学科领域(例如：数学、法律、伦理等)的评测基准，旨在考察大语言模型将知识运用于问题解决的能力\\n指令遵从\\tIFEval\\t确定了25种可验证的指令类型，500个包含一个或多个可验证指令的提示（prompts）\\n测试结果如下：\\n模型\\t逻辑推理\\t中文知识\\t数学能力\\t通用知识\\t指令遵从\\n\\tarc_challenge\\tcmmlu\\tgsm8k\\tmmlu\\tifeval\\n一招-12B-Chat\\t0.9331\\t0.7158\\t0.8993\\t0.7192\\t0.5432\\n小结：\\n\\nYiZhao-12B在通用评测集方面均有出色表现。\\n\\nYiZhao-12B的预训练方案并没有牺牲过多模型通用能力，而且增量训练数据中的中文金融数据，也一定程度地增强了模型的逻辑推理、中文、数学等能力。\\n\\n2. 金融评测\\n\\n金融评测主要包括以下三个测试：\\n\\n任务\\t描述\\nCCKS-IJCKG：DFMEB\\t为了推动LLM在数字金融领域的发展，并解决实际金融业务问题。招商银行联合中科院自动化所、科大讯飞股份有限公司，结合实际生产场景，推出数字金融领域评测基准（Digital Finance Model Evaluation Benchmark，DFMEB）。该评测基准包含六大场景（知识问答、文本理解、内容生成、逻辑推理、安全合规、AI智能体），涵盖69种金融任务，有利于帮助开源社区和业界快速评测公开或者自研LLM。\\nCFBenchmark-OpenFinData\\t“书生•济世”中文金融评测基准（CFBenchmark）基础版本由CFBenchmark-Basic（全部为主观题，不参与测评）和CFBenchmark-OpenFinData两部分数据组成。OpenFinData是由东方财富与上海人工智能实验室联合发布的开源金融评测数据集。该数据集代表了最真实的产业场景需求，是目前场景最全、专业性最深的金融评测数据集。它基于东方财富实际金融业务的多样化丰富场景，旨在为金融科技领域的研究者和开发者提供一个高质量的数据资源。\\nFinancelQ\\tFinanceIQ是一个专业的金融领域评测集，其涵盖了10个金融大类及36个金融小类，总计7173个单项选择题，某种程度上可客观反应模型的金融能力。\\n测试结果如下：\\n模型\\tCCKS-IJCKG：DFMEB\\tCFBenchmark-OpenFinData\\tFinancelQ\\n一招-12B-Chat\\t0.8218\\t0.8798\\t0.6867\\n小结：\\n\\nYiZhao-12B-Chat在金融测评方面表现优异。\\n\\nYiZhao-12B-Chat有着较强的专业知识能力，在金融分析、金融考核、金融安全合规、风险检查等多个专业领域维度有着出色的表现。\\n\\n快速开始\\n\\nYiZhao-12B-Chat模型已发布在魔搭社区、魔乐社区，请根据上述链接进行下载。下方为模型的推理部署使用方法。\\n\\n依赖软件\\n\\n下表列出了运行一招推理所需的环境和第三方依赖。\\n\\n软件名称\\t版本\\t作用\\nMindSpore\\t2.4.0\\t深度学习框架\\nMindSpore Transformers\\t1.3.0\\t大模型全流程开发套件\\nCANN\\t8.0.RC3.beta1\\t昇腾异构计算架构\\nsympy\\t1.13.3\\t三方依赖包\\nPython\\t3.10\\tMindSpore的使用依赖Python环境\\nGCC\\t7.3.0\\t用于编译MindSpore的C++编译器\\n\\n注：MindSpore官网介绍：https://www.mindspore.cn/\\n\\n安装指导\\n1. 安装CANN\\n\\n下载CANN社区版，选择8.0.RC3.beta1版本，按顺序执行：\\n\\n./Ascend-cann-toolkit_8.0.RC3_linux-aarch64.run --install --install-for-all --install-path=/usr/local/Ascend/\\n./Ascend-cann-kernels-910b_8.0.RC3_linux-aarch64.run --install --install-path=/usr/local/Ascend/\\n\\n\\n安装完毕后执行：\\n\\npip uninstall te topi hccl -y\\npip install sympy\\npip install /usr/local/Ascend/ascend-toolkit/latest/lib64/te-*-py3-none-any.whl\\npip install /usr/local/Ascend/ascend-toolkit/latest/lib64/hccl-*-py3-none-any.whl\\n\\n2. 安装MindSpore\\npip install https://ms-release.obs.cn-north-4.myhuaweicloud.com/2.4.0/MindSpore/unified/aarch64/mindspore-2.4.0-cp310-cp310-linux_aarch64.whl --trusted-host ms-release.obs.cn-north-4.myhuaweicloud.com -i https://pypi.tuna.tsinghua.edu.cn/simple\\n\\n\\n验证MindSpore与CANN是否安装成功：\\n\\nsource /usr/local/Ascend/ascend-toolkit/set_env.sh # 每次运行时都需要设置此环境变量\\npython -c \\&quot;import mindspore;mindspore.set_context(device_target=&#x27;Ascend&#x27;);mindspore.run_check()\\&quot;\\n\\n3. 安装MindSpore Transformers\\npip install mindformers==1.3.0\\n\\n4. 安装openmind-hub\\npip install openmind-hub  #如需自动下载，需要安装额外依赖openmind-hub\\n\\n代码示例\\n\\n此处提供一个代码示例，展示如何加载tokenizer和模型，并如何生成内容：\\n\\n\\nimport os\\nimport time\\nimport mindspore as ms\\nfrom mindformers.pipeline import pipeline\\n\\nos.environ[\\&quot;RUN_MODE\\&quot;] = \\&quot;predict\\&quot;\\nos.environ[\\&quot;MS_INTERNAL_DISABLE_CUSTOM_KERNEL_LIST\\&quot;] = \\&quot;PagedAttention\\&quot;\\nms.set_context(device_id=0, mode=0, device_target=&#x27;Ascend&#x27;, jit_config=&#123;&#x27;jit_level&#x27;: &#x27;O0&#x27;, &#x27;infer_boost&#x27;: &#x27;on&#x27;&#125;)\\n\\npipeline_task = pipeline(task=\\&quot;text_generation\\&quot;,\\n                         model=\\&quot;CMB_AILab/YiZhao-12B-Chat\\&quot;,  # model_path\\n                         framework=&#x27;ms&#x27;,\\n                         model_kwargs=&#123;\\&quot;use_past\\&quot;: True&#125;,\\n                         trust_remote_code=True\\n                         )\\nwhile True:\\n    input_ = input(\\&quot;模型输入: \\&quot;)\\n    template = f\\&quot;&lt;|user|&gt;&#123;input_&#125;&lt;|assistant|&gt;\\&quot;\\n\\n    pipeline_result = pipeline_task(template, do_sample=False, seed=int(time.time()))\\n    print(pipeline_result[0][\\&quot;text_generation_text\\&quot;][0].replace(f\\&quot;&#123;input_&#125;\\&quot;, \\&quot;\\&quot;, 1))\\n\\n声明与协议\\n声明\\n\\n我们在此声明，不要使用一招（YiZhao）模型及其衍生模型进行任何危害国家社会安全或违法的活动。同时，我们也要求使用者不要将一招（YiZhao）用于未经必要安全审查和备案的互联网服务。我们希望所有使用者遵守上述原则，确保科技发展在合法合规的环境下进行。\\n\\n我们已经尽我们所能，来确保模型训练过程中使用的数据及模型的合规性。然而，尽管我们已经做出了巨大的努力，但由于模型和数据的复杂性，仍有可能存在一些无法预见的问题。使用者应结合使用场景、使用目的、涉及数据敏感性、预期运行环境，进行必要的测试，了解了大模型局限性，评估潜在风险及使用大模型的合法性及适当性，采取必要的缓释措施，并履行必要的安全及合规义务。因使用一招（YiZhao）开源模型而导致的任何问题，包括但不限于数据安全问题、公共舆论风险，或模型被误导、滥用、传播或不当利用所带来的任何风险和问题，我们将不承担任何责任。\\n\\n协议\\n\\n社区使用一招（YiZhao）模型需要遵循《“一招（YiZhao）”许可协议》。\\n\\n如果使用方为非自然人实体，您需要通过以下联系邮箱ailab@cmbchina.com，提交《“一招（YiZhao）”许可协议》要求的申请材料。审核通过后，将特此授予您一个非排他性、全球性、不可转让、不可再许可、可撤销和免版税的有限许可，但仅限于被许可方内部的使用、复制、分发以及修改，并且应当遵守《“一招（YiZhao）”许可协议》。\\n\\n作者：\\n招商银行人工智能实验室\\n  \\n模型 2\\n数据集 0\\n创空间 0\\n收录本模型的合集（ 1 ）\\nAIOps\\n2025.03.20\\n3\\n0\\n\\n分享\\n\\n© 2022-2025 ModelScope.cn 版权所有&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;browser_use&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;tool_call_id&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tool_0_browser_use&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;user&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;You can interact with the computer using PythonExecute, save important content and information files through FileSaver, open browsers with BrowserUseTool, and retrieve information using BingSearch.\\n\\nPythonExecute: Execute Python code to interact with the computer system, data processing, automation tasks, etc.\\n\\nFileSaver: Save files locally, such as txt, py, html, etc.\\n\\nBrowserUseTool: Open, browse, and use web browsers.If you open a local HTML file, you must provide the absolute path to the file.\\n\\nBingSearch: Perform web information retrieval, and return ref links, you must use BrowserUseTool to fetch information from these links.\\n\\nBased on user needs, proactively select the most appropriate tool or combination of tools. For complex tasks, you can break down the problem and use different tools step by step to solve it. After using each tool, clearly explain the execution results and suggest the next steps.\\n&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;model&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;google/gemini-2.0-flash-lite-preview-02-05:free&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;max_tokens&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">128000</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;temperature&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;tool_choice&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;auto&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;tools&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;function&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;function&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;python_execute&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;description&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Executes Python code string. Note: Only print outputs are visible, function return values are not captured. Use print statements to see results.&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;parameters&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;object&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;properties&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;code&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">              <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;string&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">              <span class=\"attr\">&quot;description&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;The Python code to execute.&quot;</span></span><br><span class=\"line\">            <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">          <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;required&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">            <span class=\"string\">&quot;code&quot;</span></span><br><span class=\"line\">          <span class=\"punctuation\">]</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">      <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;function&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;function&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;bing_search&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;description&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;执行必应搜索并返回相关链接列表。\\n当需要获取互联网信息或英文内容时建议使用此工具。\\n工具返回与搜索查询匹配的URL列表。后续可以通过browser_use工具去进行访问URL&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;parameters&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;object&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;properties&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;query&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">              <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;string&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">              <span class=\"attr\">&quot;description&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;(必填) 提交给必应的搜索关键词&quot;</span></span><br><span class=\"line\">            <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;num_results&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">              <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;integer&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">              <span class=\"attr\">&quot;description&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;(可选) 返回的搜索结果数量，默认5&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">              <span class=\"attr\">&quot;default&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">5</span></span><br><span class=\"line\">            <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">          <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;required&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">            <span class=\"string\">&quot;query&quot;</span></span><br><span class=\"line\">          <span class=\"punctuation\">]</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">      <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">]</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"LangManus\"><a href=\"#LangManus\" class=\"headerlink\" title=\"LangManus\"></a>LangManus</h4><p><a href=\"https://github.com/langmanus/langmanus/tree/main\"> 🦜🤖 LangManus 5.2k star</a></p>\n<p>基于langchain生态multiAgents实现类似功能，tavily搜索引擎 + jina爬虫 + browser-use浏览器 + pythonREPL代码执行 + subprocess bash执行 + 基础文件操作</p>\n<img title=\"\" src=\"./2025-03-27-14-29-59-image.png\" alt=\"\" width=\"504\" data-align=\"left\">\n\n<p>系统由以下智能体协同工作：</p>\n<ol>\n<li><strong>协调员（Coordinator）</strong>：工作流程的入口点，处理初始交互并路由任务</li>\n<li><strong>规划员（Planner）</strong>：分析任务并制定执行策略</li>\n<li><strong>主管（Supervisor）</strong>：监督和管理其他智能体的执行</li>\n<li><strong>研究员（Researcher）</strong>：收集和分析信息</li>\n<li><strong>程序员（Coder）</strong>：负责代码生成和修改</li>\n<li><strong>浏览器（Browser）</strong>：执行网页浏览和信息检索 </li>\n<li><strong>汇报员（Reporter）</strong>：生成工作流结果的报告和总结</li>\n</ol>\n<p>实现这些agents一共只用到了以下tools</p>\n<img title=\"\" src=\"./2025-03-27-14-51-50-image.png\" alt=\"\" width=\"223\" data-align=\"left\">\n\n<p>由supervisor控制loop和结束, prompt如下</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">You are a supervisor coordinating a team of specialized workers to complete tasks. Your team consists of: [&#123;&#123; TEAM<span class=\"emphasis\">_MEMBERS|join(&quot;, &quot;) &#125;&#125;].</span></span><br><span class=\"line\"><span class=\"emphasis\"></span></span><br><span class=\"line\"><span class=\"emphasis\">For each user request, you will:</span></span><br><span class=\"line\"><span class=\"emphasis\"></span></span><br><span class=\"line\"><span class=\"emphasis\">Analyze the request and determine which worker is best suited to handle it next</span></span><br><span class=\"line\"><span class=\"emphasis\">Respond with ONLY a JSON object in the format: &#123;&quot;next&quot;: &quot;worker_</span>name&quot;&#125;</span><br><span class=\"line\">Review their response and either:</span><br><span class=\"line\">Choose the next worker if more work is needed (e.g., &#123;&quot;next&quot;: &quot;researcher&quot;&#125;)</span><br><span class=\"line\">Respond with &#123;&quot;next&quot;: &quot;FINISH&quot;&#125; when the task is complete</span><br><span class=\"line\">Always respond with a valid JSON object containing only the &#x27;next&#x27; key and a single value: either a worker&#x27;s name or &#x27;FINISH&#x27;.</span><br><span class=\"line\"></span><br><span class=\"line\">Team Members</span><br><span class=\"line\">&#123;% for agent in TEAM<span class=\"emphasis\">_MEMBERS %&#125;</span></span><br><span class=\"line\"><span class=\"emphasis\"></span></span><br><span class=\"line\"><span class=\"emphasis\">&#123;&#123;agent&#125;&#125;: &#123;&#123; TEAM_</span>MEMBER<span class=\"emphasis\">_CONFIGRATIONS[<span class=\"string\">agent</span>][<span class=\"symbol\">&quot;desc_for_llm&quot;</span>] &#125;&#125; &#123;% endfor %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"开源基础组件\"><a href=\"#开源基础组件\" class=\"headerlink\" title=\"开源基础组件\"></a>开源基础组件</h3><h4 id=\"Browser-use\"><a href=\"#Browser-use\" class=\"headerlink\" title=\"Browser-use\"></a>Browser-use</h4><p><a href=\"https://github.com/browser-use/browser-use\">GitHub - browser-use/browser-use 🤖  49K star</a></p>\n<p>🌐 Browser-use is the easiest way to connect your AI agents with the browser. 它集成了开源浏览器自动化工具playwright来实现api控制浏览器行为，并内置了一个Agent，通过react让 llm loop执行直到完成用户指令。基本用法如下</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> langchain_openai <span class=\"keyword\">import</span> ChatOpenAI</span><br><span class=\"line\"><span class=\"keyword\">from</span> browser_use <span class=\"keyword\">import</span> Agent</span><br><span class=\"line\"><span class=\"keyword\">import</span> asyncio</span><br><span class=\"line\"><span class=\"keyword\">from</span> dotenv <span class=\"keyword\">import</span> load_dotenv</span><br><span class=\"line\">load_dotenv()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">def</span> <span class=\"title function_\">main</span>():</span><br><span class=\"line\">    agent = Agent(</span><br><span class=\"line\">        task=<span class=\"string\">&quot;Compare the price of gpt-4o and DeepSeek-V3&quot;</span>,</span><br><span class=\"line\">        llm=ChatOpenAI(model=<span class=\"string\">&quot;gpt-4o&quot;</span>),</span><br><span class=\"line\">        use_vision=<span class=\"literal\">True</span>,  </span><br><span class=\"line\">    )</span><br><span class=\"line\">    <span class=\"keyword\">await</span> agent.run()</span><br><span class=\"line\"></span><br><span class=\"line\">asyncio.run(main())</span><br></pre></td></tr></table></figure>\n\n<p>内置的浏览器tools：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">go_to_url</span><br><span class=\"line\">go_back</span><br><span class=\"line\">wait</span><br><span class=\"line\">search_google</span><br><span class=\"line\">click_element</span><br><span class=\"line\">input_text</span><br><span class=\"line\">switch_tab</span><br><span class=\"line\">open_tab</span><br><span class=\"line\">extract_content</span><br><span class=\"line\">scroll_down</span><br><span class=\"line\">scroll_up</span><br><span class=\"line\">send_keys</span><br><span class=\"line\">scroll_to_text</span><br><span class=\"line\">get_dropdown_options</span><br><span class=\"line\">select_dropdown_option</span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n\n<p>LLM实际调用日志：react过程</p>\n<p><strong>测试prompt</strong>：打开Bing搜索 搜索一下一招大模型的信息，多看几篇网页，总结一下重要信息</p>\n<p>model: groq/deepseek-r1-distill-qwen-32b</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;messages&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;You are an AI agent designed to automate browser tasks. Your goal is to accomplish the ultimate task following the rules.\\n\\n# Input Format\\nTask\\nPrevious steps\\nCurrent URL\\nOpen Tabs\\nInteractive Elements\\n[index]&lt;type&gt;text&lt;/type&gt;\\n- index: Numeric identifier for interaction\\n- type: HTML element type (button, input, etc.)\\n- text: Element description\\nExample:\\n[33]&lt;button&gt;Submit Form&lt;/button&gt;\\n\\n- Only elements with numeric indexes in [] are interactive\\n- elements without [] provide only context\\n\\n# Response Rules\\n1. RESPONSE FORMAT: You must ALWAYS respond with valid JSON in this exact format:\\n&#123;\\&quot;current_state\\&quot;: &#123;\\&quot;evaluation_previous_goal\\&quot;: \\&quot;Success|Failed|Unknown - Analyze the current elements and the image to check if the previous goals/actions are successful like intended by the task. Mention if something unexpected happened. Shortly state why/why not\\&quot;,\\n\\&quot;memory\\&quot;: \\&quot;Description of what has been done and what you need to remember. Be very specific. Count here ALWAYS how many times you have done something and how many remain. E.g. 0 out of 10 websites analyzed. Continue with abc and xyz\\&quot;,\\n\\&quot;next_goal\\&quot;: \\&quot;What needs to be done with the next immediate action\\&quot;&#125;,\\n\\&quot;action\\&quot;:[&#123;\\&quot;one_action_name\\&quot;: &#123;// action-specific parameter&#125;&#125;, // ... more actions in sequence]&#125;\\n\\n2. ACTIONS: You can specify multiple actions in the list to be executed in sequence. But always specify only one action name per item. Use maximum &#123;max_actions&#125; actions per sequence.\\nCommon action sequences:\\n- Form filling: [&#123;\\&quot;input_text\\&quot;: &#123;\\&quot;index\\&quot;: 1, \\&quot;text\\&quot;: \\&quot;username\\&quot;&#125;&#125;, &#123;\\&quot;input_text\\&quot;: &#123;\\&quot;index\\&quot;: 2, \\&quot;text\\&quot;: \\&quot;password\\&quot;&#125;&#125;, &#123;\\&quot;click_element\\&quot;: &#123;\\&quot;index\\&quot;: 3&#125;&#125;]\\n- Navigation and extraction: [&#123;\\&quot;go_to_url\\&quot;: &#123;\\&quot;url\\&quot;: \\&quot;https://example.com\\&quot;&#125;&#125;, &#123;\\&quot;extract_content\\&quot;: &#123;\\&quot;goal\\&quot;: \\&quot;extract the names\\&quot;&#125;&#125;]\\n- Actions are executed in the given order\\n- If the page changes after an action, the sequence is interrupted and you get the new state.\\n- Only provide the action sequence until an action which changes the page state significantly.\\n- Try to be efficient, e.g. fill forms at once, or chain actions where nothing changes on the page\\n- only use multiple actions if it makes sense.\\n\\n3. ELEMENT INTERACTION:\\n- Only use indexes of the interactive elements\\n- Elements marked with \\&quot;[]Non-interactive text\\&quot; are non-interactive\\n\\n4. NAVIGATION &amp; ERROR HANDLING:\\n- If no suitable elements exist, use other functions to complete the task\\n- If stuck, try alternative approaches - like going back to a previous page, new search, new tab etc.\\n- Handle popups/cookies by accepting or closing them\\n- Use scroll to find elements you are looking for\\n- If you want to research something, open a new tab instead of using the current tab\\n- If captcha pops up, try to solve it - else try a different approach\\n- If the page is not fully loaded, use wait action\\n\\n5. TASK COMPLETION:\\n- Use the done action as the last action as soon as the ultimate task is complete\\n- Dont use \\&quot;done\\&quot; before you are done with everything the user asked you, except you reach the last step of max_steps. \\n- If you reach your last step, use the done action even if the task is not fully finished. Provide all the information you have gathered so far. If the ultimate task is completly finished set success to true. If not everything the user asked for is completed set success in done to false!\\n- If you have to do something repeatedly for example the task says for \\&quot;each\\&quot;, or \\&quot;for all\\&quot;, or \\&quot;x times\\&quot;, count always inside \\&quot;memory\\&quot; how many times you have done it and how many remain. Don&#x27;t stop until you have completed like the task asked you. Only call done after the last step.\\n- Don&#x27;t hallucinate actions\\n- Make sure you include everything you found out for the ultimate task in the done text parameter. Do not just say you are done, but include the requested information of the task. \\n\\n6. VISUAL CONTEXT:\\n- When an image is provided, use it to understand the page layout\\n- Bounding boxes with labels on their top right corner correspond to element indexes\\n\\n7. Form filling:\\n- If you fill an input field and your action sequence is interrupted, most often something changed e.g. suggestions popped up under the field.\\n\\n8. Long tasks:\\n- Keep track of the status and subresults in the memory. \\n\\n9. Extraction:\\n- If your task is to find information - call extract_content on the specific pages to get and store the information.\\nYour responses must be always JSON with the specified format. &quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;system&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Context for the taskAvailable actions: Complete task - with return text and if the task is finished (success=True) or not yet  completly finished (success=False), because last step is reached: \\n&#123;done: &#123;&#x27;text&#x27;: &#123;&#x27;type&#x27;: &#x27;string&#x27;&#125;, &#x27;success&#x27;: &#123;&#x27;type&#x27;: &#x27;boolean&#x27;&#125;&#125;&#125;\\nSearch the query in Google in the current tab, the query should be a search query like humans search in Google, concrete and not vague or super long. More the single most important items. input example: &#123;\\&quot;query\\&quot;: \\&quot;your words\\&quot;&#125;: \\n&#123;search_google: &#123;&#x27;query&#x27;: &#123;&#x27;type&#x27;: &#x27;string&#x27;&#125;&#125;&#125;\\nNavigate to URL in the current tab: \\n&#123;go_to_url: &#123;&#x27;url&#x27;: &#123;&#x27;type&#x27;: &#x27;string&#x27;&#125;&#125;&#125;\\nGo back: \\n&#123;go_back: &#123;&#125;&#125;\\nWait for x seconds default 3: \\n&#123;wait: &#123;&#x27;seconds&#x27;: &#123;&#x27;default&#x27;: 3, &#x27;type&#x27;: &#x27;integer&#x27;&#125;&#125;&#125;\\nClick element: \\n&#123;click_element: &#123;&#x27;index&#x27;: &#123;&#x27;type&#x27;: &#x27;integer&#x27;&#125;, &#x27;xpath&#x27;: &#123;&#x27;anyOf&#x27;: [&#123;&#x27;type&#x27;: &#x27;string&#x27;&#125;, &#123;&#x27;type&#x27;: &#x27;null&#x27;&#125;], &#x27;default&#x27;: None&#125;&#125;&#125;\\nInput text into a input interactive element: \\n&#123;input_text: &#123;&#x27;index&#x27;: &#123;&#x27;type&#x27;: &#x27;integer&#x27;&#125;, &#x27;text&#x27;: &#123;&#x27;type&#x27;: &#x27;string&#x27;&#125;, &#x27;xpath&#x27;: &#123;&#x27;anyOf&#x27;: [&#123;&#x27;type&#x27;: &#x27;string&#x27;&#125;, &#123;&#x27;type&#x27;: &#x27;null&#x27;&#125;], &#x27;default&#x27;: None&#125;&#125;&#125;\\nSwitch tab: \\n&#123;switch_tab: &#123;&#x27;page_id&#x27;: &#123;&#x27;type&#x27;: &#x27;integer&#x27;&#125;&#125;&#125;\\nOpen url in new tab: \\n&#123;open_tab: &#123;&#x27;url&#x27;: &#123;&#x27;type&#x27;: &#x27;string&#x27;&#125;&#125;&#125;\\nExtract page content to retrieve specific information from the page, e.g. all company names, a specifc description, all information about, links with companies in structured format or simply links: \\n&#123;extract_content: &#123;&#x27;goal&#x27;: &#123;&#x27;type&#x27;: &#x27;string&#x27;&#125;&#125;&#125;\\nScroll down the page by pixel amount - if no amount is specified, scroll down one page: \\n&#123;scroll_down: &#123;&#x27;amount&#x27;: &#123;&#x27;anyOf&#x27;: [&#123;&#x27;type&#x27;: &#x27;integer&#x27;&#125;, &#123;&#x27;type&#x27;: &#x27;null&#x27;&#125;], &#x27;default&#x27;: None&#125;&#125;&#125;\\nScroll up the page by pixel amount - if no amount is specified, scroll up one page: \\n&#123;scroll_up: &#123;&#x27;amount&#x27;: &#123;&#x27;anyOf&#x27;: [&#123;&#x27;type&#x27;: &#x27;integer&#x27;&#125;, &#123;&#x27;type&#x27;: &#x27;null&#x27;&#125;], &#x27;default&#x27;: None&#125;&#125;&#125;\\nSend strings of special keys like Escape,Backspace, Insert, PageDown, Delete, Enter, Shortcuts such as `Control+o`, `Control+Shift+T` are supported as well. This gets used in keyboard.press. : \\n&#123;send_keys: &#123;&#x27;keys&#x27;: &#123;&#x27;type&#x27;: &#x27;string&#x27;&#125;&#125;&#125;\\nIf you dont find something which you want to interact with, scroll to it: \\n&#123;scroll_to_text: &#123;&#x27;text&#x27;: &#123;&#x27;type&#x27;: &#x27;string&#x27;&#125;&#125;&#125;\\nGet all options from a native dropdown: \\n&#123;get_dropdown_options: &#123;&#x27;index&#x27;: &#123;&#x27;type&#x27;: &#x27;integer&#x27;&#125;&#125;&#125;\\nSelect dropdown option for interactive element index by the text of the option you want to select: \\n&#123;select_dropdown_option: &#123;&#x27;index&#x27;: &#123;&#x27;type&#x27;: &#x27;integer&#x27;&#125;, &#x27;text&#x27;: &#123;&#x27;type&#x27;: &#x27;string&#x27;&#125;&#125;&#125;Your ultimate task is: \\&quot;\\&quot;\\&quot;打开Bing搜索 搜索一下一招大模型的信息，多看几篇网页，总结一下重要信息\\&quot;\\&quot;\\&quot;. If you achieved your ultimate task, stop everything and use the done action in the next step to complete the task. If not, continue as usual.Example output:Your ultimate task is: \\&quot;\\&quot;\\&quot;打开Bing搜索 搜索一下一招大模型的信息，多看几篇网页，总结一下重要信息\\&quot;\\&quot;\\&quot;. If you achieved your ultimate task, stop everything and use the done action in the next step to complete the task. If not, continue as usual.Example output:Your ultimate task is: \\&quot;\\&quot;\\&quot;打开Bing搜索 搜索一下一招大模型的信息，多看几篇网页，总结一下重要信息\\&quot;\\&quot;\\&quot;. If you achieved your ultimate task, stop everything and use the done action in the next step to complete the task. If not, continue as usual.Example output:Your ultimate task is: \\&quot;\\&quot;\\&quot;打开Bing搜索 搜索一下一招大模型的信息，多看几篇网页，总结一下重要信息\\&quot;\\&quot;\\&quot;. If you achieved your ultimate task, stop everything and use the done action in the next step to complete the task. If not, continue as usual.Example output:&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;user&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;[&#123;\\&quot;name\\&quot;: \\&quot;AgentOutput\\&quot;, \\&quot;args\\&quot;: &#123;\\&quot;current_state\\&quot;: &#123;\\&quot;evaluation_previous_goal\\&quot;: \\&quot;Success - I opend the first page\\&quot;, \\&quot;memory\\&quot;: \\&quot;Starting with the new task. I have completed 1/10 steps\\&quot;, \\&quot;next_goal\\&quot;: \\&quot;Click on company a\\&quot;&#125;, \\&quot;action\\&quot;: [&#123;\\&quot;click_element\\&quot;: &#123;\\&quot;index\\&quot;: 0&#125;&#125;]&#125;, \\&quot;id\\&quot;: \\&quot;1\\&quot;, \\&quot;type\\&quot;: \\&quot;tool_call\\&quot;&#125;]&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;assistant&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Browser started[Your task history memory starts here]&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;user&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;[&#123;\\&quot;name\\&quot;: \\&quot;AgentOutput\\&quot;, \\&quot;args\\&quot;: &#123;\\&quot;current_state\\&quot;: &#123;\\&quot;evaluation_previous_goal\\&quot;: \\&quot;Unknown - Analyze the current elements and the image to understand the starting point\\&quot;, \\&quot;memory\\&quot;: \\&quot;Starting with the new task. I have completed 0/10 steps. Need to open Bing search and perform the search query.\\&quot;, \\&quot;next_goal\\&quot;: \\&quot;Navigate to Bing search\\&quot;&#125;, \\&quot;action\\&quot;: [&#123;\\&quot;go_to_url\\&quot;: &#123;\\&quot;url\\&quot;: \\&quot;https://www.bing.com\\&quot;&#125;&#125;]&#125;, \\&quot;id\\&quot;: \\&quot;2\\&quot;, \\&quot;type\\&quot;: \\&quot;tool_call\\&quot;&#125;]&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;assistant&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Action result: 🔗  Navigated to https://www.bing.com&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;user&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;[&#123;\\&quot;name\\&quot;: \\&quot;AgentOutput\\&quot;, \\&quot;args\\&quot;: &#123;\\&quot;current_state\\&quot;: &#123;\\&quot;evaluation_previous_goal\\&quot;: \\&quot;Success - Successfully navigated to Bing search page\\&quot;, \\&quot;memory\\&quot;: \\&quot;Starting with the new task. I have completed 1/10 steps. I have navigated to Bing search and need to perform the search query.\\&quot;, \\&quot;next_goal\\&quot;: \\&quot;Perform the search query for &#x27;\\\\u4e00\\\\u62db\\\\u5927\\\\u6a21\\\\u578b&#x27;\\&quot;&#125;, \\&quot;action\\&quot;: [&#123;\\&quot;input_text\\&quot;: &#123;\\&quot;index\\&quot;: 11, \\&quot;text\\&quot;: \\&quot;\\\\u4e00\\\\u62db\\\\u5927\\\\u6a21\\\\u578b\\&quot;&#125;&#125;, &#123;\\&quot;click_element\\&quot;: &#123;\\&quot;index\\&quot;: 12&#125;&#125;, &#123;\\&quot;wait\\&quot;: &#123;\\&quot;seconds\\&quot;: 3&#125;&#125;]&#125;, \\&quot;id\\&quot;: \\&quot;3\\&quot;, \\&quot;type\\&quot;: \\&quot;tool_call\\&quot;&#125;]&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;assistant&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Action result: ⌨️  Input 一招大模型 into index 11Action result: Something new appeared after action 1 / 3&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;user&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;[&#123;\\&quot;name\\&quot;: \\&quot;AgentOutput\\&quot;, \\&quot;args\\&quot;: &#123;\\&quot;current_state\\&quot;: &#123;\\&quot;evaluation_previous_goal\\&quot;: \\&quot;Success - Successfully navigated to Bing search page and performed the search query.\\&quot;, \\&quot;memory\\&quot;: \\&quot;Starting with the new task. I have completed 1/10 steps. I have navigated to Bing search and performed the search query. Need to click on the search results to view more information.\\&quot;, \\&quot;next_goal\\&quot;: \\&quot;Click on the first search result to view the webpage\\&quot;&#125;, \\&quot;action\\&quot;: [&#123;\\&quot;click_element\\&quot;: &#123;\\&quot;index\\&quot;: 16&#125;&#125;, &#123;\\&quot;wait\\&quot;: &#123;\\&quot;seconds\\&quot;: 3&#125;&#125;, &#123;\\&quot;extract_content\\&quot;: &#123;\\&quot;goal\\&quot;: \\&quot;extract information about \\\\u4e00\\\\u62db\\\\u5927\\\\u6a21\\\\u578b\\&quot;&#125;&#125;]&#125;, \\&quot;id\\&quot;: \\&quot;4\\&quot;, \\&quot;type\\&quot;: \\&quot;tool_call\\&quot;&#125;]&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;assistant&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Action result: 🖱️  Clicked button with index 16: Action result: 🕒  Waiting for 3 secondsAction result: 📄  Extracted from page\\n: &lt;think&gt;\\n好，我现在需要处理用户的查询，目标是从给定的页面内容中提取关于“一招大模型”的信息，并以JSON格式返回。首先，我得仔细阅读用户提供的页面内容，理解其中的结构和信息分布。\\n\\n页面看起来像是一个搜索结果页面，包含多个搜索结果条目，每个条目都有标题、来源和简要描述。此外，还有图片搜索结果和其他相关搜索链接。我的任务是从这些内容中提取所有与“一招大模型”相关的信息。\\n\\n首先，我会浏览每个搜索结果条目，看看它们是否提到了“一招大模型”。例如，第一个结果来自新浪财经，提到招商银行提出了“一招”大模型，这是一次技术创新，也是服务模式的创新。这表明“一招大模型”是招商银行开发的，用于金融领域的AI模型。\\n\\n接下来，第二个结果是图片搜索，显示了多个相关图片，但可能对提取文本信息帮助不大，所以可以暂时忽略。第三个结果来自ModelScope社区，详细说明了“一招”大模型是由招商银行与华为、智谱AI合作开发的，使用全国产设备和框架，专注于金融领域。这部分信息非常重要，因为它提供了开发背景和合作伙伴。\\n\\n第四个到第十个结果来自不同的新闻网站，如网易、新浪财经、亿欧、搜狐和百家号，都报道了招商银行申请了“一招大模型”的商标，涉及金融创新和AI技术的应用。这些信息补充了“一招大模型”的商标注册情况和其在金融领域的应用前景。\\n\\n在提取信息时，我需要确保涵盖以下几点：\\n1. “一招大模型”的定义和用途。\\n2. 开发背景，包括合作方和开发环境。\\n3. 商标注册情况及其意义。\\n4. 该模型对金融行业的影响。\\n\\n此外，我还需要注意信息的来源是否可靠，比如是否来自官方渠道或知名新闻网站。例如，新浪财经和搜狐的报道提供了详细的背景信息，而ModelScope社区则提供了技术细节。\\n\\n在整理信息时，我会将每个关键点分类，如定义、开发背景、商标注册和影响，确保结构清晰。同时，要避免重复信息，比如多个来源都提到商标注册，但具体内容相似，可以合并描述。\\n\\n最后，我会将提取的信息组织成JSON格式，确保每个字段准确无误，并且信息全面。这样，用户就能清楚地了解“一招大模型”的各个方面，包括其开发、应用和影响。\\n&lt;/think&gt;\\n\\n```json\\n&#123;\\n  \\&quot;extracted_information\\&quot;: [\\n    &#123;\\n      \\&quot;title\\&quot;: \\&quot;一招大模型\\&quot;,\\n      \\&quot;description\\&quot;: \\&quot;一招大模型是由招商银行股份有限公司申请注册的商标，主要用于金融领域的人工智能技术应用。该模型旨在推动银行业服务模式的创新，标志着银行行业将与人工智能深度融合，进入一个全新的智能化服务时代。\\&quot;,\\n      \\&quot;source\\&quot;: \\&quot;新浪财经网\\&quot;,\\n      \\&quot;date\\&quot;: \\&quot;2024年12月12日\\&quot;\\n    &#125;,\\n    &#123;\\n      \\&quot;title\\&quot;: \\&quot;一招大模型的商标申请\\&quot;,\\n      \\&quot;description\\&quot;: \\&quot;招商银行股份有限公司申请注册了“一招（YiZhao）大模型”和“招商银行一招（YiZhao）大模型”商标，国际分类为广告销售、科学仪器等。这一举措表明招商银行在人工智能领域的战略布局。\\&quot;,\\n      \\&quot;source\\&quot;: \\&quot;新浪财经\\&quot;,\\n      \\&quot;date\\&quot;: \\&quot;2024年12月11日\\&quot;\\n    &#125;,\\n    &#123;\\n      \\&quot;title\\&quot;: \\&quot;一招大模型的技术背景\\&quot;,\\n      \\&quot;description\\&quot;: \\&quot;一招大模型是由招商银行联合华为、智谱AI，在全国产的设备与训练框架下训练形成的金融领域大语言模型系列。该模型首先在大规模高质量数据上进行预训练，再通过高质量金融数据进行后期优化。\\&quot;,\\n      \\&quot;source\\&quot;: \\&quot;ModelScope 魔搭社区\\&quot;,\\n      \\&quot;date\\&quot;: \\&quot;2024年12月\\&quot;\\n    &#125;,\\n    &#123;\\n      \\&quot;title\\&quot;: \\&quot;一招大模型的行业影响\\&quot;,\\n      \\&quot;description\\&quot;: \\&quot;一招大模型的提出不仅是技术创新，更是对银行业服务模式的一次大胆创新。它标志着银行行业将与人工智能深度融合，进入一个全新的智能化服务时代。\\&quot;,\\n      \\&quot;source\\&quot;: \\&quot;网易\\&quot;,\\n      \\&quot;date\\&quot;: \\&quot;2024年12月12日\\&quot;\\n    &#125;,\\n    &#123;\\n      \\&quot;title\\&quot;: \\&quot;一招大模型的商标申请\\&quot;,\\n      \\&quot;description\\&quot;: \\&quot;招商银行股份有限公司申请注册了“一招大模型”及相关商标，旨在推动人工智能技术在金融领域的应用与发展。\\&quot;,\\n      \\&quot;source\\&quot;: \\&quot;亿欧\\&quot;,\\n      \\&quot;date\\&quot;: \\&quot;2024年12月11日\\&quot;\\n    &#125;\\n  ],\\n  \\&quot;related_searches\\&quot;: [\\n    \\&quot;一招大模型商标\\&quot;,\\n    \\&quot;招行一招大模型\\&quot;,\\n    \\&quot;招商银行一招大模型\\&quot;,\\n    \\&quot;招行大模型\\&quot;,\\n    \\&quot;招商银行申请大模型\\&quot;,\\n    \\&quot;招商银行大模型\\&quot;\\n  ]\\n&#125;\\n```\\n\\n[Task history memory ends]\\n[Current state starts here]\\nThe following is one-time information - if you need to remember it write it to memory:\\nCurrent url: https://www.bing.com/search?q=%e4%b8%80%e6%8b%9b%e5%a4%a7%e6%a8%a1%e5%9e%8b&amp;qs=UT&amp;pq=%e4%b8%80%e6%8b%9b%e5%a4%a7%e6%a8%a1%e5%9e%8b&amp;sc=1-5&amp;cvid=90B5926ACCCE4AF78697D50732768863&amp;FORM=QBLH&amp;sp=1&amp;lq=0\\nAvailable tabs:\\n[TabInfo(page_id=0, url=&#x27;https://www.bing.com/search?q=%e4%b8%80%e6%8b%9b%e5%a4%a7%e6%a8%a1%e5%9e%8b&amp;qs=UT&amp;pq=%e4%b8%80%e6%8b%9b%e5%a4%a7%e6%a8%a1%e5%9e%8b&amp;sc=1-5&amp;cvid=90B5926ACCCE4AF78697D50732768863&amp;FORM=QBLH&amp;sp=1&amp;lq=0&#x27;, title=&#x27;一招大模型 - 搜索&#x27;)]\\nInteractive elements from top layer of the current page inside the viewport:\\n... 26 pixels above - scroll or extract content to see more ...\\n跳至内容\\n[0]&lt;a /&gt;\\n[1]&lt;input 在此处输入你的搜索 — 输入时会显示搜索建议;q;一招大模型;search/&gt;\\n[2]&lt;div 语音搜索;button/&gt;\\n[3]&lt;div false;使用图像搜索;button/&gt;\\n[4]&lt;a “搜索”按钮/&gt;\\n[5]&lt;input go;搜索;submit/&gt;\\n[6]&lt;a /&gt;\\n[7]&lt;input submit;登录/&gt;\\n[8]&lt;a Microsoft Rewards;false;button/&gt;\\n[9]&lt;a 设置和快速链接;false;button/&gt;\\n[10]&lt;a 全部/&gt;\\n[11]&lt;a 图片/&gt;\\n[12]&lt;a 视频/&gt;\\n[13]&lt;a 地图/&gt;\\n[14]&lt;a 资讯/&gt;\\n[15]&lt;a Dropdown Menu;button&gt;更多/&gt;\\n[16]&lt;a 工具/&gt;\\n约 1,070,000 个结果\\n[17]&lt;div /&gt;\\n[18]&lt;a 新浪财经网/&gt;\\n[19]&lt;img /&gt;\\n[20]&lt;div https://cj.sina.com.cn › articles › view/&gt;\\n[21]&lt;h2 /&gt;\\n[22]&lt;a 招行有“一招（YiZhao）” - 新浪财经网/&gt;\\n2024年12月12日\\n· 如今，招行提出的“一招”大模型，不仅是一次技术创新，更是对银行业服务模式的一次大胆创新，它标志着银行行业将与人工智能深度融合，进入一个全新的智能化服务时代。\\n[23]&lt;a 一招大模型的图片&gt;一招大模型的图片\\nbing.com › images/&gt;\\n[24]&lt;div 单击以向右滚动;button/&gt;\\n[25]&lt;div listitem&gt;finance.sina.com.cn/&gt;\\n[26]&lt;a 搜索 一招大模型 的图像. finance.sina.com.cn. 550 × 170 · png/&gt;\\n[27]&lt;img /&gt;\\n[28]&lt;a 招商银行申请大模型商标：一招大模型_新浪财经_新浪网/&gt;\\n[29]&lt;div listitem&gt;zhuanzhi.ai/&gt;\\n[30]&lt;a 搜索 一招大模型 的图像. www.zhuanzhi.ai. 1080 × 608 · jpeg/&gt;\\n[31]&lt;img /&gt;\\n[32]&lt;a 【ChatGPT系列报告】国内大模型概览，42页ppt - 专知VIP/&gt;\\n[33]&lt;div listitem&gt;sohu.com/&gt;\\n[34]&lt;a 搜索 一招大模型 的图像. www.sohu.com. 1273 × 806 · jpeg/&gt;\\n[35]&lt;img /&gt;\\n[36]&lt;a 招商银行申请 “一招（YiZhao）大模型”商标-北京四海龙知识产权_金融_为客户提供_人工智能/&gt;\\n招商银行申请 “一招（YiZhao）大模型”商标-北京四海龙知识产权_金融_为客户提供_人工智能\\n什么是大模型？（超详细）大模型从入门到精通，看这一篇就够了-CSDN博客\\n查看全部\\n[37]&lt;a 查看所有图像/&gt;\\n[38]&lt;div /&gt;\\n[39]&lt;a ModelScope 魔搭社区/&gt;\\n[40]&lt;img /&gt;\\n[41]&lt;div https://www.modelscope.cn › models › CMB_AILab › summary/&gt;\\n[42]&lt;h2 /&gt;\\n[43]&lt;a 魔搭社区/&gt;\\n一招（YiZhao)是招商银行联合华为、智谱AI，在全国产的设备与训练框架下训练形成的金融领域大语言模型系列。 我们首先在大规模高质量数据上进行预训练，再通过高质量金融数据进行后期 …\\n[44]&lt;div /&gt;\\n[45]&lt;a 网易/&gt;\\n[46]&lt;img /&gt;\\n[47]&lt;div https://www.163.com › dy › article/&gt;\\n[48]&lt;h2 /&gt;\\n[49]&lt;a 招行有“一招（YiZhao）”|风控|金融|银行业 ... - 网易/&gt;\\n2024年12月12日\\n· 如今，招行提出的“一招”大模型，不仅是一次技术创新，更是对银行业服务模式的一次大胆创新，它标志着银行行业将与人工智能深度融合，进入一个全新的智能化服务时代。\\n[50]&lt;div /&gt;\\n[51]&lt;a 新浪财经/&gt;\\n[52]&lt;img /&gt;\\n[53]&lt;div https://finance.sina.com.cn › tob/&gt;\\n[54]&lt;h2 /&gt;\\n[55]&lt;a 招商银行申请大模型商标：一招大模型 - 新浪财经/&gt;\\n新浪科技讯12月11日上午消息，天眼查知识产权信息显示，近日，招商银行股份有限公司申请注册“一招（YiZhao）大模型”“招商银行一招（YiZhao）大 ...\\n[56]&lt;div /&gt;\\n[57]&lt;a 亿欧/&gt;\\n[58]&lt;img /&gt;\\n[59]&lt;div https://www.iyiou.com › data/&gt;\\n[60]&lt;h2 /&gt;\\n[61]&lt;a 招商银行申请注册“一招大模型”商标，聚焦人工智能领域发展/&gt;\\n2024年12月11日\\n· 招商银行股份有限公司近日申请注册“一招大模型”及相关商标，旨在推动人工智能技术在金融领域的应用与发展。 近日，根据天眼查知识产权信息显示，招商银行股份有限公 …\\n[62]&lt;div /&gt;\\n[63]&lt;a 搜狐/&gt;\\n[64]&lt;img /&gt;\\n[65]&lt;div https://www.sohu.com/&gt;\\n[66]&lt;h2 /&gt;\\n[67]&lt;a 招商银行申请‘一招大模型’商标：金融创新的未来或将从此开启！/&gt;\\n2024年12月11日\\n· 近日，招商银行股份有限公司在知识产权领域迈出了新的一步，成功申请了‘一招（YiZhao）大模型’及‘招商银行一招（YiZhao）大模型’的商标。 这一消息于12月11日披露，引 …\\n[68]&lt;div /&gt;\\n[69]&lt;a 百家号/&gt;\\n[70]&lt;img /&gt;\\n[71]&lt;div https://baijiahao.baidu.com/&gt;\\n[72]&lt;h2 /&gt;\\n[73]&lt;a 招商银行布局AI，申请“一招大模型”商标待审 - 百家号/&gt;\\n2024年12月11日\\n· 近期，招商银行股份有限公司在知识产权保护方面有新动作，据天眼查平台披露的信息，该行已正式提交了两项商标申请，分别为“一招（YiZhao）大模型”与“招商银行一 …\\n[74]&lt;div /&gt;\\n[75]&lt;a 搜狐/&gt;\\n[76]&lt;img /&gt;\\n[77]&lt;div https://www.sohu.com/&gt;\\n[78]&lt;h2 /&gt;\\n[79]&lt;a 招商银行再出大招，申请AI商标意在金融科技新潮流_YiZhao_尖 …/&gt;\\n[80]&lt;div /&gt;\\n[81]&lt;a 百家号/&gt;\\n[82]&lt;img /&gt;\\n[83]&lt;div https://baijiahao.baidu.com/&gt;\\n[84]&lt;h2 /&gt;\\n[85]&lt;a 招商银行申请大模型商标：一招大模型 - 百家号/&gt;\\n[86]&lt;div /&gt;\\n[87]&lt;a 腾讯网/&gt;\\n[88]&lt;img /&gt;\\n[89]&lt;div https://news.qq.com › rain/&gt;\\n[90]&lt;h2 /&gt;\\n[91]&lt;a 招商银行注册“一招大模型”商标 - 腾讯网/&gt;\\n[92]&lt;a 一招大模型商标/&gt;\\n[93]&lt;a 招行一招大模型/&gt;\\n[94]&lt;a 招商银行一招大模型/&gt;\\n[95]&lt;a 招行大模型/&gt;\\n[96]&lt;a 招商银行申请大模型/&gt;\\n[97]&lt;a 招商银行大模型/&gt;\\n[98]&lt;a 招商银行大模型商标/&gt;\\n[99]&lt;a 招商银行商标一招/&gt;\\n[100]&lt;a 第 1 页&gt;1/&gt;\\n[101]&lt;a 第 2 页&gt;2/&gt;\\n[102]&lt;a 第 3 页&gt;3/&gt;\\n[103]&lt;a 第 4 页&gt;4/&gt;\\n[104]&lt;a 下一页/&gt;\\n相关搜索\\n[105]&lt;a 一招大模型商标/&gt;\\n[106]&lt;a 招行一招大模型/&gt;\\n[107]&lt;a 招商银行一招大模型/&gt;\\n[108]&lt;a 招行大模型/&gt;\\n[109]&lt;a 招商银行申请大模型/&gt;\\n[110]&lt;a 招商银行大模型/&gt;\\n[111]&lt;a 招商银行大模型商标/&gt;\\n[112]&lt;a 招商银行商标一招/&gt;\\n[113]&lt;a 隐私声明和 Cookie/&gt;\\n[114]&lt;a 法律声明/&gt;\\n[115]&lt;a 广告/&gt;\\n[116]&lt;a 关于我们的广告/&gt;\\n[117]&lt;a 帮助/&gt;\\n[118]&lt;a button&gt;反馈/&gt;\\n[119]&lt;a 消费者健康隐私/&gt;\\n... 1294 pixels below - scroll or extract content to see more ...\\nCurrent step: 4/100Current date and time: 2025-03-27 17:53\\n&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;user&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;model&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;deepseek-r1-distill-qwen-32b&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;stream&quot;</span><span class=\"punctuation\">:</span> <span class=\"keyword\">false</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;temperature&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"microsoft-playwright-71k-star\"><a href=\"#microsoft-playwright-71k-star\" class=\"headerlink\" title=\"microsoft/playwright 71k star\"></a><a href=\"https://github.com/microsoft/playwright\">microsoft/<em>playwright</em> 71k star</a></h5><p><em><strong>Playwright</strong></em> is a framework for Web Testing and Automation. It allows testing Chromium, Firefox and WebKit with a single API.</p>\n<p>提供js、python、java等sdk允许不用语言通过playwright api操作浏览器</p>\n<h4 id=\"Computer-use\"><a href=\"#Computer-use\" class=\"headerlink\" title=\"Computer-use\"></a>Computer-use</h4><h5 id=\"claude-3-5-sonnet-20241022-computer-use-demo\"><a href=\"#claude-3-5-sonnet-20241022-computer-use-demo\" class=\"headerlink\" title=\"claude-3-5-sonnet-20241022 computer-use-demo\"></a><a href=\"https://github.com/anthropics/anthropic-quickstarts/tree/main/computer-use-demo\">claude-3-5-sonnet-20241022 computer-use-demo</a></h5><p>1022发布的开源demo，已经可以完成浏览网页，亚马逊购物，画图等功能。llm支持的actions如下：</p>\n<img src=\"./2025-03-27-16-12-45-image.png\" title=\"\" alt=\"\" width=\"412\">\n\n<p>computer-use-demo代码中会loop调用anthropic api并执行tool action直到llm返回中不包含tool action</p>\n<p><strong>“用画图画一只猫”</strong></p>\n<img src=\"/2025/03/26/manus-study/2025-03-27-15-45-22-image.png\" class=\"\">\n\n<h5 id=\"OpenAI-Computer-use-example\"><a href=\"#OpenAI-Computer-use-example\" class=\"headerlink\" title=\"OpenAI Computer-use-example\"></a><a href=\"https://platform.openai.com/docs/guides/tools-computer-use\">OpenAI Computer-use-example</a></h5><p>支持的actions：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">screenshot</span><br><span class=\"line\">click</span><br><span class=\"line\">double<span class=\"emphasis\">_click</span></span><br><span class=\"line\"><span class=\"emphasis\">type</span></span><br><span class=\"line\"><span class=\"emphasis\">keypress</span></span><br><span class=\"line\"><span class=\"emphasis\">move</span></span><br><span class=\"line\"><span class=\"emphasis\">scroll</span></span><br><span class=\"line\"><span class=\"emphasis\">wait</span></span><br><span class=\"line\"><span class=\"emphasis\">drag</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.openai.com/API/docs/images/cua_diagram.png\" alt=\"Computer use diagram\"></p>\n<h5 id=\"E2B-computer-use-agent\"><a href=\"#E2B-computer-use-agent\" class=\"headerlink\" title=\"E2B computer-use agent\"></a><a href=\"https://surf.e2b.dev/\">E2B computer-use agent</a></h5><p>一家为AI提供云虚拟化环境的公司，用开源大模型实现了较好的效果。</p>\n<img title=\"\" src=\"./2025-03-27-11-23-48-image.png\" alt=\"\" width=\"539\">\n\n<h5 id=\"微软-omniParser-omniTool\"><a href=\"#微软-omniParser-omniTool\" class=\"headerlink\" title=\"微软 omniParser omniTool\"></a><a href=\"https://github.com/microsoft/OmniParser/\">微软 omniParser omniTool</a></h5><img src=\"/2025/03/26/manus-study/2025-03-27-15-37-02-image.png\" class=\"\">\n\n<h5 id=\"OS-ATLAS-Foundation-Action-Model-for-Generalist-GUI-Agents\"><a href=\"#OS-ATLAS-Foundation-Action-Model-for-Generalist-GUI-Agents\" class=\"headerlink\" title=\"OS-ATLAS: Foundation Action Model for Generalist GUI Agents\"></a><a href=\"https://arxiv.org/abs/2410.23218\">OS-ATLAS: Foundation Action Model for Generalist GUI Agents</a></h5><h2 id=\"MCP及Agent接入\"><a href=\"#MCP及Agent接入\" class=\"headerlink\" title=\"MCP及Agent接入\"></a>MCP及Agent接入</h2><p><a href=\"https://modelcontextprotocol.io/introduction\">Introduction - Model Context Protocol</a></p>\n<p>提供一套标准协议，方便第三方能力(tools, prompts, resources等)快速接入LLM Agents</p>\n<img src=\"/2025/03/26/manus-study/2025-03-28-09-16-47-image.png\" class=\"\">\n\n<h4 id=\"MCP-core-concepts\"><a href=\"#MCP-core-concepts\" class=\"headerlink\" title=\"MCP core concepts\"></a>MCP core concepts</h4><img src=\"/2025/03/26/manus-study/2025-03-28-09-22-54-image.png\" class=\"\">\n\n<p>official java sdk </p>\n<img src=\"/2025/03/26/manus-study/2025-03-28-09-01-24-image.png\" class=\"\">\n\n<h4 id=\"MCP的支持及有趣案例\"><a href=\"#MCP的支持及有趣案例\" class=\"headerlink\" title=\"MCP的支持及有趣案例\"></a>MCP的支持及有趣案例</h4><p><strong>LLM App</strong>：Claude destop, OpenAI desktop，Cursor, VS code Cline</p>\n<p><strong>开源社区</strong>：langchain，dify</p>\n<p>MCP server案例：</p>\n<p>建模引擎：blender, unity</p>\n<img src=\"/2025/03/26/manus-study/2025-03-28-13-40-50-image.png\" class=\"\">\n\n<p>办公类：邮件、会议等</p>\n<p>游戏类：steam, minecraft</p>\n<p>地图类：谷歌、百度、高德地图</p>\n<p>Stock类：实时股价、选股</p>\n<p>IOT: HomeAssistant，智能家居</p>\n<h4 id=\"Open-Source-MCP-Servers\"><a href=\"#Open-Source-MCP-Servers\" class=\"headerlink\" title=\"Open-Source MCP Servers\"></a>Open-Source MCP Servers</h4><p><a href=\"https://github.com/punkpeye/awesome-mcp-servers\">GitHub - punkpeye/awesome-mcp-servers: A collection of MCP servers.</a></p>\n<p><a href=\"https://glama.ai/mcp/servers\">Open-Source MCP servers | Glama</a></p>\n<p><a href=\"https://mcp.so/\">MCP.SO</a></p>\n<h4 id=\"Cline测试\"><a href=\"#Cline测试\" class=\"headerlink\" title=\"Cline测试\"></a>Cline测试</h4><p>Cline安装配置过程略，mcp server仅安装playwright</p>\n<h6 id=\"测试结果\"><a href=\"#测试结果\" class=\"headerlink\" title=\"测试结果\"></a>测试结果</h6><p>task prompt：上网搜索一下有关一招大模型的信息，挑几篇网页详细阅读一下，整理出一篇介绍并保存到本地yizhao.md文件，注意标好引用链接地址。</p>\n<img src=\"/2025/03/26/manus-study/2025-03-28-09-46-40-image.png\" class=\"\">\n\n<img src=\"/2025/03/26/manus-study/2025-03-28-09-47-23-image.png\" class=\"\">\n\n<img src=\"/2025/03/26/manus-study/2025-03-28-09-49-17-image.png\" class=\"\">\n\n<img src=\"/2025/03/26/manus-study/2025-03-28-09-51-33-image.png\" class=\"\">\n\n<img src=\"/2025/03/26/manus-study/2025-03-28-09-52-06-image.png\" class=\"\">\n\n<img src=\"/2025/03/26/manus-study/2025-03-28-09-53-16-image.png\" class=\"\">\n\n<img src=\"/2025/03/26/manus-study/2025-03-28-09-53-54-image.png\" class=\"\">\n\n<img src=\"/2025/03/26/manus-study/2025-03-28-09-54-36-image.png\" class=\"\">\n\n<h6 id=\"cline-prompt-log\"><a href=\"#cline-prompt-log\" class=\"headerlink\" title=\"cline prompt log\"></a>cline prompt log</h6><p>cline systemPrompt 12k tokens，然后loop执行action<br><a href=\"./cline-exec-req.txt\">prompt</a></p>\n<h5 id=\"行内cline、mcp、大模型测试：\"><a href=\"#行内cline、mcp、大模型测试：\" class=\"headerlink\" title=\"行内cline、mcp、大模型测试：\"></a>行内cline、mcp、大模型测试：</h5><p>见内网</p>\n<p>总行团队一些案例</p>\n<h4 id=\"MCP发展\"><a href=\"#MCP发展\" class=\"headerlink\" title=\"MCP发展\"></a>MCP发展</h4><p>langchain社区：<a href=\"https://blog.langchain.dev/mcp-fad-or-fixture/\">MCP: Flash in the Pan or Future Standard?</a></p>\n<pre><code>\n</code></pre>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Manus及相关技术栈\"><a href=\"#Manus及相关技术栈\" class=\"headerlink\" title=\"Manus及相关技术栈\"></a>Manus及相关技术栈</h1><h3 id=\"manus\"><a href=\"#manus\" class=\"headerlink\" title=\"manus\"></a>manus</h3><h4 id=\"官方示例\"><a href=\"#官方示例\" class=\"headerlink\" title=\"官方示例\"></a>官方示例</h4><p><a href=\"https://manus.im/\">manus.im</a></p>\n<p><strong>ubuntu@sanbox虚拟机</strong></p>\n<p><strong>Terminal</strong>: execute_command</p>\n<img src=\"/2025/03/26/manus-study/2025-03-26-14-20-28-image.png\" class=\"\">\n\n<p><strong>File Editor</strong>: create_file, edit_file</p>\n<img src=\"/2025/03/26/manus-study/2025-03-26-14-22-24-image.png\" class=\"\">\n\n<p><strong>Browser</strong>: browse_file, view_page(需要vllm), scroll_up, scroll_down</p>\n<img src=\"/2025/03/26/manus-study/2025-03-26-17-13-21-image.png\" class=\"\">\n\n<p><strong>用户打断</strong>，新增了几个简历 , 之前制定的 todo.md 内容会新增</p>\n<img src=\"/2025/03/26/manus-study/2025-03-26-17-14-54-image.png\" class=\"\">\n\n<p><strong>用户要求</strong> 将结果写入excel，agent编写代码实现</p>\n<p>execute_command(pip instatll dependencies) + write_file(python script) + execute_command(python xxx.py)</p>\n<img src=\"/2025/03/26/manus-study/2025-03-26-17-28-45-image.png\" class=\"\">\n\n<p>最终交付了excel xlsx文件</p>\n<h4 id=\"其他案例replays\"><a href=\"#其他案例replays\" class=\"headerlink\" title=\"其他案例replays\"></a>其他案例replays</h4><p>✅ <a href=\"https://manus.im/share/xFgpHb15vKqfRPWIs3JJPJ?replay=1\">Comprehensive Tesla Stock Analysis and Investment Insights</a></p>\n<p>❌ <a href=\"https://manus.im/share/nrEydgtF8bLZFeDI8mPpUL?replay=1\">Super Mario Game in Minecraft Style</a></p>\n<h4 id=\"攻击破解\"><a href=\"#攻击破解\" class=\"headerlink\" title=\"攻击破解\"></a>攻击破解</h4><img title=\"\" src=\"./2025-03-27-15-08-32-image.png\" alt=\"\" width=\"377\">\n\n<p>prompt破解：<a href=\"https://gist.github.com/jlia0/db0a9695b3ca7609c9b1a08dcbf872c9\">Manus tools and prompts · GitHub</a> </p>\n<p>虚拟机文件破解：<a href=\"https://github.com/whit3rabbit/manus-open\">manus-open(manus sandbox) · Github</a>  <a href=\"https://manus.im/share/lLR5uWIR5Im3k9FCktVu0k?replay=1\">Replay: Check Files Under /opt/.manus Path - Manus</a></p>\n<p>相关资料：<a href=\"https://cn-sec.com/archives/3845527.html\">分析</a></p>\n<img src=\"/2025/03/26/manus-study/2025-03-27-14-05-43-image.png\" class=\"\">\n\n<h3 id=\"相关开源项目\"><a href=\"#相关开源项目\" class=\"headerlink\" title=\"相关开源项目\"></a>相关开源项目</h3><p><a href=\"https://www.anthropic.com/engineering/building-effective-agents\">Building Effective AI Agents \\ Anthropic 对Agent的定义</a></p>\n<img title=\"\" src=\"./2025-03-28-09-07-01-image.png\" alt=\"\" width=\"443\">\n\n<h4 id=\"OpenHands-OpenDevin\"><a href=\"#OpenHands-OpenDevin\" class=\"headerlink\" title=\"OpenHands(OpenDevin)\"></a>OpenHands(OpenDevin)</h4><p><a href=\"https://github.com/All-Hands-AI/OpenHands/tree/main\">GitHub - All-Hands-AI/OpenHands: 🙌 OpenHands: Code Less, Make More</a></p>\n<img src=\"/2025/03/26/manus-study/2025-03-27-11-34-31-image.png\" class=\"\">\n\n<img title=\"\" src=\"./2025-03-27-14-10-23-image.png\" alt=\"\" width=\"324\">\n\n<h4 id=\"OpenManus\"><a href=\"#OpenManus\" class=\"headerlink\" title=\"OpenManus\"></a>OpenManus</h4><p><a href=\"https://github.com/mannaandpoem/OpenManus\">👋 OpenManus 40k star</a></p>\n<p>google_search搜索引擎 + browser-use浏览器 + python exec代码执行 + subprocess bash执行 + 基础文件操作 </p>\n<img src=\"./2025-03-27-18-16-45-image.png\" title=\"\" alt=\"\" width=\"210\">\n\n<p>ManusAgent -&gt; ToolCallAgent -&gt; ReActAgent </p>\n<p><strong>测试prompt</strong>：打开Bing搜索 搜索一下一招大模型的信息，多看几篇网页，总结一下重要信息</p>\n<p>model: google/gemini-2.0-pro-exp-02-05</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;messages&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;system&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;You are OpenManus, an all-capable AI assistant, aimed at solving any task presented by the user. You have various tools at your disposal that you can call upon to efficiently complete complex requests. Whether it&#x27;s programming, information retrieval, file processing, or web browsing, you can handle it all.&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;user&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;打开Bing搜索 搜索一下一招大模型的信息，多看几篇网页，总结一下重要信息&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;user&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;You can interact with the computer using PythonExecute, save important content and information files through FileSaver, open browsers with BrowserUseTool, and retrieve information using BingSearch.\\n\\nPythonExecute: Execute Python code to interact with the computer system, data processing, automation tasks, etc.\\n\\nFileSaver: Save files locally, such as txt, py, html, etc.\\n\\nBrowserUseTool: Open, browse, and use web browsers.If you open a local HTML file, you must provide the absolute path to the file.\\n\\nBingSearch: Perform web information retrieval, and return ref links, you must use BrowserUseTool to fetch information from these links.\\n\\nBased on user needs, proactively select the most appropriate tool or combination of tools. For complex tasks, you can break down the problem and use different tools step by step to solve it. After using each tool, clearly explain the execution results and suggest the next steps.\\n&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;assistant&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Okay, I will start by searching for information about \\&quot;一招大模型\\&quot; using Bing Search. Then, I will browse the search results and summarize the important information.\\n\\n\\n&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;tool_calls&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;id&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tool_0_bing_search&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;function&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;function&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;bing_search&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;arguments&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&#123;\\&quot;num_results\\&quot;:5,\\&quot;query\\&quot;:\\&quot;一招大模型\\&quot;&#125;&quot;</span></span><br><span class=\"line\">          <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">      <span class=\"punctuation\">]</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tool&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Observed output of cmd `bing_search` executed:\\n[&#x27;https://cj.sina.com.cn/articles/view/5816954579/15ab7aed301901e374&#x27;, &#x27;https://www.modelscope.cn/models/CMB_AILab/YiZhao-12B-Chat/summary&#x27;, &#x27;https://finance.sina.cn/2025-01-03/detail-inecsvux6431783.d.html&#x27;, &#x27;https://finance.sina.com.cn/tob/2024-12-11/doc-inczafmv0853031.shtml&#x27;, &#x27;https://baijiahao.baidu.com/s?id=1818122776352809538&#x27;]&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;bing_search&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;tool_call_id&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tool_0_bing_search&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;user&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;You can interact with the computer using PythonExecute, save important content and information files through FileSaver, open browsers with BrowserUseTool, and retrieve information using BingSearch.\\n\\nPythonExecute: Execute Python code to interact with the computer system, data processing, automation tasks, etc.\\n\\nFileSaver: Save files locally, such as txt, py, html, etc.\\n\\nBrowserUseTool: Open, browse, and use web browsers.If you open a local HTML file, you must provide the absolute path to the file.\\n\\nBingSearch: Perform web information retrieval, and return ref links, you must use BrowserUseTool to fetch information from these links.\\n\\nBased on user needs, proactively select the most appropriate tool or combination of tools. For complex tasks, you can break down the problem and use different tools step by step to solve it. After using each tool, clearly explain the execution results and suggest the next steps.\\n&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;assistant&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Now I will browse the search results to gather information. I will start with the first link.\\n&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;tool_calls&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;id&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tool_0_browser_use&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;function&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;function&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;browser_use&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;arguments&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&#123;\\&quot;url\\&quot;:\\&quot;https://cj.sina.com.cn/articles/view/5816954579/15ab7aed301901e374\\&quot;,\\&quot;action\\&quot;:\\&quot;navigate\\&quot;&#125;&quot;</span></span><br><span class=\"line\">          <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">      <span class=\"punctuation\">]</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tool&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Observed output of cmd `browser_use` executed:\\nNavigated to https://cj.sina.com.cn/articles/view/5816954579/15ab7aed301901e374&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;browser_use&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;tool_call_id&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tool_0_browser_use&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;user&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;You can interact with the computer using PythonExecute, save important content and information files through FileSaver, open browsers with BrowserUseTool, and retrieve information using BingSearch.\\n\\nPythonExecute: Execute Python code to interact with the computer system, data processing, automation tasks, etc.\\n\\nFileSaver: Save files locally, such as txt, py, html, etc.\\n\\nBrowserUseTool: Open, browse, and use web browsers.If you open a local HTML file, you must provide the absolute path to the file.\\n\\nBingSearch: Perform web information retrieval, and return ref links, you must use BrowserUseTool to fetch information from these links.\\n\\nBased on user needs, proactively select the most appropriate tool or combination of tools. For complex tasks, you can break down the problem and use different tools step by step to solve it. After using each tool, clearly explain the execution results and suggest the next steps.\\n&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;assistant&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Now I will get the text content of the page.\\n&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;tool_calls&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;id&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tool_0_browser_use&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;function&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;function&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;browser_use&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;arguments&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&#123;\\&quot;action\\&quot;:\\&quot;get_text\\&quot;&#125;&quot;</span></span><br><span class=\"line\">          <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">      <span class=\"punctuation\">]</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tool&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Observed output of cmd `browser_use` executed:\\n注册\\n登录\\n新浪财经APP\\n宏观经济\\nA股\\n港股\\n美股\\n基金\\n理财\\n黄金\\n期货\\n能源\\n互联网金融\\n房地产\\n更多\\n招行有“一招（YiZhao）”\\n2024年12月12日 08:01 支付之家网\\n语音播报\\n缩小字体\\n放大字体\\n微博\\n微信\\n分享\\n0\\n\\n在快速发展的数字化浪潮中，银行业正面临着一次前所未有的变革。\\n\\n近日，招商银行申请注册了“一招(YiZhao)大模型”和“招商银行一招(YiZhao)大模型”商标，这一举动不仅让人对招行的科技布局充满了期待，也透露出银行在人工智能（AI）领域的深远布局。这一商标涉及多个国际分类领域，包括广告销售、网站服务、科学仪器等，预示着招行可能会推出更多基于AI大模型技术的创新产品或服务。\\n\\n招行作为金融行业的科技创新先锋，一直以来都在数字化转型方面走在行业的前列。从推出“一卡通”到开发智能客服“招小宝”，再到利用区块链技术打造金融服务平台，招行始终致力于提升客户体验、优化服务效率。\\n\\n如今，招行提出的“一招”大模型，不仅是一次技术创新，更是对银行业服务模式的一次大胆创新，它标志着银行行业将与人工智能深度融合，进入一个全新的智能化服务时代。\\n\\n大模型与金融科技的深度融合\\n\\n以ChatGPT为代表的大模型技术，展示了强大的自然语言处理与生成能力，其应用已拓展至教育、医疗、法律等多个领域。然而，银行业作为一个数据密集且高度专业化的行业，对大模型提出了更高的要求：不仅需要对行业术语、法律法规以及复杂的客户需求进行精确理解，还需要在服务个性化、运营自动化和风险控制等方面提供专业的解决方案。\\n\\n1. 从通用模型到行业模型\\n\\n虽然像ChatGPT这样的通用模型可以处理广泛的问题，但其在金融场景中的表现需要进一步优化。例如，银行客服需要处理精准的账户查询，投资顾问需要结合客户的财务数据和市场走势提供个性化建议。这些需求要求大模型具备更强的专业化和场景化能力。\\n\\n2. 金融行业的智慧化转型\\n\\n银行业的数字化转型已迈入深水区，未来的竞争核心在于智慧化服务。大模型不仅可以作为客户的智能助手，为其提供洞察性的理财建议；也可以作为员工的数字化伙伴，帮助其提升工作效率、优化决策过程。\\n\\n招商银行信息技术部副总经理俞吴杰透露，针对AI与大语言模型，目前招行的重点在于智算平台的建设。“原来的服务器集群叫通算平台，和大模型相关的叫智算平台。智算平台既包含招行的训练平台，也包括推理平台。”他提到，招行探索大模型的目标不是建立通用模型，而是在金融行业建设垂直领域的大模型。\\n\\n招行的创新不仅局限于大模型的应用，还深入探索了低代码平台与大模型的结合。低代码开发可以大幅降低开发门槛，让业务用户也能参与到系统开发中来。而大模型的引入，使得低代码开发过程变得更加高效和智能。\\n\\n招商银行自2019年启动了企业级低代码开发平台的建设，五年来，低代码平台已成为业务系统开发的重要基础，支持零代码和低代码两种开发模式。尤其在2023年，招行进一步探索了低代码与大模型的融合，提升了开发者的体验，推动了银行业务的科技平民化。\\n\\n大模型驱动的银行业智慧化转型\\n\\n银行业的竞争日益激烈，未来的核心竞争力将在于智慧化服务。大模型技术不仅仅是在后台支持银行的智能化运作，更是在客户交互、金融服务等方面发挥着重要作用。\\n\\n在银行业中，大模型技术的落地应用正在重塑行业生态，其核心场景包括：\\n\\n1. 智能客服：更主动的客户体验\\n\\n大模型支持从被动响应向主动交互转变。传统客服主要解答客户的固定问题，而大模型赋能下的智能客服可以实时分析客户意图，提供个性化建议。例如，在客户咨询投资时，客服不仅能快速匹配合适的理财产品，还能生成详细的市场分析和风险评估。\\n\\n2. 风险控制：实时监测与动态优化\\n\\n金融风险管理是银行的核心业务之一。大模型通过对海量交易数据的实时分析，能够迅速识别异常行为，提高欺诈检测的精度。同时，它还可以结合外部政策、经济数据，动态调整风控模型，为银行提供更可靠的风险管理支持。\\n\\n3. 个性化投顾：精准洞察客户需求\\n\\n传统的理财服务往往以人工顾问为主，但其覆盖面和效率有限。大模型可以分析客户的财务状况、风险偏好以及历史行为数据，生成个性化的投资建议，从而覆盖更多长尾客户，提升服务普惠性。\\n\\n4. 内部流程优化：高效协同与智能辅助\\n\\n银行内部流程复杂，例如贷款审批、合同审阅等，通常需要耗费大量时间。大模型可以实现这些流程的自动化处理，不仅节约人力成本，还能大幅提高效率。例如，它可以在合同审阅中快速标记风险条款，并给出修改建议。\\n\\n5. 合规性与透明度：监管与服务的双赢\\n\\n金融行业的高度合规性要求对技术提出了更高标准。大模型可以实时监控业务流程，确保操作符合监管要求。同时，它还能生成易于理解的报告，帮助客户更清楚地了解自身的金融行为和合规情况。\\n\\n招行“一招”的潜力与战略意义\\n\\n此次“一招”大模型商标的申请，展示了招行在数字化与智能化转型上的战略决心。结合其多年积累的技术优势和场景深耕，“一招”有望成为银行业大模型应用的标杆。\\n\\n1. 数据、技术与场景的深度融合\\n\\n招行拥有丰富的客户数据和复杂的业务场景，这为训练和优化大模型提供了强大的基础。通过将技术与实际业务深度结合，招行能够开发出更贴近客户需求、更具竞争力的智能服务。\\n\\n2. 从银行服务到金融生态的扩展\\n\\n“一招”大模型的潜力不仅限于银行内部业务，还可能扩展到更广阔的金融生态。例如，通过开放接口，与中小企业和金融科技公司合作，提供智能风控、自动化运营等服务，助力整个行业的数字化升级。\\n\\n3. 智能化驱动的服务升级\\n\\n从“一卡通”到“掌上生活”APP，招行一直致力于提升客户体验。“一招”大模型的推出，将进一步推动银行服务从标准化向个性化、从单向服务向双向交互转型，为客户带来更加高效、贴心的金融服务。\\n\\n挑战与机遇：技术落地的关键问题\\n\\n招行在低代码与大模型领域的创新实践，标志着其数字化转型进程中的重要一步。然而，尽管大模型在银行业的应用前景广阔，但其实际落地仍面临一些挑战：\\n\\n数据安全与隐私保护\\n\\n银行掌握着大量敏感数据，大模型的开发和使用需要确保信息的安全性与合规性，避免客户隐私泄露。\\n\\n模型的可解释性与透明性\\n\\n在金融场景中，决策结果必须具备高可解释性，既要让客户信服，也要满足监管要求。这对大模型的技术设计提出了更高的要求。\\n\\n技术迭代与生态协同\\n\\n大模型技术发展迅速，银行需要保持技术敏锐度，同时建立与外部技术生态的良好协同，以实现持续的创新与突破。\\n\\n尽管面临挑战，招行凭借其在技术上的深厚积累，已经在人工智能、大模型和低代码开发方面积累了宝贵经验，未来将在智能化服务、金融生态的建设上继续推动行业的革新。\\n\\n“一招”大模型的商标申请，不仅标志着招行在人工智能领域迈出了重要一步，也揭示了未来银行业智慧化服务的趋势：以技术为驱动，从底层重塑客户体验和运营模式。\\n\\n在这个技术与金融深度融合的时代，招行以“一招”出击，向行业展示了金融科技创新的无限可能。未来，我们期待看到招行将这一“妙招”变为实招，助力客户与行业在智能时代中共创辉煌。\\n\\n注：本文为支付之家网投稿，作者系业内从业人员，文中观点仅代表作者个人观点\\n\\n0条评论|0人参与\\n网友评论\\n登录|注册\\n发布\\n相关新闻\\n加载中 \\n头条号入驻\\n支付之家网\\n支付之家网(ZFZJ.CN)官方头条号！\\n大阪严禁老人在ATM机前打电话丨试点向移动支付平台开放信用监管数据\\n今日截止，国资支付牌照挂牌转让！\\n央视曝光，2家支付机构被“另案处理”！\\n财经自媒体联盟\\n今日推荐\\n优秀作者\\n看点月榜\\nCEO下了飞机就来谈合作！为何外企纷纷看多中国？｜宅男财经\\n\\n中新经纬\\n\\n实测完DeepSeek发布的新模型，我觉得AI编程的全民普惠时刻\\n\\n数字生命卡兹克\\n\\n疯狂小杨哥要回归了？三只羊公司累计赔付近三千万 具备恢复经营条件\\n\\n雷达财经\\n\\n阿里蔡崇信：民企座谈会被低估了，人工智能市场10万亿美金\\n\\n盈利靠“节衣缩食”，虎牙的日子越来越难过了\\n\\n互联网分析师于斌\\n\\n新浪财经头条意见反馈留言板\\n\\n4000520066 欢迎批评指正\\n\\n关于头条 | 如何入驻 | 发稿平台 | 奖励机制 版权声明 | 用户协议 | 帮助中心\\nCopyright © 1996-2019 SINA Corporation\\nAll Rights Reserved 新浪公司 版权所有\\n新浪首页\\n语音播报\\n相关新闻\\n返回顶部&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;browser_use&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;tool_call_id&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tool_0_browser_use&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;user&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;You can interact with the computer using PythonExecute, save important content and information files through FileSaver, open browsers with BrowserUseTool, and retrieve information using BingSearch.\\n\\nPythonExecute: Execute Python code to interact with the computer system, data processing, automation tasks, etc.\\n\\nFileSaver: Save files locally, such as txt, py, html, etc.\\n\\nBrowserUseTool: Open, browse, and use web browsers.If you open a local HTML file, you must provide the absolute path to the file.\\n\\nBingSearch: Perform web information retrieval, and return ref links, you must use BrowserUseTool to fetch information from these links.\\n\\nBased on user needs, proactively select the most appropriate tool or combination of tools. For complex tasks, you can break down the problem and use different tools step by step to solve it. After using each tool, clearly explain the execution results and suggest the next steps.\\n&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;assistant&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;The text content from the first search result is now available. It appears to be an article about \\&quot;一招(YiZhao)大模型\\&quot; from a financial perspective, specifically focusing on the application by China Merchants Bank (招商银行).\\n\\nHere&#x27;s a summary of the key information:\\n\\n*   **招商银行 (China Merchants Bank) is developing an AI model called \\&quot;一招(YiZhao)\\&quot;**: They have applied for trademarks related to this model.\\n*   **Focus on Financial Applications**: The model is intended for use in various financial services, including customer service, risk control, and personalized investment advice.\\n*   **Integration with Low-Code Development**:  招商银行 is also integrating the model with low-code development platforms to improve efficiency.\\n*   **Benefits**: The article highlights potential benefits such as improved customer experience, operational efficiency, and risk management.\\n*   **Challenges**: The article also mentions challenges like data security, model explainability, and the need for continuous technological advancements.\\n\\nNow, I will proceed to the second search result to gather more information.\\n&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;tool_calls&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;id&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tool_0_browser_use&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;function&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;function&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;browser_use&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;arguments&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&#123;\\&quot;url\\&quot;:\\&quot;https://www.modelscope.cn/models/CMB_AILab/YiZhao-12B-Chat/summary\\&quot;,\\&quot;action\\&quot;:\\&quot;navigate\\&quot;&#125;&quot;</span></span><br><span class=\"line\">          <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">      <span class=\"punctuation\">]</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tool&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Observed output of cmd `browser_use` executed:\\nError: Browser action &#x27;navigate&#x27; failed: Page.goto: Timeout 30000ms exceeded.\\nCall log:\\n  - navigating to \\&quot;https://www.modelscope.cn/models/CMB_AILab/YiZhao-12B-Chat/summary\\&quot;, waiting until \\&quot;load\\&quot;\\n&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;browser_use&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;tool_call_id&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tool_0_browser_use&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;user&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;You can interact with the computer using PythonExecute, save important content and information files through FileSaver, open browsers with BrowserUseTool, and retrieve information using BingSearch.\\n\\nPythonExecute: Execute Python code to interact with the computer system, data processing, automation tasks, etc.\\n\\nFileSaver: Save files locally, such as txt, py, html, etc.\\n\\nBrowserUseTool: Open, browse, and use web browsers.If you open a local HTML file, you must provide the absolute path to the file.\\n\\nBingSearch: Perform web information retrieval, and return ref links, you must use BrowserUseTool to fetch information from these links.\\n\\nBased on user needs, proactively select the most appropriate tool or combination of tools. For complex tasks, you can break down the problem and use different tools step by step to solve it. After using each tool, clearly explain the execution results and suggest the next steps.\\n&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;assistant&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;The attempt to navigate to the second URL timed out. I will try again.\\n&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;tool_calls&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;id&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tool_0_browser_use&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;function&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;function&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;browser_use&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;arguments&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&#123;\\&quot;url\\&quot;:\\&quot;https://www.modelscope.cn/models/CMB_AILab/YiZhao-12B-Chat/summary\\&quot;,\\&quot;action\\&quot;:\\&quot;navigate\\&quot;&#125;&quot;</span></span><br><span class=\"line\">          <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">      <span class=\"punctuation\">]</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tool&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Observed output of cmd `browser_use` executed:\\nNavigated to https://www.modelscope.cn/models/CMB_AILab/YiZhao-12B-Chat/summary&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;browser_use&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;tool_call_id&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tool_0_browser_use&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;user&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;You can interact with the computer using PythonExecute, save important content and information files through FileSaver, open browsers with BrowserUseTool, and retrieve information using BingSearch.\\n\\nPythonExecute: Execute Python code to interact with the computer system, data processing, automation tasks, etc.\\n\\nFileSaver: Save files locally, such as txt, py, html, etc.\\n\\nBrowserUseTool: Open, browse, and use web browsers.If you open a local HTML file, you must provide the absolute path to the file.\\n\\nBingSearch: Perform web information retrieval, and return ref links, you must use BrowserUseTool to fetch information from these links.\\n\\nBased on user needs, proactively select the most appropriate tool or combination of tools. For complex tasks, you can break down the problem and use different tools step by step to solve it. After using each tool, clearly explain the execution results and suggest the next steps.\\n&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;assistant&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Now I will get the text content of the page.\\n\\n&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;tool_calls&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;id&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tool_0_browser_use&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;function&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;function&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;browser_use&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;arguments&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&#123;\\&quot;action\\&quot;:\\&quot;get_text\\&quot;&#125;&quot;</span></span><br><span class=\"line\">          <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">      <span class=\"punctuation\">]</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tool&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Observed output of cmd `browser_use` executed:\\n首页\\n模型库\\n数据集\\n创空间\\nAIGC专区\\n文档中心\\n社区\\nGitHub\\n登录 / 注册\\n一招-12B-Chat\\nCMB_AILab/YiZhao-12B-Chat\\nYiZhao\\n@招商银行人工智能实验室提供64下载2025-01-14更新\\nNotebook快速开发\\n喜欢\\n加入合集\\n模型介绍\\n模型文件\\n交流反馈3\\n一招（YiZhao)使用指南\\n\\n大模型金融能力榜单 • 模型文件 • 开源数据\\n\\n目录\\n模型介绍\\n效果评测\\n快速开始\\n声明与协议\\n最新动态\\n2024年12月10日 开源2TB高质量多模态的大模型训练数据集\\n模型介绍\\n\\n一招（YiZhao)是招商银行联合华为、智谱AI，在全国产的设备与训练框架下训练形成的金融领域大语言模型系列。我们首先在大规模高质量数据上进行预训练，再通过高质量金融数据进行后期微调（SFT），最后通过直接偏好优化（DPO）进一步优化模型，最终训练出了YiZhao-12B-Chat。YiZhao-12B-Chat具备自然语言理解、文本生成、舆情事件抽取、工具使用、对话互动等多种功能。YiZhao-12B-Chat是一个专为金融领域设计的 120亿参数大型语言模型，支持32K上下文长度。 主要特点包括：\\n\\n对海量通用语料与金融语料进行了多维度数据清洗与筛选，保证训练数据的数量和质量。\\n\\nYiZhao-12B-Chat是基于GLM（General Language Model）架构的中英双语对话模型，具有120亿参数，对问答和对话场景进行了优化。\\n\\nYiZhao-12B-Chat完全基于国产算力和国产深度学习框架MindSpore进行训练，算力和算法框架更自主可控。\\n\\n这款模型在云端私有化部署后，可以为企业和个人提供高效、灵活的智能对话解决方案。\\n\\n下载链接：\\n\\n社区\\t下载地址\\n魔搭社区（mindspore）\\thttps://www.modelscope.cn/models/CMB_AILab/YiZhao-12B-Chat/\\n魔搭社区（safetensor）\\thttps://modelscope.cn/models/CMB_AILab/YiZhao-12B-Chat-HF\\n魔乐社区 （mindspore）\\thttps://modelers.cn/models/CMB_AI_Lab/YiZhao-12B-Chat/\\n码云\\thttps://gitee.com/mindspore/mindformers/tree/dev/research/yizhao\\n效果评测\\n\\n效果评测包括通用能力评测和金融领域评测。模型在保持通用能力的基础上进一步提升了金融领域能力。\\n\\n1. 通用评测\\n\\n在通用领域评测中，我们选择当下主流的几类客观评测基准，见下表：\\n\\n能力\\t任务\\t描述\\n逻辑推理\\tARC Challenge\\tARC问题需要多种类型的知识与推理，包括定义、基本事实和属性、结构、过程与因果、目的论、代数、实验、空间/运动学、类比等，ARC问题集包含7787个自然科学问题\\n中文知识\\tCMMLU\\t67个学科中文考试题\\n数学能力\\tGSM8K\\t8.5k个样例，数学推理能力\\n通用知识\\tMMLU\\tMMLU 是一个涵盖STEM、人文学科、社会科学等57个学科领域(例如：数学、法律、伦理等)的评测基准，旨在考察大语言模型将知识运用于问题解决的能力\\n指令遵从\\tIFEval\\t确定了25种可验证的指令类型，500个包含一个或多个可验证指令的提示（prompts）\\n测试结果如下：\\n模型\\t逻辑推理\\t中文知识\\t数学能力\\t通用知识\\t指令遵从\\n\\tarc_challenge\\tcmmlu\\tgsm8k\\tmmlu\\tifeval\\n一招-12B-Chat\\t0.9331\\t0.7158\\t0.8993\\t0.7192\\t0.5432\\n小结：\\n\\nYiZhao-12B在通用评测集方面均有出色表现。\\n\\nYiZhao-12B的预训练方案并没有牺牲过多模型通用能力，而且增量训练数据中的中文金融数据，也一定程度地增强了模型的逻辑推理、中文、数学等能力。\\n\\n2. 金融评测\\n\\n金融评测主要包括以下三个测试：\\n\\n任务\\t描述\\nCCKS-IJCKG：DFMEB\\t为了推动LLM在数字金融领域的发展，并解决实际金融业务问题。招商银行联合中科院自动化所、科大讯飞股份有限公司，结合实际生产场景，推出数字金融领域评测基准（Digital Finance Model Evaluation Benchmark，DFMEB）。该评测基准包含六大场景（知识问答、文本理解、内容生成、逻辑推理、安全合规、AI智能体），涵盖69种金融任务，有利于帮助开源社区和业界快速评测公开或者自研LLM。\\nCFBenchmark-OpenFinData\\t“书生•济世”中文金融评测基准（CFBenchmark）基础版本由CFBenchmark-Basic（全部为主观题，不参与测评）和CFBenchmark-OpenFinData两部分数据组成。OpenFinData是由东方财富与上海人工智能实验室联合发布的开源金融评测数据集。该数据集代表了最真实的产业场景需求，是目前场景最全、专业性最深的金融评测数据集。它基于东方财富实际金融业务的多样化丰富场景，旨在为金融科技领域的研究者和开发者提供一个高质量的数据资源。\\nFinancelQ\\tFinanceIQ是一个专业的金融领域评测集，其涵盖了10个金融大类及36个金融小类，总计7173个单项选择题，某种程度上可客观反应模型的金融能力。\\n测试结果如下：\\n模型\\tCCKS-IJCKG：DFMEB\\tCFBenchmark-OpenFinData\\tFinancelQ\\n一招-12B-Chat\\t0.8218\\t0.8798\\t0.6867\\n小结：\\n\\nYiZhao-12B-Chat在金融测评方面表现优异。\\n\\nYiZhao-12B-Chat有着较强的专业知识能力，在金融分析、金融考核、金融安全合规、风险检查等多个专业领域维度有着出色的表现。\\n\\n快速开始\\n\\nYiZhao-12B-Chat模型已发布在魔搭社区、魔乐社区，请根据上述链接进行下载。下方为模型的推理部署使用方法。\\n\\n依赖软件\\n\\n下表列出了运行一招推理所需的环境和第三方依赖。\\n\\n软件名称\\t版本\\t作用\\nMindSpore\\t2.4.0\\t深度学习框架\\nMindSpore Transformers\\t1.3.0\\t大模型全流程开发套件\\nCANN\\t8.0.RC3.beta1\\t昇腾异构计算架构\\nsympy\\t1.13.3\\t三方依赖包\\nPython\\t3.10\\tMindSpore的使用依赖Python环境\\nGCC\\t7.3.0\\t用于编译MindSpore的C++编译器\\n\\n注：MindSpore官网介绍：https://www.mindspore.cn/\\n\\n安装指导\\n1. 安装CANN\\n\\n下载CANN社区版，选择8.0.RC3.beta1版本，按顺序执行：\\n\\n./Ascend-cann-toolkit_8.0.RC3_linux-aarch64.run --install --install-for-all --install-path=/usr/local/Ascend/\\n./Ascend-cann-kernels-910b_8.0.RC3_linux-aarch64.run --install --install-path=/usr/local/Ascend/\\n\\n\\n安装完毕后执行：\\n\\npip uninstall te topi hccl -y\\npip install sympy\\npip install /usr/local/Ascend/ascend-toolkit/latest/lib64/te-*-py3-none-any.whl\\npip install /usr/local/Ascend/ascend-toolkit/latest/lib64/hccl-*-py3-none-any.whl\\n\\n2. 安装MindSpore\\npip install https://ms-release.obs.cn-north-4.myhuaweicloud.com/2.4.0/MindSpore/unified/aarch64/mindspore-2.4.0-cp310-cp310-linux_aarch64.whl --trusted-host ms-release.obs.cn-north-4.myhuaweicloud.com -i https://pypi.tuna.tsinghua.edu.cn/simple\\n\\n\\n验证MindSpore与CANN是否安装成功：\\n\\nsource /usr/local/Ascend/ascend-toolkit/set_env.sh # 每次运行时都需要设置此环境变量\\npython -c \\&quot;import mindspore;mindspore.set_context(device_target=&#x27;Ascend&#x27;);mindspore.run_check()\\&quot;\\n\\n3. 安装MindSpore Transformers\\npip install mindformers==1.3.0\\n\\n4. 安装openmind-hub\\npip install openmind-hub  #如需自动下载，需要安装额外依赖openmind-hub\\n\\n代码示例\\n\\n此处提供一个代码示例，展示如何加载tokenizer和模型，并如何生成内容：\\n\\n\\nimport os\\nimport time\\nimport mindspore as ms\\nfrom mindformers.pipeline import pipeline\\n\\nos.environ[\\&quot;RUN_MODE\\&quot;] = \\&quot;predict\\&quot;\\nos.environ[\\&quot;MS_INTERNAL_DISABLE_CUSTOM_KERNEL_LIST\\&quot;] = \\&quot;PagedAttention\\&quot;\\nms.set_context(device_id=0, mode=0, device_target=&#x27;Ascend&#x27;, jit_config=&#123;&#x27;jit_level&#x27;: &#x27;O0&#x27;, &#x27;infer_boost&#x27;: &#x27;on&#x27;&#125;)\\n\\npipeline_task = pipeline(task=\\&quot;text_generation\\&quot;,\\n                         model=\\&quot;CMB_AILab/YiZhao-12B-Chat\\&quot;,  # model_path\\n                         framework=&#x27;ms&#x27;,\\n                         model_kwargs=&#123;\\&quot;use_past\\&quot;: True&#125;,\\n                         trust_remote_code=True\\n                         )\\nwhile True:\\n    input_ = input(\\&quot;模型输入: \\&quot;)\\n    template = f\\&quot;&lt;|user|&gt;&#123;input_&#125;&lt;|assistant|&gt;\\&quot;\\n\\n    pipeline_result = pipeline_task(template, do_sample=False, seed=int(time.time()))\\n    print(pipeline_result[0][\\&quot;text_generation_text\\&quot;][0].replace(f\\&quot;&#123;input_&#125;\\&quot;, \\&quot;\\&quot;, 1))\\n\\n声明与协议\\n声明\\n\\n我们在此声明，不要使用一招（YiZhao）模型及其衍生模型进行任何危害国家社会安全或违法的活动。同时，我们也要求使用者不要将一招（YiZhao）用于未经必要安全审查和备案的互联网服务。我们希望所有使用者遵守上述原则，确保科技发展在合法合规的环境下进行。\\n\\n我们已经尽我们所能，来确保模型训练过程中使用的数据及模型的合规性。然而，尽管我们已经做出了巨大的努力，但由于模型和数据的复杂性，仍有可能存在一些无法预见的问题。使用者应结合使用场景、使用目的、涉及数据敏感性、预期运行环境，进行必要的测试，了解了大模型局限性，评估潜在风险及使用大模型的合法性及适当性，采取必要的缓释措施，并履行必要的安全及合规义务。因使用一招（YiZhao）开源模型而导致的任何问题，包括但不限于数据安全问题、公共舆论风险，或模型被误导、滥用、传播或不当利用所带来的任何风险和问题，我们将不承担任何责任。\\n\\n协议\\n\\n社区使用一招（YiZhao）模型需要遵循《“一招（YiZhao）”许可协议》。\\n\\n如果使用方为非自然人实体，您需要通过以下联系邮箱ailab@cmbchina.com，提交《“一招（YiZhao）”许可协议》要求的申请材料。审核通过后，将特此授予您一个非排他性、全球性、不可转让、不可再许可、可撤销和免版税的有限许可，但仅限于被许可方内部的使用、复制、分发以及修改，并且应当遵守《“一招（YiZhao）”许可协议》。\\n\\n作者：\\n招商银行人工智能实验室\\n  \\n模型 2\\n数据集 0\\n创空间 0\\n收录本模型的合集（ 1 ）\\nAIOps\\n2025.03.20\\n3\\n0\\n\\n分享\\n\\n© 2022-2025 ModelScope.cn 版权所有&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;browser_use&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;tool_call_id&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tool_0_browser_use&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;user&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;You can interact with the computer using PythonExecute, save important content and information files through FileSaver, open browsers with BrowserUseTool, and retrieve information using BingSearch.\\n\\nPythonExecute: Execute Python code to interact with the computer system, data processing, automation tasks, etc.\\n\\nFileSaver: Save files locally, such as txt, py, html, etc.\\n\\nBrowserUseTool: Open, browse, and use web browsers.If you open a local HTML file, you must provide the absolute path to the file.\\n\\nBingSearch: Perform web information retrieval, and return ref links, you must use BrowserUseTool to fetch information from these links.\\n\\nBased on user needs, proactively select the most appropriate tool or combination of tools. For complex tasks, you can break down the problem and use different tools step by step to solve it. After using each tool, clearly explain the execution results and suggest the next steps.\\n&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;model&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;google/gemini-2.0-flash-lite-preview-02-05:free&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;max_tokens&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">128000</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;temperature&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;tool_choice&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;auto&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;tools&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;function&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;function&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;python_execute&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;description&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Executes Python code string. Note: Only print outputs are visible, function return values are not captured. Use print statements to see results.&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;parameters&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;object&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;properties&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;code&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">              <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;string&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">              <span class=\"attr\">&quot;description&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;The Python code to execute.&quot;</span></span><br><span class=\"line\">            <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">          <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;required&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">            <span class=\"string\">&quot;code&quot;</span></span><br><span class=\"line\">          <span class=\"punctuation\">]</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">      <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;function&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;function&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;bing_search&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;description&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;执行必应搜索并返回相关链接列表。\\n当需要获取互联网信息或英文内容时建议使用此工具。\\n工具返回与搜索查询匹配的URL列表。后续可以通过browser_use工具去进行访问URL&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;parameters&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;object&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;properties&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;query&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">              <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;string&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">              <span class=\"attr\">&quot;description&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;(必填) 提交给必应的搜索关键词&quot;</span></span><br><span class=\"line\">            <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;num_results&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">              <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;integer&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">              <span class=\"attr\">&quot;description&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;(可选) 返回的搜索结果数量，默认5&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">              <span class=\"attr\">&quot;default&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">5</span></span><br><span class=\"line\">            <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">          <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;required&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">            <span class=\"string\">&quot;query&quot;</span></span><br><span class=\"line\">          <span class=\"punctuation\">]</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">      <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">]</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"LangManus\"><a href=\"#LangManus\" class=\"headerlink\" title=\"LangManus\"></a>LangManus</h4><p><a href=\"https://github.com/langmanus/langmanus/tree/main\"> 🦜🤖 LangManus 5.2k star</a></p>\n<p>基于langchain生态multiAgents实现类似功能，tavily搜索引擎 + jina爬虫 + browser-use浏览器 + pythonREPL代码执行 + subprocess bash执行 + 基础文件操作</p>\n<img title=\"\" src=\"./2025-03-27-14-29-59-image.png\" alt=\"\" width=\"504\" data-align=\"left\">\n\n<p>系统由以下智能体协同工作：</p>\n<ol>\n<li><strong>协调员（Coordinator）</strong>：工作流程的入口点，处理初始交互并路由任务</li>\n<li><strong>规划员（Planner）</strong>：分析任务并制定执行策略</li>\n<li><strong>主管（Supervisor）</strong>：监督和管理其他智能体的执行</li>\n<li><strong>研究员（Researcher）</strong>：收集和分析信息</li>\n<li><strong>程序员（Coder）</strong>：负责代码生成和修改</li>\n<li><strong>浏览器（Browser）</strong>：执行网页浏览和信息检索 </li>\n<li><strong>汇报员（Reporter）</strong>：生成工作流结果的报告和总结</li>\n</ol>\n<p>实现这些agents一共只用到了以下tools</p>\n<img title=\"\" src=\"./2025-03-27-14-51-50-image.png\" alt=\"\" width=\"223\" data-align=\"left\">\n\n<p>由supervisor控制loop和结束, prompt如下</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">You are a supervisor coordinating a team of specialized workers to complete tasks. Your team consists of: [&#123;&#123; TEAM<span class=\"emphasis\">_MEMBERS|join(&quot;, &quot;) &#125;&#125;].</span></span><br><span class=\"line\"><span class=\"emphasis\"></span></span><br><span class=\"line\"><span class=\"emphasis\">For each user request, you will:</span></span><br><span class=\"line\"><span class=\"emphasis\"></span></span><br><span class=\"line\"><span class=\"emphasis\">Analyze the request and determine which worker is best suited to handle it next</span></span><br><span class=\"line\"><span class=\"emphasis\">Respond with ONLY a JSON object in the format: &#123;&quot;next&quot;: &quot;worker_</span>name&quot;&#125;</span><br><span class=\"line\">Review their response and either:</span><br><span class=\"line\">Choose the next worker if more work is needed (e.g., &#123;&quot;next&quot;: &quot;researcher&quot;&#125;)</span><br><span class=\"line\">Respond with &#123;&quot;next&quot;: &quot;FINISH&quot;&#125; when the task is complete</span><br><span class=\"line\">Always respond with a valid JSON object containing only the &#x27;next&#x27; key and a single value: either a worker&#x27;s name or &#x27;FINISH&#x27;.</span><br><span class=\"line\"></span><br><span class=\"line\">Team Members</span><br><span class=\"line\">&#123;% for agent in TEAM<span class=\"emphasis\">_MEMBERS %&#125;</span></span><br><span class=\"line\"><span class=\"emphasis\"></span></span><br><span class=\"line\"><span class=\"emphasis\">&#123;&#123;agent&#125;&#125;: &#123;&#123; TEAM_</span>MEMBER<span class=\"emphasis\">_CONFIGRATIONS[<span class=\"string\">agent</span>][<span class=\"symbol\">&quot;desc_for_llm&quot;</span>] &#125;&#125; &#123;% endfor %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"开源基础组件\"><a href=\"#开源基础组件\" class=\"headerlink\" title=\"开源基础组件\"></a>开源基础组件</h3><h4 id=\"Browser-use\"><a href=\"#Browser-use\" class=\"headerlink\" title=\"Browser-use\"></a>Browser-use</h4><p><a href=\"https://github.com/browser-use/browser-use\">GitHub - browser-use/browser-use 🤖  49K star</a></p>\n<p>🌐 Browser-use is the easiest way to connect your AI agents with the browser. 它集成了开源浏览器自动化工具playwright来实现api控制浏览器行为，并内置了一个Agent，通过react让 llm loop执行直到完成用户指令。基本用法如下</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> langchain_openai <span class=\"keyword\">import</span> ChatOpenAI</span><br><span class=\"line\"><span class=\"keyword\">from</span> browser_use <span class=\"keyword\">import</span> Agent</span><br><span class=\"line\"><span class=\"keyword\">import</span> asyncio</span><br><span class=\"line\"><span class=\"keyword\">from</span> dotenv <span class=\"keyword\">import</span> load_dotenv</span><br><span class=\"line\">load_dotenv()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">def</span> <span class=\"title function_\">main</span>():</span><br><span class=\"line\">    agent = Agent(</span><br><span class=\"line\">        task=<span class=\"string\">&quot;Compare the price of gpt-4o and DeepSeek-V3&quot;</span>,</span><br><span class=\"line\">        llm=ChatOpenAI(model=<span class=\"string\">&quot;gpt-4o&quot;</span>),</span><br><span class=\"line\">        use_vision=<span class=\"literal\">True</span>,  </span><br><span class=\"line\">    )</span><br><span class=\"line\">    <span class=\"keyword\">await</span> agent.run()</span><br><span class=\"line\"></span><br><span class=\"line\">asyncio.run(main())</span><br></pre></td></tr></table></figure>\n\n<p>内置的浏览器tools：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">go_to_url</span><br><span class=\"line\">go_back</span><br><span class=\"line\">wait</span><br><span class=\"line\">search_google</span><br><span class=\"line\">click_element</span><br><span class=\"line\">input_text</span><br><span class=\"line\">switch_tab</span><br><span class=\"line\">open_tab</span><br><span class=\"line\">extract_content</span><br><span class=\"line\">scroll_down</span><br><span class=\"line\">scroll_up</span><br><span class=\"line\">send_keys</span><br><span class=\"line\">scroll_to_text</span><br><span class=\"line\">get_dropdown_options</span><br><span class=\"line\">select_dropdown_option</span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n\n<p>LLM实际调用日志：react过程</p>\n<p><strong>测试prompt</strong>：打开Bing搜索 搜索一下一招大模型的信息，多看几篇网页，总结一下重要信息</p>\n<p>model: groq/deepseek-r1-distill-qwen-32b</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;messages&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;You are an AI agent designed to automate browser tasks. Your goal is to accomplish the ultimate task following the rules.\\n\\n# Input Format\\nTask\\nPrevious steps\\nCurrent URL\\nOpen Tabs\\nInteractive Elements\\n[index]&lt;type&gt;text&lt;/type&gt;\\n- index: Numeric identifier for interaction\\n- type: HTML element type (button, input, etc.)\\n- text: Element description\\nExample:\\n[33]&lt;button&gt;Submit Form&lt;/button&gt;\\n\\n- Only elements with numeric indexes in [] are interactive\\n- elements without [] provide only context\\n\\n# Response Rules\\n1. RESPONSE FORMAT: You must ALWAYS respond with valid JSON in this exact format:\\n&#123;\\&quot;current_state\\&quot;: &#123;\\&quot;evaluation_previous_goal\\&quot;: \\&quot;Success|Failed|Unknown - Analyze the current elements and the image to check if the previous goals/actions are successful like intended by the task. Mention if something unexpected happened. Shortly state why/why not\\&quot;,\\n\\&quot;memory\\&quot;: \\&quot;Description of what has been done and what you need to remember. Be very specific. Count here ALWAYS how many times you have done something and how many remain. E.g. 0 out of 10 websites analyzed. Continue with abc and xyz\\&quot;,\\n\\&quot;next_goal\\&quot;: \\&quot;What needs to be done with the next immediate action\\&quot;&#125;,\\n\\&quot;action\\&quot;:[&#123;\\&quot;one_action_name\\&quot;: &#123;// action-specific parameter&#125;&#125;, // ... more actions in sequence]&#125;\\n\\n2. ACTIONS: You can specify multiple actions in the list to be executed in sequence. But always specify only one action name per item. Use maximum &#123;max_actions&#125; actions per sequence.\\nCommon action sequences:\\n- Form filling: [&#123;\\&quot;input_text\\&quot;: &#123;\\&quot;index\\&quot;: 1, \\&quot;text\\&quot;: \\&quot;username\\&quot;&#125;&#125;, &#123;\\&quot;input_text\\&quot;: &#123;\\&quot;index\\&quot;: 2, \\&quot;text\\&quot;: \\&quot;password\\&quot;&#125;&#125;, &#123;\\&quot;click_element\\&quot;: &#123;\\&quot;index\\&quot;: 3&#125;&#125;]\\n- Navigation and extraction: [&#123;\\&quot;go_to_url\\&quot;: &#123;\\&quot;url\\&quot;: \\&quot;https://example.com\\&quot;&#125;&#125;, &#123;\\&quot;extract_content\\&quot;: &#123;\\&quot;goal\\&quot;: \\&quot;extract the names\\&quot;&#125;&#125;]\\n- Actions are executed in the given order\\n- If the page changes after an action, the sequence is interrupted and you get the new state.\\n- Only provide the action sequence until an action which changes the page state significantly.\\n- Try to be efficient, e.g. fill forms at once, or chain actions where nothing changes on the page\\n- only use multiple actions if it makes sense.\\n\\n3. ELEMENT INTERACTION:\\n- Only use indexes of the interactive elements\\n- Elements marked with \\&quot;[]Non-interactive text\\&quot; are non-interactive\\n\\n4. NAVIGATION &amp; ERROR HANDLING:\\n- If no suitable elements exist, use other functions to complete the task\\n- If stuck, try alternative approaches - like going back to a previous page, new search, new tab etc.\\n- Handle popups/cookies by accepting or closing them\\n- Use scroll to find elements you are looking for\\n- If you want to research something, open a new tab instead of using the current tab\\n- If captcha pops up, try to solve it - else try a different approach\\n- If the page is not fully loaded, use wait action\\n\\n5. TASK COMPLETION:\\n- Use the done action as the last action as soon as the ultimate task is complete\\n- Dont use \\&quot;done\\&quot; before you are done with everything the user asked you, except you reach the last step of max_steps. \\n- If you reach your last step, use the done action even if the task is not fully finished. Provide all the information you have gathered so far. If the ultimate task is completly finished set success to true. If not everything the user asked for is completed set success in done to false!\\n- If you have to do something repeatedly for example the task says for \\&quot;each\\&quot;, or \\&quot;for all\\&quot;, or \\&quot;x times\\&quot;, count always inside \\&quot;memory\\&quot; how many times you have done it and how many remain. Don&#x27;t stop until you have completed like the task asked you. Only call done after the last step.\\n- Don&#x27;t hallucinate actions\\n- Make sure you include everything you found out for the ultimate task in the done text parameter. Do not just say you are done, but include the requested information of the task. \\n\\n6. VISUAL CONTEXT:\\n- When an image is provided, use it to understand the page layout\\n- Bounding boxes with labels on their top right corner correspond to element indexes\\n\\n7. Form filling:\\n- If you fill an input field and your action sequence is interrupted, most often something changed e.g. suggestions popped up under the field.\\n\\n8. Long tasks:\\n- Keep track of the status and subresults in the memory. \\n\\n9. Extraction:\\n- If your task is to find information - call extract_content on the specific pages to get and store the information.\\nYour responses must be always JSON with the specified format. &quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;system&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Context for the taskAvailable actions: Complete task - with return text and if the task is finished (success=True) or not yet  completly finished (success=False), because last step is reached: \\n&#123;done: &#123;&#x27;text&#x27;: &#123;&#x27;type&#x27;: &#x27;string&#x27;&#125;, &#x27;success&#x27;: &#123;&#x27;type&#x27;: &#x27;boolean&#x27;&#125;&#125;&#125;\\nSearch the query in Google in the current tab, the query should be a search query like humans search in Google, concrete and not vague or super long. More the single most important items. input example: &#123;\\&quot;query\\&quot;: \\&quot;your words\\&quot;&#125;: \\n&#123;search_google: &#123;&#x27;query&#x27;: &#123;&#x27;type&#x27;: &#x27;string&#x27;&#125;&#125;&#125;\\nNavigate to URL in the current tab: \\n&#123;go_to_url: &#123;&#x27;url&#x27;: &#123;&#x27;type&#x27;: &#x27;string&#x27;&#125;&#125;&#125;\\nGo back: \\n&#123;go_back: &#123;&#125;&#125;\\nWait for x seconds default 3: \\n&#123;wait: &#123;&#x27;seconds&#x27;: &#123;&#x27;default&#x27;: 3, &#x27;type&#x27;: &#x27;integer&#x27;&#125;&#125;&#125;\\nClick element: \\n&#123;click_element: &#123;&#x27;index&#x27;: &#123;&#x27;type&#x27;: &#x27;integer&#x27;&#125;, &#x27;xpath&#x27;: &#123;&#x27;anyOf&#x27;: [&#123;&#x27;type&#x27;: &#x27;string&#x27;&#125;, &#123;&#x27;type&#x27;: &#x27;null&#x27;&#125;], &#x27;default&#x27;: None&#125;&#125;&#125;\\nInput text into a input interactive element: \\n&#123;input_text: &#123;&#x27;index&#x27;: &#123;&#x27;type&#x27;: &#x27;integer&#x27;&#125;, &#x27;text&#x27;: &#123;&#x27;type&#x27;: &#x27;string&#x27;&#125;, &#x27;xpath&#x27;: &#123;&#x27;anyOf&#x27;: [&#123;&#x27;type&#x27;: &#x27;string&#x27;&#125;, &#123;&#x27;type&#x27;: &#x27;null&#x27;&#125;], &#x27;default&#x27;: None&#125;&#125;&#125;\\nSwitch tab: \\n&#123;switch_tab: &#123;&#x27;page_id&#x27;: &#123;&#x27;type&#x27;: &#x27;integer&#x27;&#125;&#125;&#125;\\nOpen url in new tab: \\n&#123;open_tab: &#123;&#x27;url&#x27;: &#123;&#x27;type&#x27;: &#x27;string&#x27;&#125;&#125;&#125;\\nExtract page content to retrieve specific information from the page, e.g. all company names, a specifc description, all information about, links with companies in structured format or simply links: \\n&#123;extract_content: &#123;&#x27;goal&#x27;: &#123;&#x27;type&#x27;: &#x27;string&#x27;&#125;&#125;&#125;\\nScroll down the page by pixel amount - if no amount is specified, scroll down one page: \\n&#123;scroll_down: &#123;&#x27;amount&#x27;: &#123;&#x27;anyOf&#x27;: [&#123;&#x27;type&#x27;: &#x27;integer&#x27;&#125;, &#123;&#x27;type&#x27;: &#x27;null&#x27;&#125;], &#x27;default&#x27;: None&#125;&#125;&#125;\\nScroll up the page by pixel amount - if no amount is specified, scroll up one page: \\n&#123;scroll_up: &#123;&#x27;amount&#x27;: &#123;&#x27;anyOf&#x27;: [&#123;&#x27;type&#x27;: &#x27;integer&#x27;&#125;, &#123;&#x27;type&#x27;: &#x27;null&#x27;&#125;], &#x27;default&#x27;: None&#125;&#125;&#125;\\nSend strings of special keys like Escape,Backspace, Insert, PageDown, Delete, Enter, Shortcuts such as `Control+o`, `Control+Shift+T` are supported as well. This gets used in keyboard.press. : \\n&#123;send_keys: &#123;&#x27;keys&#x27;: &#123;&#x27;type&#x27;: &#x27;string&#x27;&#125;&#125;&#125;\\nIf you dont find something which you want to interact with, scroll to it: \\n&#123;scroll_to_text: &#123;&#x27;text&#x27;: &#123;&#x27;type&#x27;: &#x27;string&#x27;&#125;&#125;&#125;\\nGet all options from a native dropdown: \\n&#123;get_dropdown_options: &#123;&#x27;index&#x27;: &#123;&#x27;type&#x27;: &#x27;integer&#x27;&#125;&#125;&#125;\\nSelect dropdown option for interactive element index by the text of the option you want to select: \\n&#123;select_dropdown_option: &#123;&#x27;index&#x27;: &#123;&#x27;type&#x27;: &#x27;integer&#x27;&#125;, &#x27;text&#x27;: &#123;&#x27;type&#x27;: &#x27;string&#x27;&#125;&#125;&#125;Your ultimate task is: \\&quot;\\&quot;\\&quot;打开Bing搜索 搜索一下一招大模型的信息，多看几篇网页，总结一下重要信息\\&quot;\\&quot;\\&quot;. If you achieved your ultimate task, stop everything and use the done action in the next step to complete the task. If not, continue as usual.Example output:Your ultimate task is: \\&quot;\\&quot;\\&quot;打开Bing搜索 搜索一下一招大模型的信息，多看几篇网页，总结一下重要信息\\&quot;\\&quot;\\&quot;. If you achieved your ultimate task, stop everything and use the done action in the next step to complete the task. If not, continue as usual.Example output:Your ultimate task is: \\&quot;\\&quot;\\&quot;打开Bing搜索 搜索一下一招大模型的信息，多看几篇网页，总结一下重要信息\\&quot;\\&quot;\\&quot;. If you achieved your ultimate task, stop everything and use the done action in the next step to complete the task. If not, continue as usual.Example output:Your ultimate task is: \\&quot;\\&quot;\\&quot;打开Bing搜索 搜索一下一招大模型的信息，多看几篇网页，总结一下重要信息\\&quot;\\&quot;\\&quot;. If you achieved your ultimate task, stop everything and use the done action in the next step to complete the task. If not, continue as usual.Example output:&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;user&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;[&#123;\\&quot;name\\&quot;: \\&quot;AgentOutput\\&quot;, \\&quot;args\\&quot;: &#123;\\&quot;current_state\\&quot;: &#123;\\&quot;evaluation_previous_goal\\&quot;: \\&quot;Success - I opend the first page\\&quot;, \\&quot;memory\\&quot;: \\&quot;Starting with the new task. I have completed 1/10 steps\\&quot;, \\&quot;next_goal\\&quot;: \\&quot;Click on company a\\&quot;&#125;, \\&quot;action\\&quot;: [&#123;\\&quot;click_element\\&quot;: &#123;\\&quot;index\\&quot;: 0&#125;&#125;]&#125;, \\&quot;id\\&quot;: \\&quot;1\\&quot;, \\&quot;type\\&quot;: \\&quot;tool_call\\&quot;&#125;]&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;assistant&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Browser started[Your task history memory starts here]&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;user&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;[&#123;\\&quot;name\\&quot;: \\&quot;AgentOutput\\&quot;, \\&quot;args\\&quot;: &#123;\\&quot;current_state\\&quot;: &#123;\\&quot;evaluation_previous_goal\\&quot;: \\&quot;Unknown - Analyze the current elements and the image to understand the starting point\\&quot;, \\&quot;memory\\&quot;: \\&quot;Starting with the new task. I have completed 0/10 steps. Need to open Bing search and perform the search query.\\&quot;, \\&quot;next_goal\\&quot;: \\&quot;Navigate to Bing search\\&quot;&#125;, \\&quot;action\\&quot;: [&#123;\\&quot;go_to_url\\&quot;: &#123;\\&quot;url\\&quot;: \\&quot;https://www.bing.com\\&quot;&#125;&#125;]&#125;, \\&quot;id\\&quot;: \\&quot;2\\&quot;, \\&quot;type\\&quot;: \\&quot;tool_call\\&quot;&#125;]&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;assistant&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Action result: 🔗  Navigated to https://www.bing.com&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;user&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;[&#123;\\&quot;name\\&quot;: \\&quot;AgentOutput\\&quot;, \\&quot;args\\&quot;: &#123;\\&quot;current_state\\&quot;: &#123;\\&quot;evaluation_previous_goal\\&quot;: \\&quot;Success - Successfully navigated to Bing search page\\&quot;, \\&quot;memory\\&quot;: \\&quot;Starting with the new task. I have completed 1/10 steps. I have navigated to Bing search and need to perform the search query.\\&quot;, \\&quot;next_goal\\&quot;: \\&quot;Perform the search query for &#x27;\\\\u4e00\\\\u62db\\\\u5927\\\\u6a21\\\\u578b&#x27;\\&quot;&#125;, \\&quot;action\\&quot;: [&#123;\\&quot;input_text\\&quot;: &#123;\\&quot;index\\&quot;: 11, \\&quot;text\\&quot;: \\&quot;\\\\u4e00\\\\u62db\\\\u5927\\\\u6a21\\\\u578b\\&quot;&#125;&#125;, &#123;\\&quot;click_element\\&quot;: &#123;\\&quot;index\\&quot;: 12&#125;&#125;, &#123;\\&quot;wait\\&quot;: &#123;\\&quot;seconds\\&quot;: 3&#125;&#125;]&#125;, \\&quot;id\\&quot;: \\&quot;3\\&quot;, \\&quot;type\\&quot;: \\&quot;tool_call\\&quot;&#125;]&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;assistant&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Action result: ⌨️  Input 一招大模型 into index 11Action result: Something new appeared after action 1 / 3&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;user&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;[&#123;\\&quot;name\\&quot;: \\&quot;AgentOutput\\&quot;, \\&quot;args\\&quot;: &#123;\\&quot;current_state\\&quot;: &#123;\\&quot;evaluation_previous_goal\\&quot;: \\&quot;Success - Successfully navigated to Bing search page and performed the search query.\\&quot;, \\&quot;memory\\&quot;: \\&quot;Starting with the new task. I have completed 1/10 steps. I have navigated to Bing search and performed the search query. Need to click on the search results to view more information.\\&quot;, \\&quot;next_goal\\&quot;: \\&quot;Click on the first search result to view the webpage\\&quot;&#125;, \\&quot;action\\&quot;: [&#123;\\&quot;click_element\\&quot;: &#123;\\&quot;index\\&quot;: 16&#125;&#125;, &#123;\\&quot;wait\\&quot;: &#123;\\&quot;seconds\\&quot;: 3&#125;&#125;, &#123;\\&quot;extract_content\\&quot;: &#123;\\&quot;goal\\&quot;: \\&quot;extract information about \\\\u4e00\\\\u62db\\\\u5927\\\\u6a21\\\\u578b\\&quot;&#125;&#125;]&#125;, \\&quot;id\\&quot;: \\&quot;4\\&quot;, \\&quot;type\\&quot;: \\&quot;tool_call\\&quot;&#125;]&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;assistant&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Action result: 🖱️  Clicked button with index 16: Action result: 🕒  Waiting for 3 secondsAction result: 📄  Extracted from page\\n: &lt;think&gt;\\n好，我现在需要处理用户的查询，目标是从给定的页面内容中提取关于“一招大模型”的信息，并以JSON格式返回。首先，我得仔细阅读用户提供的页面内容，理解其中的结构和信息分布。\\n\\n页面看起来像是一个搜索结果页面，包含多个搜索结果条目，每个条目都有标题、来源和简要描述。此外，还有图片搜索结果和其他相关搜索链接。我的任务是从这些内容中提取所有与“一招大模型”相关的信息。\\n\\n首先，我会浏览每个搜索结果条目，看看它们是否提到了“一招大模型”。例如，第一个结果来自新浪财经，提到招商银行提出了“一招”大模型，这是一次技术创新，也是服务模式的创新。这表明“一招大模型”是招商银行开发的，用于金融领域的AI模型。\\n\\n接下来，第二个结果是图片搜索，显示了多个相关图片，但可能对提取文本信息帮助不大，所以可以暂时忽略。第三个结果来自ModelScope社区，详细说明了“一招”大模型是由招商银行与华为、智谱AI合作开发的，使用全国产设备和框架，专注于金融领域。这部分信息非常重要，因为它提供了开发背景和合作伙伴。\\n\\n第四个到第十个结果来自不同的新闻网站，如网易、新浪财经、亿欧、搜狐和百家号，都报道了招商银行申请了“一招大模型”的商标，涉及金融创新和AI技术的应用。这些信息补充了“一招大模型”的商标注册情况和其在金融领域的应用前景。\\n\\n在提取信息时，我需要确保涵盖以下几点：\\n1. “一招大模型”的定义和用途。\\n2. 开发背景，包括合作方和开发环境。\\n3. 商标注册情况及其意义。\\n4. 该模型对金融行业的影响。\\n\\n此外，我还需要注意信息的来源是否可靠，比如是否来自官方渠道或知名新闻网站。例如，新浪财经和搜狐的报道提供了详细的背景信息，而ModelScope社区则提供了技术细节。\\n\\n在整理信息时，我会将每个关键点分类，如定义、开发背景、商标注册和影响，确保结构清晰。同时，要避免重复信息，比如多个来源都提到商标注册，但具体内容相似，可以合并描述。\\n\\n最后，我会将提取的信息组织成JSON格式，确保每个字段准确无误，并且信息全面。这样，用户就能清楚地了解“一招大模型”的各个方面，包括其开发、应用和影响。\\n&lt;/think&gt;\\n\\n```json\\n&#123;\\n  \\&quot;extracted_information\\&quot;: [\\n    &#123;\\n      \\&quot;title\\&quot;: \\&quot;一招大模型\\&quot;,\\n      \\&quot;description\\&quot;: \\&quot;一招大模型是由招商银行股份有限公司申请注册的商标，主要用于金融领域的人工智能技术应用。该模型旨在推动银行业服务模式的创新，标志着银行行业将与人工智能深度融合，进入一个全新的智能化服务时代。\\&quot;,\\n      \\&quot;source\\&quot;: \\&quot;新浪财经网\\&quot;,\\n      \\&quot;date\\&quot;: \\&quot;2024年12月12日\\&quot;\\n    &#125;,\\n    &#123;\\n      \\&quot;title\\&quot;: \\&quot;一招大模型的商标申请\\&quot;,\\n      \\&quot;description\\&quot;: \\&quot;招商银行股份有限公司申请注册了“一招（YiZhao）大模型”和“招商银行一招（YiZhao）大模型”商标，国际分类为广告销售、科学仪器等。这一举措表明招商银行在人工智能领域的战略布局。\\&quot;,\\n      \\&quot;source\\&quot;: \\&quot;新浪财经\\&quot;,\\n      \\&quot;date\\&quot;: \\&quot;2024年12月11日\\&quot;\\n    &#125;,\\n    &#123;\\n      \\&quot;title\\&quot;: \\&quot;一招大模型的技术背景\\&quot;,\\n      \\&quot;description\\&quot;: \\&quot;一招大模型是由招商银行联合华为、智谱AI，在全国产的设备与训练框架下训练形成的金融领域大语言模型系列。该模型首先在大规模高质量数据上进行预训练，再通过高质量金融数据进行后期优化。\\&quot;,\\n      \\&quot;source\\&quot;: \\&quot;ModelScope 魔搭社区\\&quot;,\\n      \\&quot;date\\&quot;: \\&quot;2024年12月\\&quot;\\n    &#125;,\\n    &#123;\\n      \\&quot;title\\&quot;: \\&quot;一招大模型的行业影响\\&quot;,\\n      \\&quot;description\\&quot;: \\&quot;一招大模型的提出不仅是技术创新，更是对银行业服务模式的一次大胆创新。它标志着银行行业将与人工智能深度融合，进入一个全新的智能化服务时代。\\&quot;,\\n      \\&quot;source\\&quot;: \\&quot;网易\\&quot;,\\n      \\&quot;date\\&quot;: \\&quot;2024年12月12日\\&quot;\\n    &#125;,\\n    &#123;\\n      \\&quot;title\\&quot;: \\&quot;一招大模型的商标申请\\&quot;,\\n      \\&quot;description\\&quot;: \\&quot;招商银行股份有限公司申请注册了“一招大模型”及相关商标，旨在推动人工智能技术在金融领域的应用与发展。\\&quot;,\\n      \\&quot;source\\&quot;: \\&quot;亿欧\\&quot;,\\n      \\&quot;date\\&quot;: \\&quot;2024年12月11日\\&quot;\\n    &#125;\\n  ],\\n  \\&quot;related_searches\\&quot;: [\\n    \\&quot;一招大模型商标\\&quot;,\\n    \\&quot;招行一招大模型\\&quot;,\\n    \\&quot;招商银行一招大模型\\&quot;,\\n    \\&quot;招行大模型\\&quot;,\\n    \\&quot;招商银行申请大模型\\&quot;,\\n    \\&quot;招商银行大模型\\&quot;\\n  ]\\n&#125;\\n```\\n\\n[Task history memory ends]\\n[Current state starts here]\\nThe following is one-time information - if you need to remember it write it to memory:\\nCurrent url: https://www.bing.com/search?q=%e4%b8%80%e6%8b%9b%e5%a4%a7%e6%a8%a1%e5%9e%8b&amp;qs=UT&amp;pq=%e4%b8%80%e6%8b%9b%e5%a4%a7%e6%a8%a1%e5%9e%8b&amp;sc=1-5&amp;cvid=90B5926ACCCE4AF78697D50732768863&amp;FORM=QBLH&amp;sp=1&amp;lq=0\\nAvailable tabs:\\n[TabInfo(page_id=0, url=&#x27;https://www.bing.com/search?q=%e4%b8%80%e6%8b%9b%e5%a4%a7%e6%a8%a1%e5%9e%8b&amp;qs=UT&amp;pq=%e4%b8%80%e6%8b%9b%e5%a4%a7%e6%a8%a1%e5%9e%8b&amp;sc=1-5&amp;cvid=90B5926ACCCE4AF78697D50732768863&amp;FORM=QBLH&amp;sp=1&amp;lq=0&#x27;, title=&#x27;一招大模型 - 搜索&#x27;)]\\nInteractive elements from top layer of the current page inside the viewport:\\n... 26 pixels above - scroll or extract content to see more ...\\n跳至内容\\n[0]&lt;a /&gt;\\n[1]&lt;input 在此处输入你的搜索 — 输入时会显示搜索建议;q;一招大模型;search/&gt;\\n[2]&lt;div 语音搜索;button/&gt;\\n[3]&lt;div false;使用图像搜索;button/&gt;\\n[4]&lt;a “搜索”按钮/&gt;\\n[5]&lt;input go;搜索;submit/&gt;\\n[6]&lt;a /&gt;\\n[7]&lt;input submit;登录/&gt;\\n[8]&lt;a Microsoft Rewards;false;button/&gt;\\n[9]&lt;a 设置和快速链接;false;button/&gt;\\n[10]&lt;a 全部/&gt;\\n[11]&lt;a 图片/&gt;\\n[12]&lt;a 视频/&gt;\\n[13]&lt;a 地图/&gt;\\n[14]&lt;a 资讯/&gt;\\n[15]&lt;a Dropdown Menu;button&gt;更多/&gt;\\n[16]&lt;a 工具/&gt;\\n约 1,070,000 个结果\\n[17]&lt;div /&gt;\\n[18]&lt;a 新浪财经网/&gt;\\n[19]&lt;img /&gt;\\n[20]&lt;div https://cj.sina.com.cn › articles › view/&gt;\\n[21]&lt;h2 /&gt;\\n[22]&lt;a 招行有“一招（YiZhao）” - 新浪财经网/&gt;\\n2024年12月12日\\n· 如今，招行提出的“一招”大模型，不仅是一次技术创新，更是对银行业服务模式的一次大胆创新，它标志着银行行业将与人工智能深度融合，进入一个全新的智能化服务时代。\\n[23]&lt;a 一招大模型的图片&gt;一招大模型的图片\\nbing.com › images/&gt;\\n[24]&lt;div 单击以向右滚动;button/&gt;\\n[25]&lt;div listitem&gt;finance.sina.com.cn/&gt;\\n[26]&lt;a 搜索 一招大模型 的图像. finance.sina.com.cn. 550 × 170 · png/&gt;\\n[27]&lt;img /&gt;\\n[28]&lt;a 招商银行申请大模型商标：一招大模型_新浪财经_新浪网/&gt;\\n[29]&lt;div listitem&gt;zhuanzhi.ai/&gt;\\n[30]&lt;a 搜索 一招大模型 的图像. www.zhuanzhi.ai. 1080 × 608 · jpeg/&gt;\\n[31]&lt;img /&gt;\\n[32]&lt;a 【ChatGPT系列报告】国内大模型概览，42页ppt - 专知VIP/&gt;\\n[33]&lt;div listitem&gt;sohu.com/&gt;\\n[34]&lt;a 搜索 一招大模型 的图像. www.sohu.com. 1273 × 806 · jpeg/&gt;\\n[35]&lt;img /&gt;\\n[36]&lt;a 招商银行申请 “一招（YiZhao）大模型”商标-北京四海龙知识产权_金融_为客户提供_人工智能/&gt;\\n招商银行申请 “一招（YiZhao）大模型”商标-北京四海龙知识产权_金融_为客户提供_人工智能\\n什么是大模型？（超详细）大模型从入门到精通，看这一篇就够了-CSDN博客\\n查看全部\\n[37]&lt;a 查看所有图像/&gt;\\n[38]&lt;div /&gt;\\n[39]&lt;a ModelScope 魔搭社区/&gt;\\n[40]&lt;img /&gt;\\n[41]&lt;div https://www.modelscope.cn › models › CMB_AILab › summary/&gt;\\n[42]&lt;h2 /&gt;\\n[43]&lt;a 魔搭社区/&gt;\\n一招（YiZhao)是招商银行联合华为、智谱AI，在全国产的设备与训练框架下训练形成的金融领域大语言模型系列。 我们首先在大规模高质量数据上进行预训练，再通过高质量金融数据进行后期 …\\n[44]&lt;div /&gt;\\n[45]&lt;a 网易/&gt;\\n[46]&lt;img /&gt;\\n[47]&lt;div https://www.163.com › dy › article/&gt;\\n[48]&lt;h2 /&gt;\\n[49]&lt;a 招行有“一招（YiZhao）”|风控|金融|银行业 ... - 网易/&gt;\\n2024年12月12日\\n· 如今，招行提出的“一招”大模型，不仅是一次技术创新，更是对银行业服务模式的一次大胆创新，它标志着银行行业将与人工智能深度融合，进入一个全新的智能化服务时代。\\n[50]&lt;div /&gt;\\n[51]&lt;a 新浪财经/&gt;\\n[52]&lt;img /&gt;\\n[53]&lt;div https://finance.sina.com.cn › tob/&gt;\\n[54]&lt;h2 /&gt;\\n[55]&lt;a 招商银行申请大模型商标：一招大模型 - 新浪财经/&gt;\\n新浪科技讯12月11日上午消息，天眼查知识产权信息显示，近日，招商银行股份有限公司申请注册“一招（YiZhao）大模型”“招商银行一招（YiZhao）大 ...\\n[56]&lt;div /&gt;\\n[57]&lt;a 亿欧/&gt;\\n[58]&lt;img /&gt;\\n[59]&lt;div https://www.iyiou.com › data/&gt;\\n[60]&lt;h2 /&gt;\\n[61]&lt;a 招商银行申请注册“一招大模型”商标，聚焦人工智能领域发展/&gt;\\n2024年12月11日\\n· 招商银行股份有限公司近日申请注册“一招大模型”及相关商标，旨在推动人工智能技术在金融领域的应用与发展。 近日，根据天眼查知识产权信息显示，招商银行股份有限公 …\\n[62]&lt;div /&gt;\\n[63]&lt;a 搜狐/&gt;\\n[64]&lt;img /&gt;\\n[65]&lt;div https://www.sohu.com/&gt;\\n[66]&lt;h2 /&gt;\\n[67]&lt;a 招商银行申请‘一招大模型’商标：金融创新的未来或将从此开启！/&gt;\\n2024年12月11日\\n· 近日，招商银行股份有限公司在知识产权领域迈出了新的一步，成功申请了‘一招（YiZhao）大模型’及‘招商银行一招（YiZhao）大模型’的商标。 这一消息于12月11日披露，引 …\\n[68]&lt;div /&gt;\\n[69]&lt;a 百家号/&gt;\\n[70]&lt;img /&gt;\\n[71]&lt;div https://baijiahao.baidu.com/&gt;\\n[72]&lt;h2 /&gt;\\n[73]&lt;a 招商银行布局AI，申请“一招大模型”商标待审 - 百家号/&gt;\\n2024年12月11日\\n· 近期，招商银行股份有限公司在知识产权保护方面有新动作，据天眼查平台披露的信息，该行已正式提交了两项商标申请，分别为“一招（YiZhao）大模型”与“招商银行一 …\\n[74]&lt;div /&gt;\\n[75]&lt;a 搜狐/&gt;\\n[76]&lt;img /&gt;\\n[77]&lt;div https://www.sohu.com/&gt;\\n[78]&lt;h2 /&gt;\\n[79]&lt;a 招商银行再出大招，申请AI商标意在金融科技新潮流_YiZhao_尖 …/&gt;\\n[80]&lt;div /&gt;\\n[81]&lt;a 百家号/&gt;\\n[82]&lt;img /&gt;\\n[83]&lt;div https://baijiahao.baidu.com/&gt;\\n[84]&lt;h2 /&gt;\\n[85]&lt;a 招商银行申请大模型商标：一招大模型 - 百家号/&gt;\\n[86]&lt;div /&gt;\\n[87]&lt;a 腾讯网/&gt;\\n[88]&lt;img /&gt;\\n[89]&lt;div https://news.qq.com › rain/&gt;\\n[90]&lt;h2 /&gt;\\n[91]&lt;a 招商银行注册“一招大模型”商标 - 腾讯网/&gt;\\n[92]&lt;a 一招大模型商标/&gt;\\n[93]&lt;a 招行一招大模型/&gt;\\n[94]&lt;a 招商银行一招大模型/&gt;\\n[95]&lt;a 招行大模型/&gt;\\n[96]&lt;a 招商银行申请大模型/&gt;\\n[97]&lt;a 招商银行大模型/&gt;\\n[98]&lt;a 招商银行大模型商标/&gt;\\n[99]&lt;a 招商银行商标一招/&gt;\\n[100]&lt;a 第 1 页&gt;1/&gt;\\n[101]&lt;a 第 2 页&gt;2/&gt;\\n[102]&lt;a 第 3 页&gt;3/&gt;\\n[103]&lt;a 第 4 页&gt;4/&gt;\\n[104]&lt;a 下一页/&gt;\\n相关搜索\\n[105]&lt;a 一招大模型商标/&gt;\\n[106]&lt;a 招行一招大模型/&gt;\\n[107]&lt;a 招商银行一招大模型/&gt;\\n[108]&lt;a 招行大模型/&gt;\\n[109]&lt;a 招商银行申请大模型/&gt;\\n[110]&lt;a 招商银行大模型/&gt;\\n[111]&lt;a 招商银行大模型商标/&gt;\\n[112]&lt;a 招商银行商标一招/&gt;\\n[113]&lt;a 隐私声明和 Cookie/&gt;\\n[114]&lt;a 法律声明/&gt;\\n[115]&lt;a 广告/&gt;\\n[116]&lt;a 关于我们的广告/&gt;\\n[117]&lt;a 帮助/&gt;\\n[118]&lt;a button&gt;反馈/&gt;\\n[119]&lt;a 消费者健康隐私/&gt;\\n... 1294 pixels below - scroll or extract content to see more ...\\nCurrent step: 4/100Current date and time: 2025-03-27 17:53\\n&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;user&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;model&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;deepseek-r1-distill-qwen-32b&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;stream&quot;</span><span class=\"punctuation\">:</span> <span class=\"keyword\">false</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;temperature&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"microsoft-playwright-71k-star\"><a href=\"#microsoft-playwright-71k-star\" class=\"headerlink\" title=\"microsoft/playwright 71k star\"></a><a href=\"https://github.com/microsoft/playwright\">microsoft/<em>playwright</em> 71k star</a></h5><p><em><strong>Playwright</strong></em> is a framework for Web Testing and Automation. It allows testing Chromium, Firefox and WebKit with a single API.</p>\n<p>提供js、python、java等sdk允许不用语言通过playwright api操作浏览器</p>\n<h4 id=\"Computer-use\"><a href=\"#Computer-use\" class=\"headerlink\" title=\"Computer-use\"></a>Computer-use</h4><h5 id=\"claude-3-5-sonnet-20241022-computer-use-demo\"><a href=\"#claude-3-5-sonnet-20241022-computer-use-demo\" class=\"headerlink\" title=\"claude-3-5-sonnet-20241022 computer-use-demo\"></a><a href=\"https://github.com/anthropics/anthropic-quickstarts/tree/main/computer-use-demo\">claude-3-5-sonnet-20241022 computer-use-demo</a></h5><p>1022发布的开源demo，已经可以完成浏览网页，亚马逊购物，画图等功能。llm支持的actions如下：</p>\n<img src=\"./2025-03-27-16-12-45-image.png\" title=\"\" alt=\"\" width=\"412\">\n\n<p>computer-use-demo代码中会loop调用anthropic api并执行tool action直到llm返回中不包含tool action</p>\n<p><strong>“用画图画一只猫”</strong></p>\n<img src=\"/2025/03/26/manus-study/2025-03-27-15-45-22-image.png\" class=\"\">\n\n<h5 id=\"OpenAI-Computer-use-example\"><a href=\"#OpenAI-Computer-use-example\" class=\"headerlink\" title=\"OpenAI Computer-use-example\"></a><a href=\"https://platform.openai.com/docs/guides/tools-computer-use\">OpenAI Computer-use-example</a></h5><p>支持的actions：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">screenshot</span><br><span class=\"line\">click</span><br><span class=\"line\">double<span class=\"emphasis\">_click</span></span><br><span class=\"line\"><span class=\"emphasis\">type</span></span><br><span class=\"line\"><span class=\"emphasis\">keypress</span></span><br><span class=\"line\"><span class=\"emphasis\">move</span></span><br><span class=\"line\"><span class=\"emphasis\">scroll</span></span><br><span class=\"line\"><span class=\"emphasis\">wait</span></span><br><span class=\"line\"><span class=\"emphasis\">drag</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.openai.com/API/docs/images/cua_diagram.png\" alt=\"Computer use diagram\"></p>\n<h5 id=\"E2B-computer-use-agent\"><a href=\"#E2B-computer-use-agent\" class=\"headerlink\" title=\"E2B computer-use agent\"></a><a href=\"https://surf.e2b.dev/\">E2B computer-use agent</a></h5><p>一家为AI提供云虚拟化环境的公司，用开源大模型实现了较好的效果。</p>\n<img title=\"\" src=\"./2025-03-27-11-23-48-image.png\" alt=\"\" width=\"539\">\n\n<h5 id=\"微软-omniParser-omniTool\"><a href=\"#微软-omniParser-omniTool\" class=\"headerlink\" title=\"微软 omniParser omniTool\"></a><a href=\"https://github.com/microsoft/OmniParser/\">微软 omniParser omniTool</a></h5><img src=\"/2025/03/26/manus-study/2025-03-27-15-37-02-image.png\" class=\"\">\n\n<h5 id=\"OS-ATLAS-Foundation-Action-Model-for-Generalist-GUI-Agents\"><a href=\"#OS-ATLAS-Foundation-Action-Model-for-Generalist-GUI-Agents\" class=\"headerlink\" title=\"OS-ATLAS: Foundation Action Model for Generalist GUI Agents\"></a><a href=\"https://arxiv.org/abs/2410.23218\">OS-ATLAS: Foundation Action Model for Generalist GUI Agents</a></h5><h2 id=\"MCP及Agent接入\"><a href=\"#MCP及Agent接入\" class=\"headerlink\" title=\"MCP及Agent接入\"></a>MCP及Agent接入</h2><p><a href=\"https://modelcontextprotocol.io/introduction\">Introduction - Model Context Protocol</a></p>\n<p>提供一套标准协议，方便第三方能力(tools, prompts, resources等)快速接入LLM Agents</p>\n<img src=\"/2025/03/26/manus-study/2025-03-28-09-16-47-image.png\" class=\"\">\n\n<h4 id=\"MCP-core-concepts\"><a href=\"#MCP-core-concepts\" class=\"headerlink\" title=\"MCP core concepts\"></a>MCP core concepts</h4><img src=\"/2025/03/26/manus-study/2025-03-28-09-22-54-image.png\" class=\"\">\n\n<p>official java sdk </p>\n<img src=\"/2025/03/26/manus-study/2025-03-28-09-01-24-image.png\" class=\"\">\n\n<h4 id=\"MCP的支持及有趣案例\"><a href=\"#MCP的支持及有趣案例\" class=\"headerlink\" title=\"MCP的支持及有趣案例\"></a>MCP的支持及有趣案例</h4><p><strong>LLM App</strong>：Claude destop, OpenAI desktop，Cursor, VS code Cline</p>\n<p><strong>开源社区</strong>：langchain，dify</p>\n<p>MCP server案例：</p>\n<p>建模引擎：blender, unity</p>\n<img src=\"/2025/03/26/manus-study/2025-03-28-13-40-50-image.png\" class=\"\">\n\n<p>办公类：邮件、会议等</p>\n<p>游戏类：steam, minecraft</p>\n<p>地图类：谷歌、百度、高德地图</p>\n<p>Stock类：实时股价、选股</p>\n<p>IOT: HomeAssistant，智能家居</p>\n<h4 id=\"Open-Source-MCP-Servers\"><a href=\"#Open-Source-MCP-Servers\" class=\"headerlink\" title=\"Open-Source MCP Servers\"></a>Open-Source MCP Servers</h4><p><a href=\"https://github.com/punkpeye/awesome-mcp-servers\">GitHub - punkpeye/awesome-mcp-servers: A collection of MCP servers.</a></p>\n<p><a href=\"https://glama.ai/mcp/servers\">Open-Source MCP servers | Glama</a></p>\n<p><a href=\"https://mcp.so/\">MCP.SO</a></p>\n<h4 id=\"Cline测试\"><a href=\"#Cline测试\" class=\"headerlink\" title=\"Cline测试\"></a>Cline测试</h4><p>Cline安装配置过程略，mcp server仅安装playwright</p>\n<h6 id=\"测试结果\"><a href=\"#测试结果\" class=\"headerlink\" title=\"测试结果\"></a>测试结果</h6><p>task prompt：上网搜索一下有关一招大模型的信息，挑几篇网页详细阅读一下，整理出一篇介绍并保存到本地yizhao.md文件，注意标好引用链接地址。</p>\n<img src=\"/2025/03/26/manus-study/2025-03-28-09-46-40-image.png\" class=\"\">\n\n<img src=\"/2025/03/26/manus-study/2025-03-28-09-47-23-image.png\" class=\"\">\n\n<img src=\"/2025/03/26/manus-study/2025-03-28-09-49-17-image.png\" class=\"\">\n\n<img src=\"/2025/03/26/manus-study/2025-03-28-09-51-33-image.png\" class=\"\">\n\n<img src=\"/2025/03/26/manus-study/2025-03-28-09-52-06-image.png\" class=\"\">\n\n<img src=\"/2025/03/26/manus-study/2025-03-28-09-53-16-image.png\" class=\"\">\n\n<img src=\"/2025/03/26/manus-study/2025-03-28-09-53-54-image.png\" class=\"\">\n\n<img src=\"/2025/03/26/manus-study/2025-03-28-09-54-36-image.png\" class=\"\">\n\n<h6 id=\"cline-prompt-log\"><a href=\"#cline-prompt-log\" class=\"headerlink\" title=\"cline prompt log\"></a>cline prompt log</h6><p>cline systemPrompt 12k tokens，然后loop执行action<br><a href=\"./cline-exec-req.txt\">prompt</a></p>\n<h5 id=\"行内cline、mcp、大模型测试：\"><a href=\"#行内cline、mcp、大模型测试：\" class=\"headerlink\" title=\"行内cline、mcp、大模型测试：\"></a>行内cline、mcp、大模型测试：</h5><p>见内网</p>\n<p>总行团队一些案例</p>\n<h4 id=\"MCP发展\"><a href=\"#MCP发展\" class=\"headerlink\" title=\"MCP发展\"></a>MCP发展</h4><p>langchain社区：<a href=\"https://blog.langchain.dev/mcp-fad-or-fixture/\">MCP: Flash in the Pan or Future Standard?</a></p>\n<pre><code>\n</code></pre>\n"}],"PostAsset":[{"_id":"source/_posts/network-base/BGP_example.png","slug":"BGP_example.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/BGP_speaker.png","slug":"BGP_speaker.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/av_protocols.png","slug":"av_protocols.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/ble_osi.png","slug":"ble_osi.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/bridge_pic.png","slug":"bridge_pic.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/data_link_layer_frame.png","slug":"data_link_layer_frame.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/datalink_timewindow.png","slug":"datalink_timewindow.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/datalinklayer_sublayers.png","slug":"datalinklayer_sublayers.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/dhcp.png","slug":"dhcp.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/dns.png","slug":"dns.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/http_protocol.png","slug":"http_protocol.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/hub_pic.png","slug":"hub_pic.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/icmp_kinds.png","slug":"icmp_kinds.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/ip_group_question.png","slug":"ip_group_question.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/ip_nets.png","slug":"ip_nets.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/ip_offset.png","slug":"ip_offset.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/ip_packet.png","slug":"ip_packet.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/ip_routing_protocol.png","slug":"ip_routing_protocol.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/ipsec.png","slug":"ipsec.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/mac_addr.png","slug":"mac_addr.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/manchester.png","slug":"manchester.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/net_sec_key.png","slug":"net_sec_key.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/osi7.png","slug":"osi7.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/osi_pdu_pass.png","slug":"osi_pdu_pass.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/osi_transfer_example.png","slug":"osi_transfer_example.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/preamble.png","slug":"preamble.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/real_f5.png","slug":"real_f5.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/real_router.png","slug":"real_router.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/real_switch.png","slug":"real_switch.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/rip.png","slug":"rip.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/router_trans.png","slug":"router_trans.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/router_trans2.png","slug":"router_trans2.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/router_wan_lan.png","slug":"router_wan_lan.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/routing_table.png","slug":"routing_table.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/rtcp.png","slug":"rtcp.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/rtp_protocol.png","slug":"rtp_protocol.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/sec_mac.png","slug":"sec_mac.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/signature.png","slug":"signature.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/smtp.png","slug":"smtp.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/socket2.png","slug":"socket2.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/ssl.png","slug":"ssl.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/ssl_procedure.png","slug":"ssl_procedure.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/switch_net.png","slug":"switch_net.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/switch_pic.png","slug":"switch_pic.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/syscall.png","slug":"syscall.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/tcp_buffer.png","slug":"tcp_buffer.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/tcp_bye_handshake.png","slug":"tcp_bye_handshake.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/tcp_bytes_stream.png","slug":"tcp_bytes_stream.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/tcp_congest.png","slug":"tcp_congest.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/tcp_handshake.png","slug":"tcp_handshake.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/tcp_protocol.png","slug":"tcp_protocol.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/tcp_rto.png","slug":"tcp_rto.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/tcp_sack.png","slug":"tcp_sack.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/tcp_slow_start.png","slug":"tcp_slow_start.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/tcp_state.png","slug":"tcp_state.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/tcp_window.png","slug":"tcp_window.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/transport_process.png","slug":"transport_process.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/udp_protocol.png","slug":"udp_protocol.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/对称密钥分配.png","slug":"对称密钥分配.png","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/network-base/网络通信.drawio","slug":"网络通信.drawio","post":"ckzcu8epe0000u4je09ey43dg","modified":0,"renderable":0},{"_id":"source/_posts/coding-guidelines/code_guideline.drawio","slug":"code_guideline.drawio","post":"cl0vwgxjj0000m79rcb58hdw1","modified":0,"renderable":0},{"_id":"source/_posts/coding-guidelines/design-1.png","slug":"design-1.png","post":"cl0vwgxjj0000m79rcb58hdw1","modified":0,"renderable":0},{"_id":"source/_posts/coding-guidelines/design-4.png","slug":"design-4.png","post":"cl0vwgxjj0000m79rcb58hdw1","modified":0,"renderable":0},{"_id":"source/_posts/coding-guidelines/design1.png","slug":"design1.png","post":"cl0vwgxjj0000m79rcb58hdw1","modified":0,"renderable":0},{"_id":"source/_posts/coding-guidelines/design2.png","slug":"design2.png","post":"cl0vwgxjj0000m79rcb58hdw1","modified":0,"renderable":0},{"_id":"source/_posts/coding-guidelines/design3.png","slug":"design3.png","post":"cl0vwgxjj0000m79rcb58hdw1","modified":0,"renderable":0},{"_id":"source/_posts/coding-guidelines/design4.png","slug":"design4.png","post":"cl0vwgxjj0000m79rcb58hdw1","modified":0,"renderable":0},{"_id":"source/_posts/coding-guidelines/git-0.png","slug":"git-0.png","post":"cl0vwgxjj0000m79rcb58hdw1","modified":0,"renderable":0},{"_id":"source/_posts/coding-guidelines/git-1-1.png","slug":"git-1-1.png","post":"cl0vwgxjj0000m79rcb58hdw1","modified":0,"renderable":0},{"_id":"source/_posts/coding-guidelines/git-1.png","slug":"git-1.png","post":"cl0vwgxjj0000m79rcb58hdw1","modified":0,"renderable":0},{"_id":"source/_posts/coding-guidelines/git-2.png","slug":"git-2.png","post":"cl0vwgxjj0000m79rcb58hdw1","modified":0,"renderable":0},{"_id":"source/_posts/coding-guidelines/git-3.png","slug":"git-3.png","post":"cl0vwgxjj0000m79rcb58hdw1","modified":0,"renderable":0},{"_id":"source/_posts/coding-guidelines/git-4.png","slug":"git-4.png","post":"cl0vwgxjj0000m79rcb58hdw1","modified":0,"renderable":0},{"_id":"source/_posts/coding-guidelines/git-5.png","slug":"git-5.png","post":"cl0vwgxjj0000m79rcb58hdw1","modified":0,"renderable":0},{"_id":"source/_posts/coding-guidelines/~$code_guideline.drawio.dtmp","slug":"~$code_guideline.drawio.dtmp","post":"cl0vwgxjj0000m79rcb58hdw1","modified":0,"renderable":0},{"_id":"source/_posts/coding-guidelines/git-miss.png","slug":"git-miss.png","post":"cl0vwgxjj0000m79rcb58hdw1","modified":0,"renderable":0},{"_id":"source/_posts/shardingsphere/DataSource.png","slug":"DataSource.png","post":"cl3bnaatf0000859rasdebkbd","modified":0,"renderable":0},{"_id":"source/_posts/shardingsphere/datasource-impl.png","slug":"datasource-impl.png","post":"cl3bnaatf0000859rasdebkbd","modified":0,"renderable":0},{"_id":"source/_posts/shardingsphere/datasource-pool.png","slug":"datasource-pool.png","post":"cl3bnaatf0000859rasdebkbd","modified":0,"renderable":0},{"_id":"source/_posts/shardingsphere/intro.png","slug":"intro.png","post":"cl3bnaatf0000859rasdebkbd","modified":0,"renderable":0},{"_id":"source/_posts/shardingsphere/jdbc-level.png","slug":"jdbc-level.png","post":"cl3bnaatf0000859rasdebkbd","modified":0,"renderable":0},{"_id":"source/_posts/shardingsphere/jdbc-package.png","slug":"jdbc-package.png","post":"cl3bnaatf0000859rasdebkbd","modified":0,"renderable":0},{"_id":"source/_posts/shardingsphere/mybatis-arch.png","slug":"mybatis-arch.png","post":"cl3bnaatf0000859rasdebkbd","modified":0,"renderable":0},{"_id":"source/_posts/shardingsphere/mybatis-execute.png","slug":"mybatis-execute.png","post":"cl3bnaatf0000859rasdebkbd","modified":0,"renderable":0},{"_id":"source/_posts/shardingsphere/mybatis-package.png","slug":"mybatis-package.png","post":"cl3bnaatf0000859rasdebkbd","modified":0,"renderable":0},{"_id":"source/_posts/shardingsphere/mybatis-sharding-jdbc.png","slug":"mybatis-sharding-jdbc.png","post":"cl3bnaatf0000859rasdebkbd","modified":0,"renderable":0},{"_id":"source/_posts/shardingsphere/ppt.drawio","slug":"ppt.drawio","post":"cl3bnaatf0000859rasdebkbd","modified":0,"renderable":0},{"_id":"source/_posts/shardingsphere/sharding-core-package.png","slug":"sharding-core-package.png","post":"cl3bnaatf0000859rasdebkbd","modified":0,"renderable":0},{"_id":"source/_posts/shardingsphere/sharding-jdbc-sequence.png","slug":"sharding-jdbc-sequence.png","post":"cl3bnaatf0000859rasdebkbd","modified":0,"renderable":0},{"_id":"source/_posts/shardingsphere/sharding-jdbc.png","slug":"sharding-jdbc.png","post":"cl3bnaatf0000859rasdebkbd","modified":0,"renderable":0},{"_id":"source/_posts/detect-ip/finger1.png","slug":"finger1.png","post":"clgom9bml0000w89r3fm3bx3f","modified":0,"renderable":0},{"_id":"source/_posts/detect-ip/finger2.png","slug":"finger2.png","post":"clgom9bml0000w89r3fm3bx3f","modified":0,"renderable":0},{"_id":"source/_posts/detect-ip/ip-detect.png","slug":"ip-detect.png","post":"clgom9bml0000w89r3fm3bx3f","modified":0,"renderable":0},{"_id":"source/_posts/detect-ip/ip-show.png","slug":"ip-show.png","post":"clgom9bml0000w89r3fm3bx3f","modified":0,"renderable":0},{"_id":"source/_posts/kafkaConsumerBug/kafka-clients+0.10.2.1+空poll导致频繁youngGC的问题剖析.doc","slug":"kafka-clients+0.10.2.1+空poll导致频繁youngGC的问题剖析.doc","post":"clicy8u1t0000dd9r5drpb8v5","modified":0,"renderable":0},{"_id":"source/_posts/kafkaConsumerBug/p1-jvmgc.png","slug":"p1-jvmgc.png","post":"clicy8u1t0000dd9r5drpb8v5","modified":0,"renderable":0},{"_id":"source/_posts/kafkaConsumerBug/p2-compare.png","slug":"p2-compare.png","post":"clicy8u1t0000dd9r5drpb8v5","modified":0,"renderable":0},{"_id":"source/_posts/kafkaConsumerBug/p3.png","slug":"p3.png","post":"clicy8u1t0000dd9r5drpb8v5","modified":0,"renderable":0},{"_id":"source/_posts/kafkaConsumerBug/p4.png","slug":"p4.png","post":"clicy8u1t0000dd9r5drpb8v5","modified":0,"renderable":0},{"_id":"source/_posts/kafkaConsumerBug/p5.png","slug":"p5.png","post":"clicy8u1t0000dd9r5drpb8v5","modified":0,"renderable":0},{"_id":"source/_posts/kafkaConsumerBug/p6.png","slug":"p6.png","post":"clicy8u1t0000dd9r5drpb8v5","modified":0,"renderable":0},{"_id":"source/_posts/kafkaConsumerBug/p7.png","slug":"p7.png","post":"clicy8u1t0000dd9r5drpb8v5","modified":0,"renderable":0},{"_id":"source/_posts/kafkaConsumerBug/p8.png","slug":"p8.png","post":"clicy8u1t0000dd9r5drpb8v5","modified":0,"renderable":0},{"_id":"source/_posts/kafkaConsumerBug/p9.png","slug":"p9.png","post":"clicy8u1t0000dd9r5drpb8v5","modified":0,"renderable":0},{"_id":"source/_posts/kafkaConsumerBug/spring-kafka学习.drawio","slug":"spring-kafka学习.drawio","post":"clicy8u1t0000dd9r5drpb8v5","modified":0,"renderable":0},{"_id":"source/_posts/oauth2/flow.webp","slug":"flow.webp","post":"clmg1m9980000ut9rhbkmgoz7","modified":0,"renderable":0},{"_id":"source/_posts/oauth2/github_ac.png","slug":"github_ac.png","post":"clmg1m9980000ut9rhbkmgoz7","modified":0,"renderable":0},{"_id":"source/_posts/oauth2/github_api.png","slug":"github_api.png","post":"clmg1m9980000ut9rhbkmgoz7","modified":0,"renderable":0},{"_id":"source/_posts/oauth2/github_callback.png","slug":"github_callback.png","post":"clmg1m9980000ut9rhbkmgoz7","modified":0,"renderable":0},{"_id":"source/_posts/oauth2/github_new_app.png","slug":"github_new_app.png","post":"clmg1m9980000ut9rhbkmgoz7","modified":0,"renderable":0},{"_id":"source/_posts/oauth2/github_oauth.png","slug":"github_oauth.png","post":"clmg1m9980000ut9rhbkmgoz7","modified":0,"renderable":0},{"_id":"source/_posts/oauth2/github_registered.png","slug":"github_registered.png","post":"clmg1m9980000ut9rhbkmgoz7","modified":0,"renderable":0},{"_id":"source/_posts/oauth2/oauth2.drawio","slug":"oauth2.drawio","post":"clmg1m9980000ut9rhbkmgoz7","modified":0,"renderable":0},{"_id":"source/_posts/manus-study/2025-03-26-14-13-37-image.png","slug":"2025-03-26-14-13-37-image.png","post":"cm8seq06q0000oi9r075rhwl1","modified":0,"renderable":0},{"_id":"source/_posts/manus-study/2025-03-26-14-15-14-image.png","slug":"2025-03-26-14-15-14-image.png","post":"cm8seq06q0000oi9r075rhwl1","modified":0,"renderable":0},{"_id":"source/_posts/manus-study/2025-03-26-14-20-28-image.png","slug":"2025-03-26-14-20-28-image.png","post":"cm8seq06q0000oi9r075rhwl1","modified":0,"renderable":0},{"_id":"source/_posts/manus-study/2025-03-26-14-22-24-image.png","slug":"2025-03-26-14-22-24-image.png","post":"cm8seq06q0000oi9r075rhwl1","modified":0,"renderable":0},{"_id":"source/_posts/manus-study/2025-03-26-17-13-21-image.png","slug":"2025-03-26-17-13-21-image.png","post":"cm8seq06q0000oi9r075rhwl1","modified":0,"renderable":0},{"_id":"source/_posts/manus-study/2025-03-26-17-14-54-image.png","slug":"2025-03-26-17-14-54-image.png","post":"cm8seq06q0000oi9r075rhwl1","modified":0,"renderable":0},{"_id":"source/_posts/manus-study/2025-03-26-17-27-29-image.png","slug":"2025-03-26-17-27-29-image.png","post":"cm8seq06q0000oi9r075rhwl1","modified":0,"renderable":0},{"_id":"source/_posts/manus-study/2025-03-26-17-28-45-image.png","slug":"2025-03-26-17-28-45-image.png","post":"cm8seq06q0000oi9r075rhwl1","modified":0,"renderable":0},{"_id":"source/_posts/manus-study/2025-03-27-11-23-48-image.png","slug":"2025-03-27-11-23-48-image.png","post":"cm8seq06q0000oi9r075rhwl1","modified":0,"renderable":0},{"_id":"source/_posts/manus-study/2025-03-27-11-34-31-image.png","slug":"2025-03-27-11-34-31-image.png","post":"cm8seq06q0000oi9r075rhwl1","modified":0,"renderable":0},{"_id":"source/_posts/manus-study/2025-03-27-14-05-43-image.png","slug":"2025-03-27-14-05-43-image.png","post":"cm8seq06q0000oi9r075rhwl1","modified":0,"renderable":0},{"_id":"source/_posts/manus-study/2025-03-27-14-10-23-image.png","slug":"2025-03-27-14-10-23-image.png","post":"cm8seq06q0000oi9r075rhwl1","modified":0,"renderable":0},{"_id":"source/_posts/manus-study/2025-03-27-14-29-59-image.png","slug":"2025-03-27-14-29-59-image.png","post":"cm8seq06q0000oi9r075rhwl1","modified":0,"renderable":0},{"_id":"source/_posts/manus-study/2025-03-27-14-51-50-image.png","slug":"2025-03-27-14-51-50-image.png","post":"cm8seq06q0000oi9r075rhwl1","modified":0,"renderable":0},{"_id":"source/_posts/manus-study/2025-03-27-15-08-28-image.png","slug":"2025-03-27-15-08-28-image.png","post":"cm8seq06q0000oi9r075rhwl1","modified":0,"renderable":0},{"_id":"source/_posts/manus-study/2025-03-27-15-08-32-image.png","slug":"2025-03-27-15-08-32-image.png","post":"cm8seq06q0000oi9r075rhwl1","modified":0,"renderable":0},{"_id":"source/_posts/manus-study/2025-03-27-15-37-02-image.png","slug":"2025-03-27-15-37-02-image.png","post":"cm8seq06q0000oi9r075rhwl1","modified":0,"renderable":0},{"_id":"source/_posts/manus-study/2025-03-27-15-45-22-image.png","slug":"2025-03-27-15-45-22-image.png","post":"cm8seq06q0000oi9r075rhwl1","modified":0,"renderable":0},{"_id":"source/_posts/manus-study/2025-03-27-16-12-45-image.png","slug":"2025-03-27-16-12-45-image.png","post":"cm8seq06q0000oi9r075rhwl1","modified":0,"renderable":0},{"_id":"source/_posts/manus-study/2025-03-27-18-16-45-image.png","slug":"2025-03-27-18-16-45-image.png","post":"cm8seq06q0000oi9r075rhwl1","modified":0,"renderable":0},{"_id":"source/_posts/manus-study/2025-03-28-09-01-24-image.png","slug":"2025-03-28-09-01-24-image.png","post":"cm8seq06q0000oi9r075rhwl1","modified":0,"renderable":0},{"_id":"source/_posts/manus-study/2025-03-28-09-07-01-image.png","slug":"2025-03-28-09-07-01-image.png","post":"cm8seq06q0000oi9r075rhwl1","modified":0,"renderable":0},{"_id":"source/_posts/manus-study/2025-03-28-09-11-23-image.png","slug":"2025-03-28-09-11-23-image.png","post":"cm8seq06q0000oi9r075rhwl1","modified":0,"renderable":0},{"_id":"source/_posts/manus-study/2025-03-28-09-16-47-image.png","slug":"2025-03-28-09-16-47-image.png","post":"cm8seq06q0000oi9r075rhwl1","modified":0,"renderable":0},{"_id":"source/_posts/manus-study/2025-03-28-09-22-54-image.png","slug":"2025-03-28-09-22-54-image.png","post":"cm8seq06q0000oi9r075rhwl1","modified":0,"renderable":0},{"_id":"source/_posts/manus-study/2025-03-28-09-46-40-image.png","slug":"2025-03-28-09-46-40-image.png","post":"cm8seq06q0000oi9r075rhwl1","modified":0,"renderable":0},{"_id":"source/_posts/manus-study/2025-03-28-09-47-23-image.png","slug":"2025-03-28-09-47-23-image.png","post":"cm8seq06q0000oi9r075rhwl1","modified":0,"renderable":0},{"_id":"source/_posts/manus-study/2025-03-28-09-49-17-image.png","slug":"2025-03-28-09-49-17-image.png","post":"cm8seq06q0000oi9r075rhwl1","modified":0,"renderable":0},{"_id":"source/_posts/manus-study/2025-03-28-09-50-59-image.png","slug":"2025-03-28-09-50-59-image.png","post":"cm8seq06q0000oi9r075rhwl1","modified":0,"renderable":0},{"_id":"source/_posts/manus-study/2025-03-28-09-51-33-image.png","slug":"2025-03-28-09-51-33-image.png","post":"cm8seq06q0000oi9r075rhwl1","modified":0,"renderable":0},{"_id":"source/_posts/manus-study/2025-03-28-09-52-06-image.png","slug":"2025-03-28-09-52-06-image.png","post":"cm8seq06q0000oi9r075rhwl1","modified":0,"renderable":0},{"_id":"source/_posts/manus-study/2025-03-28-09-53-16-image.png","slug":"2025-03-28-09-53-16-image.png","post":"cm8seq06q0000oi9r075rhwl1","modified":0,"renderable":0},{"_id":"source/_posts/manus-study/2025-03-28-09-53-54-image.png","slug":"2025-03-28-09-53-54-image.png","post":"cm8seq06q0000oi9r075rhwl1","modified":0,"renderable":0},{"_id":"source/_posts/manus-study/2025-03-28-09-54-36-image.png","slug":"2025-03-28-09-54-36-image.png","post":"cm8seq06q0000oi9r075rhwl1","modified":0,"renderable":0},{"_id":"source/_posts/manus-study/2025-03-28-13-40-50-image.png","slug":"2025-03-28-13-40-50-image.png","post":"cm8seq06q0000oi9r075rhwl1","modified":0,"renderable":0},{"_id":"source/_posts/manus-study/cline-exec-req.txt","slug":"cline-exec-req.txt","post":"cm8seq06q0000oi9r075rhwl1","modified":1,"renderable":0}],"PostCategory":[],"PostTag":[{"post_id":"cl3bnaatf0000859rasdebkbd","tag_id":"cl3bnebty0000ap9r4xpa4ts1","_id":"cl3bnebu00001ap9r2raibe7t"},{"post_id":"cl3bnaatl0001859rgicc24ur","tag_id":"cl3bpzjua00000w9r25b5bahp","_id":"cl3bpzjuc00010w9r6t7qaat5"}],"Tag":[{"name":"sharding, jdbc","_id":"cl3bnebty0000ap9r4xpa4ts1"},{"name":"socketio","_id":"cl3bpzjua00000w9r25b5bahp"}]}}